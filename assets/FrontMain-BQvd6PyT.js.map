{"version":3,"file":"FrontMain-BQvd6PyT.js","sources":["../../src/components/config/Particles-config.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","../../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","../../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","../../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","../../node_modules/@tsparticles/engine/browser/Utils/Utils.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","../../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","../../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","../../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../../node_modules/@tsparticles/engine/browser/Core/Particle.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../../node_modules/@tsparticles/engine/browser/Types/RangeType.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../../node_modules/@tsparticles/engine/browser/Core/Particles.js","../../node_modules/@tsparticles/engine/browser/Core/Retina.js","../../node_modules/@tsparticles/engine/browser/Core/Container.js","../../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","../../node_modules/@tsparticles/engine/browser/Core/Engine.js","../../node_modules/@tsparticles/engine/browser/Utils/HslColorManager.js","../../node_modules/@tsparticles/engine/browser/Utils/RgbColorManager.js","../../node_modules/@tsparticles/engine/browser/init.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","../../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","../../node_modules/@tsparticles/engine/browser/index.js","../../node_modules/@tsparticles/react/dist/Particles.js","../../node_modules/@tsparticles/react/dist/index.js","../../node_modules/@tsparticles/move-base/browser/Utils.js","../../node_modules/@tsparticles/move-base/browser/BaseMover.js","../../node_modules/@tsparticles/move-base/browser/index.js","../../node_modules/@tsparticles/shape-circle/browser/Utils.js","../../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","../../node_modules/@tsparticles/shape-circle/browser/index.js","../../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","../../node_modules/@tsparticles/updater-color/browser/index.js","../../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","../../node_modules/@tsparticles/updater-opacity/browser/index.js","../../node_modules/@tsparticles/updater-out-modes/browser/Utils.js","../../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","../../node_modules/@tsparticles/updater-out-modes/browser/index.js","../../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","../../node_modules/@tsparticles/updater-size/browser/index.js","../../node_modules/@tsparticles/basic/browser/index.js","../../node_modules/@tsparticles/plugin-easing-quad/browser/index.js","../../node_modules/@tsparticles/shape-emoji/browser/Utils.js","../../node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","../../node_modules/@tsparticles/shape-emoji/browser/index.js","../../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","../../node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","../../node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","../../node_modules/@tsparticles/interaction-external-attract/browser/index.js","../../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../../node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","../../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","../../node_modules/@tsparticles/interaction-external-bounce/browser/index.js","../../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","../../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","../../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","../../node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","../../node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","../../node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","../../node_modules/@tsparticles/interaction-external-bubble/browser/index.js","../../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","../../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","../../node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","../../node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","../../node_modules/@tsparticles/interaction-external-connect/browser/index.js","../../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","../../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","../../node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","../../node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","../../node_modules/@tsparticles/interaction-external-grab/browser/index.js","../../node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","../../node_modules/@tsparticles/interaction-external-pause/browser/index.js","../../node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","../../node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","../../node_modules/@tsparticles/interaction-external-push/browser/index.js","../../node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","../../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","../../node_modules/@tsparticles/interaction-external-remove/browser/index.js","../../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","../../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","../../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","../../node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","../../node_modules/@tsparticles/interaction-external-repulse/browser/index.js","../../node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","../../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","../../node_modules/@tsparticles/interaction-external-slow/browser/index.js","../../node_modules/@tsparticles/shape-image/browser/Utils.js","../../node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","../../node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","../../node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","../../node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","../../node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","../../node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","../../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","../../node_modules/@tsparticles/shape-image/browser/index.js","../../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","../../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","../../node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","../../node_modules/@tsparticles/updater-life/browser/Utils.js","../../node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","../../node_modules/@tsparticles/updater-life/browser/index.js","../../node_modules/@tsparticles/shape-line/browser/Utils.js","../../node_modules/@tsparticles/shape-line/browser/LineDrawer.js","../../node_modules/@tsparticles/shape-line/browser/index.js","../../node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","../../node_modules/@tsparticles/move-parallax/browser/index.js","../../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","../../node_modules/@tsparticles/interaction-particles-attract/browser/index.js","../../node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","../../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","../../node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","../../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","../../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","../../node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","../../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","../../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","../../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","../../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","../../node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","../../node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","../../node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","../../node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","../../node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","../../node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","../../node_modules/@tsparticles/interaction-particles-links/browser/index.js","../../node_modules/@tsparticles/shape-polygon/browser/Utils.js","../../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","../../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","../../node_modules/@tsparticles/shape-polygon/browser/index.js","../../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","../../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","../../node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","../../node_modules/@tsparticles/updater-rotate/browser/index.js","../../node_modules/@tsparticles/shape-square/browser/Utils.js","../../node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","../../node_modules/@tsparticles/shape-square/browser/index.js","../../node_modules/@tsparticles/shape-star/browser/Utils.js","../../node_modules/@tsparticles/shape-star/browser/StarDrawer.js","../../node_modules/@tsparticles/shape-star/browser/index.js","../../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","../../node_modules/@tsparticles/updater-stroke-color/browser/index.js","../../node_modules/@tsparticles/slim/browser/index.js","../../src/components/ParticleBackground.jsx","../../src/components/FrontMain.jsx"],"sourcesContent":["// config/Particles-config.js\r\nconst particlesConfig = {\r\n  background: {\r\n    color: {\r\n      value: \"#0c0f13\",\r\n    },\r\n  },\r\n  fpsLimit: 120,\r\n  interactivity: {\r\n    events: {\r\n      onClick: {\r\n        enable: true,\r\n        mode: \"push\",\r\n      },\r\n      onHover: {\r\n        enable: true,\r\n        mode: \"repulse\",\r\n      },\r\n    },\r\n    modes: {\r\n      push: {\r\n        quantity: 4,\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4,\r\n      },\r\n    },\r\n  },\r\n  particles: {\r\n    color: {\r\n      value: \"#ffffff\",\r\n    },\r\n    links: {\r\n      color: \"#ffffff\",\r\n      distance: 150,\r\n      enable: true,\r\n      opacity: 0.5,\r\n      width: 1,\r\n    },\r\n    move: {\r\n      direction: \"none\",\r\n      enable: true,\r\n      outModes: {\r\n        default: \"bounce\",\r\n      },\r\n      random: false,\r\n      speed: 6,\r\n      straight: false,\r\n    },\r\n    number: {\r\n      density: {\r\n        enable: true,\r\n      },\r\n      value: 80,\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n    },\r\n    size: {\r\n      value: { min: 1, max: 5 },\r\n    },\r\n  },\r\n  detectRetina: true,\r\n};\r\n\r\nexport default particlesConfig;\r\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\nexport const percentDenominator = 100;\nexport const halfRandom = 0.5;\nexport const millisecondsToSeconds = 1000;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { errorPrefix } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, squareExp = 2, inverseFactorNumerator = 1.0;\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : origin.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? origin.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(origin.x, origin.y, origin.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length, noLength = 0;\n        if (length != noLength) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), origin.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : origin.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, origin.z);\n    }\n    static get origin() {\n        return Vector.create(origin.x, origin.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nimport { percentDenominator } from \"../Core/Utils/Constants.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n}, easingFunctions = new Map(), double = 2, doublePI = Math.PI * double;\nexport function addEasing(name, easing) {\n    if (easingFunctions.get(name)) {\n        return;\n    }\n    easingFunctions.set(name, easing);\n}\nexport function getEasing(name) {\n    return easingFunctions.get(name) ?? ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    const empty = 0, half = 0.5, quarter = 0.25, threeQuarter = half + quarter;\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    const double = 2;\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { halfRandom, millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data, half = 0.5, minVelocity = 0;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed), radix = 16, defaultAlpha = 1, alphaFactor = 0xff;\n    return result\n        ? {\n            a: result[RgbIndexes.a] !== undefined\n                ? parseInt(result[RgbIndexes.a], radix) / alphaFactor\n                : defaultAlpha,\n            b: parseInt(result[RgbIndexes.b], radix),\n            g: parseInt(result[RgbIndexes.g], radix),\n            r: parseInt(result[RgbIndexes.r], radix),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, half = 0.5, double = 2, r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const hMax = 360, sMax = 100, lMax = 100, sMin = 0, lMin = 0, h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax, rgbFactor = 255, triple = 3;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const half = 0.5, double = 2, channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1, sextuple = 6;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, sNormalizedOffset = 1, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseNumerator = 1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const defaultMin = 0, fixedMin = min ?? defaultMin, rgbMax = 256;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    const defaultOpacity = 1;\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    const defaultOpacity = 1;\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    const defaultVelocity = 0, decayOffset = 1, defaultLoops = 0, defaultTime = 0;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    const ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nconst origin = { x: 0, y: 0 }, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n};\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, origin.x, origin.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), defaultAngle = 0, angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, identity = 1, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : transform.b ?? defaultTransform.b,\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : transform.c ?? defaultTransform.c,\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const minStrokeWidth = 0, strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data, minStrokeWidth = 0;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    const lFactor = 1;\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","import { isArray, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nimport { isString } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nconst defaultPosition = 50;\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? defaultPosition,\n                y: data.position.y ?? defaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2, randomString = \"random\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomString) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomString) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst squareExp = 2;\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e, lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this), minIndex = 0;\n            if (idx >= minIndex) {\n                const deleteCount = 1;\n                mainArr.splice(idx, deleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener), minIndex = 0;\n        if (idx < minIndex) {\n            return;\n        }\n        const deleteCount = 1;\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            const firstIndex = 0;\n            canvasEl = existingCanvases[firstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.5.0\";\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            const deleteCount = 1;\n            items.splice(index, deleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const randomFactor = 10000, id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * randomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), minIndex = 0, newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= minIndex) {\n            const old = this.item(oldIndex), one = 1, none = 0, deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils.js\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { Engine } from \"./Core/Engine.js\";\nimport { HslColorManager } from \"./Utils/HslColorManager.js\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager.js\";\nimport { addColorManager } from \"./Utils/ColorUtils.js\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === RotateDirection.clockwise ? Math.cos : Math.sin,\n        y: particle.spin.direction === RotateDirection.clockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    const minVelocity = 0;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: particle.velocity.angle,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container));\n    }, refresh);\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = [];\n    }\n    init(particle) {\n        this.updaters = [];\n        const outModes = particle.options.move.outModes;\n        if (checkOutMode(outModes, OutMode.bounce)) {\n            this.updaters.push(new BounceOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.out)) {\n            this.updaters.push(new OutOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.destroy)) {\n            this.updaters.push(new DestroyOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.none)) {\n            this.updaters.push(new NoneOutMode(this.container));\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { EasingType, addEasing } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(EasingType.easeInQuad, value => value ** 2);\n    addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2);\n    addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n    await Promise.resolve();\n}\n","export function drawEmoji(data) {\n    const { context, particle, radius, opacity } = data, emojiData = particle.emojiData, double = 2, diameter = radius * double, previousAlpha = context.globalAlpha;\n    if (!emojiData) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(emojiData, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"';\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, emojiData] of this._emojiShapeDict) {\n            if (emojiData instanceof ImageBitmap) {\n                emojiData?.close();\n                this._emojiShapeDict.delete(key);\n            }\n        }\n    }\n    draw(data) {\n        drawEmoji(data);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        delete particle.emojiData;\n    }\n    particleInit(container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData), font = shapeData.font ?? defaultFont;\n        if (!emoji) {\n            return;\n        }\n        const key = `${emoji}_${font}`, existingData = this._emojiShapeDict.get(key);\n        if (existingData) {\n            particle.emojiData = existingData;\n            return;\n        }\n        const canvasSize = getRangeMax(particle.size.value) * double;\n        let emojiData;\n        const maxSize = getRangeMax(particle.size.value);\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(emoji, maxSize, maxSize);\n            emojiData = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(emoji, maxSize, maxSize);\n            emojiData = canvas;\n        }\n        this._emojiShapeDict.set(key, emojiData);\n        particle.emojiData = emojiData;\n    }\n}\n","import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { Circle, Vector, clamp, getDistances, getEasing, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { OptionsColor } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { EasingType } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : image.ratio ?? defaultRatio,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container));\n    }, refresh);\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container));\n    }, refresh);\n}\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","// ParticleBackground.js\r\nimport particlesConfig from './config/Particles-config';\r\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\nimport { loadSlim } from \"@tsparticles/slim\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst ParticleBackground = () => {\r\n    const [init, setInit] = useState(false);\r\n\r\n    // this should be run only once per application lifetime\r\n    useEffect(() => {\r\n        initParticlesEngine(async (engine) => {\r\n            // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n            // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n            // starting from v2 you can add only the features you need reducing the bundle size\r\n            //await loadAll(engine);\r\n            //await loadFull(engine);\r\n            await loadSlim(engine);\r\n            //await loadBasic(engine);\r\n        }).then(() => {\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    const particlesLoaded = (container) => {\r\n        // console.log(container);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {init && (\r\n                <Particles\r\n                    id=\"tsparticles\"\r\n                    particlesLoaded={particlesLoaded}\r\n                    options={particlesConfig}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ParticleBackground;\r\n\r\n","\r\nimport ParticleBackground from \"./ParticleBackground\";\r\n\r\nconst FrontMain = () => {\r\n  return (\r\n    <>\r\n      <div className=\"relative w-full h-screen bg-transparent\">\r\n        <ParticleBackground />\r\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-center\">\r\n          <h1 className=\"text-4xl md:text-6xl font-bold\">Hello, I'm Akshit</h1>\r\n          <p className=\"text-xl md:text-2xl\">I'm a Full Stack Developer</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrontMain;"],"names":["particlesConfig","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","percentDenominator","halfRandom","millisecondsToSeconds","MoveDirection","isBoolean","arg","isString","isNumber","isObject","isArray","origin","squareExp","inverseFactorNumerator","Vector3d","xOrCoords","y","z","angle","length","coords3d","source","x","v","n","c","v3d","Vector","_random","_animationLoop","cb","idx","easingFunctions","double","doublePI","addEasing","name","easing","getEasing","value","getRandom","clamp","animate","fn","cancelAnimation","handle","num","min","max","mix","comp1","comp2","weight1","weight2","randomInRange","r","getRangeMax","minOffset","getRangeMin","getRangeValue","setRangeValue","getDistances","pointA","pointB","dx","dy","getDistance","degToRad","degrees","getParticleDirectionAngle","direction","position","center","empty","half","quarter","threeQuarter","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","data","_a","_b","parseAlpha","input","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","_logger","getLogger","rectSideBounce","res","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","minVelocity","checkSelector","element","selectors","executeOnSingleOrMultiple","selector","t","isSsr","hasMatchMedia","safeMatchMedia","query","safeIntersectionObserver","callback","safeMutationObserver","isInArray","array","loadFont","font","weight","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","size","offset","radius","areBoundsInside","calculateBounds","bounds","inside","deepExtend","destination","sources","sourceIsArray","key","sourceDict","destDict","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","div","divMode","singleDivModeExecute","circleBounceDataFromParticle","p","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","pPos","bounceOptions","resH","resV","obj","item","itemFromSingleOrMultiple","initParticleNumericAnimationValue","options","pxRatio","valueRange","animationOptions","decayOffset","autoStatus","getPositionOrSize","positionOrSize","canvasSize","_","rest","getPosition","checkDestroy","destroyType","minValue","maxValue","updateAnimation","changeDirection","delta","decay","AlterType","RgbIndexes","randomColorValue","midColorValue","colorManagers","addColorManager","manager","stringToRgba","shorthandRegex","hexFixed","g","b","a","regex","result","radix","rangeColorToRgb","color","colorToRgb","getRandomRgbColor","stringToRgb","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","hslToRgb","hsl","h","s","l","hNormalized","sNormalized","lNormalized","rgbFactor","triple","grayscaleValue","channel","temp1","temp2","temp3","temp3Offset","sNormalizedOffset","phaseNumerator","phaseThird","red","green","blue","hslaToRgba","hsla","rgbResult","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","defaultVelocity","defaultLoops","defaultTime","updateColorValue","range","decrease","updateColor","ranges","defaultTransform","drawLine","context","begin","end","paintBase","dimension","baseColor","paintImage","image","clear","drawParticle","container","colorStyles","backgroundMask","composite","shadow","transform","pos","defaultAngle","rotateData","rotating","identity","transformData","shadowColor","minStrokeWidth","strokeWidth","drawData","drawShape","drawShapeAfterDraw","drawEffect","drawer","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","setTransformValue","newFactor","newValue","defaultValue","setStyle","canvas","style","important","elementStyle","Canvas","updater","ctx","zOpacity","fill","stroke","updaterTransform","fColor","sColor","cover","coverRgb","coverColor","resolve","reject","img","evt","trail","trailFill","factorNumerator","fillColor","observer","originalStyle","pfColor","psColor","zIndexOptions","zIndexFactorOffset","zIndexFactor","zOpacityFactor","defaultOpacity","strokeOpacity","zStrokeOpacity","obs","records","record","background","newSize","oldSize","needsRefresh","InteractivityDetect","manageListener","event","handler","add","addOptions","removeOptions","EventListeners","e","mouseInteractivity","mousePos","onClick","mediaEvent","defaultThemes","themeName","theme","handleResize","mouseLeaveTmpEvent","handlers","interactivityEl","html","canvasEl","detectType","mediaMatch","entries","interactivity","mouse","handled","mousePosition","mouseEvent","clientRect","target","sourceRect","targetRect","canvasRect","touchEvent","lengthOffset","lastTouch","defaultCoordinate","touches","touch","EventType","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivType","DivEvent","Parallax","HoverEvent","ResizeEvent","Events","onDiv","tmp","Modes","engine","interactors","interactor","Interactivity","detectsOn","defaultPosition","ManualParticle","ResponsiveMode","Responsive","ThemeMode","ThemeDefault","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionMode","CollisionsAbsorb","CollisionsOverlap","ValueWithRandom","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","Effect","effect","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","MovePath","MoveTrailFill","MoveTrail","OutMode","OutModes","Spin","Move","outModes","OpacityAnimation","Opacity","ParticlesDensity","width","height","LimitMode","ParticlesNumberLimit","ParticlesNumber","Shadow","Shape","shape","SizeAnimation","Size","Stroke","ZIndex","ParticlesOptions","group","strokeToLoad","updaters","loadOptions","sourceOptionsArr","sourceOptions","loadParticlesOptions","Options","preset","detectRetina","fpsLimit","fullScreen","responsive","optResponsive","existingTheme","optTheme","defaultOptions","responsiveOptions","chosenTheme","clientDarkMode","defaultTheme","InteractorType","InteractionManager","ParticleOutType","defaultRetryCount","randomString","loadEffectData","effectOptions","id","reduceDuplicates","effectData","loadShapeData","shapeOptions","shapeData","fixOutMode","diameter","Particle","zIndex","tryCount","pluginPos","exactPosition","fixHorizontal","outMode","fixVertical","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","retries","rollFactor","none","backFactor","backSum","zIndexValue","minZ","defaultRadius","override","pathGenerator","shapeDrawer","_c","overrideOptions","mainOptions","particlesOptions","effectType","shapeType","overrideEffectType","overrideShapeType","availableEffects","availableShapes","pathOptions","particles","effectDrawer","sideCountFunc","mover","_d","_e","_f","Point","RangeType","BaseRange","Circle","distPos","circleRange","rSum","dist","Rectangle","rectRange","w","w2","h2","subdivideCount","QuadTree","rectangle","capacity","i","fixedIndex","sub","check","qTreeCapacity","defaultRemoveQuantity","qTreeRectangle","posOffset","sizeFactor","Particles","manualCount","numberOptions","densityFactor","optParticlesNumber","minLimit","optParticlesLimit","particlesNumber","particlesCount","densityOptions","defaultFactor","initializer","canAdd","zIdx","deleteCount","limitMode","limit","currentCount","countToRemove","condition","groups","groupOptions","j","nb","quantity","deleted","particlesToDelete","resizeFactor","checkDelete","zArray","defaultRatio","defaultReduceFactor","Retina","ratio","moveDistance","props","maxDistance","guardCheck","defaultFps","initDelta","smooth","loadContainerOptions","Container","entry","timestamp","el","clickOrTouchHandler","posRetina","clickHandler","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","minCoordinate","touchCancelHandler","generator","remove","mainArr","force","refreshTime","frame","effects","shapes","availablePlugins","zLayers","duration","delay","defaultFpsLimit","minFpsLimit","needsUpdate","start","newMaxWidth","EventDispatcher","listener","arr","args","listeners","getItemsFromInitializer","map","initializers","getDataFromUrl","url","response","generatedTrue","generatedFalse","canvasTag","getCanvasFromContainer","domContainer","existingCanvases","fullPercent","getDomContainer","Engine","config","refresh","interactorInitializer","moverInitializer","updaterInitializer","validType","items","params","currentOptions","oldIndex","minIndex","newItem","old","one","HslIndexes","HslColorManager","minLength","defaultAlpha","RgbColorManager","rgbColor","init","rgbColorManager","hslColorManager","ExternalInteractorBase","ParticlesInteractorBase","RotateDirection","GradientType","EasingType","tsParticles","f","m","d","moveSpeedFactor","minSpinRadius","spinFactor","applyDistance","initialPosition","dxFixed","dyFixed","hDistance","vDistance","hasHDistance","hasVDistance","vel","move","moveSpeed","maxSpeed","moveDrift","applyPath","gravityOptions","gravityFactor","zVelocityFactor","spin","updateFunc","maxCanvasSize","halfMaxSize","path","getProximitySpeedFactor","initSpin","spinOptions","spinPos","spinCenter","distance","spinAcceleration","diffFactor","defaultSizeFactor","defaultDeltaFactor","BaseMover","particleOptions","slowFactor","baseSpeed","maxSize","deltaFactor","loadBaseMover","minAngle","drawCircle","sides","maxAngle","CircleDrawer","loadCircleShape","ColorUpdater","hAnimation","sAnimation","lAnimation","loadColorUpdater","OpacityUpdater","opacityOptions","opacityAnimation","loadOpacityUpdater","boundsMin","bounceHorizontal","bounced","newVelocity","minPos","bounceVertical","BounceOutMode","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","minDistance","OutOutMode","circVec","newDx","newDy","warp","newPos","sizeValue","nextBounds","checkOutMode","OutOfCanvasUpdater","loadOutModesUpdater","minLoops","SizeUpdater","sizeOptions","sizeAnimation","loadSizeUpdater","loadBasic","loadEasingQuadPlugin","drawEmoji","emojiData","previousAlpha","defaultFont","EmojiDrawer","validTypes","promises","emoji","existingData","loadEmojiShape","minFactor","minRadius","processAttract","attractRadius","area","queryCb","attractOptions","attractFactor","normVec","clickAttract","enabledCb","attract","hoverAttract","Attract","attractMode","mouseMoveStatus","events","hoverEnabled","hoverMode","clickEnabled","clickMode","loadExternalAttractInteraction","Attractor","halfPI","toleranceFactor","processBounce","singleSelectorBounce","bounceCb","elem","tolerance","divBounce","bounceMode","mouseBounce","Bounce","Bouncer","bounce","loadExternalBounceInteraction","BubbleBase","BubbleDiv","Bubble","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","bubbleMode","defaultClickTime","ratioOffset","defaultBubbleValue","minRatio","Bubbler","mouseClickPos","bubbleOptions","bubble","distMouse","timeSpent","sizeData","opacityData","pointDistance","divBubble","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","pOpacity","modeSize","optSize","pSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","repulseRadius","onHover","loadExternalBubbleInteraction","ConnectLinks","Connect","gradientMin","gradientMax","defaultLinksWidth","gradient","gradStop","sourcePos","destPos","midRgb","grad","drawConnectLine","lineStyle","connectOptions","drawConnection","ls","connectMode","Connector","connect","connectModeDistance","connectModeRadius","indexOffset","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","Grab","defaultWidth","drawGrabLine","colorLine","drawGrab","lineColor","beginPos","grabMode","minOpacity","Grabber","grab","grabLineOptions","lineOpacity","opacityLine","linksOptions","loadExternalGrabInteraction","pauseMode","Pauser","loadExternalPauseInteraction","Push","pushMode","minQuantity","Pusher","pushOptions","loadExternalPushInteraction","Remove","removeMode","Remover","removeNb","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","repulseMode","repulseRadiusFactor","repulseRadiusPower","squarePower","minSpeed","easingOffset","Repulser","repulseOptions","repulse","repulseDistance","vect","divRepulse","speed","easingFunc","repulseFactor","repulseOpts","hover","click","loadExternalRepulseInteraction","Slow","slowMode","Slower","slow","slowOptions","particlePos","proximityFactor","loadExternalSlowInteraction","stringStart","currentColorRegex","replaceColorSvg","imageShape","svgData","colorStyle","preFillIndex","loadImage","downloadSvgImage","replaceImageColor","imageData","svgColoredData","imageRes","svg","domUrl","errorHandler","img2","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","count","slice","acc","curr","blockString","minCount","emptySize","len","increment","blockData","noData","DisposalMethod","GIFDataHeaders","defaultFrame","initialTime","firstIndex","defaultLoopCount","parseColorTable","byteStream","colors","parseExtensionBlock","gif","getFrameIndex","getTransparencyIndex","packedByte","transparencyFlag","transparencyIndex","applicationExtension","parseImageBlock","avgAlpha","progressCallback","localColorTableFlag","interlacedFlag","localColorCount","getColor","error","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","parseBlock","getGIFLoopAmount","extension","decodeGIF","gifURL","buffer","globalColorTableFlag","globalColorCount","backgroundColorIndex","backgroundImage","frameIndex","incrementFrameIndex","getframeIndex","drawGif","offscreenCanvas","offscreenContext","previousImageData","loadGifImage","ImageDrawer","images","replaceColor","close","Preload","ImagePreloaderPlugin","preloadOptions","existing","preload","extLength","addLoadImageToEngine","imageFunc","loadImageShape","preloader","LifeDelay","LifeDuration","Life","noTime","infiniteValue","noLife","minCanvasSize","updateLife","life","justSpawned","widthRange","heightRange","lifeOptions","LifeUpdater","loadLifeUpdater","centerY","LineDrawer","loadLineShape","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","rotate","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","absorbFactor","minAbsorbFactor","updateAbsorb","r2","pixelRatio","absorb","fixBounceSpeed","destroy","resolveCollision","Collider","radius1","radius2","distP","loadParticlesCollisionsInteraction","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","Links","opacityOffset","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","linkOpt1","linkOpt2","loadLinksInteraction","drawTriangle","p3","drawLinkLine","drawn","links","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkTriangle","pos3","colorTriangle","opacityTriangle","getLinkKey","ids","setLinkFrequency","dictionary","minWidth","maxFrequency","LinkInstance","link","p1LinksOptions","twinkle","twinkleFreq","twinkleRgb","link1","link2","triangleOptions","linksDistance","p1Links","vertices","linkFreq","vertex","retina","LinksPlugin","loadLinksPlugin","loadParticlesLinksInteraction","piDeg","sidesOffset","drawPolygon","side","sideCount","decimalSides","interiorAngleDegrees","interiorAngle","defaultSides","PolygonDrawerBase","polygon","sidesCenterFactor","yFactor","sidesFactor","PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","RotateAnimation","Rotate","doublePIDeg","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","loadRotateUpdater","fixFactorSquared","fixFactor","drawSquare","fixedRadius","fixedDiameter","SquareDrawer","loadSquareShape","defaultInset","drawStar","inset","StarDrawer","star","loadStarShape","StrokeColorUpdater","strokeHslColor","strokeColor","loadStrokeColorUpdater","loadSlim","ParticleBackground","setInit","useState","useEffect","initParticlesEngine","particlesLoaded","jsx","FrontMain","Fragment","jsxs"],"mappings":"iDACA,MAAMA,GAAkB,CACtB,WAAY,CACV,MAAO,CACL,MAAO,SACR,CACF,EACD,SAAU,IACV,cAAe,CACb,OAAQ,CACN,QAAS,CACP,OAAQ,GACR,KAAM,MACP,EACD,QAAS,CACP,OAAQ,GACR,KAAM,SACP,CACF,EACD,MAAO,CACL,KAAM,CACJ,SAAU,CACX,EACD,QAAS,CACP,SAAU,IACV,SAAU,EACX,CACF,CACF,EACD,UAAW,CACT,MAAO,CACL,MAAO,SACR,EACD,MAAO,CACL,MAAO,UACP,SAAU,IACV,OAAQ,GACR,QAAS,GACT,MAAO,CACR,EACD,KAAM,CACJ,UAAW,OACX,OAAQ,GACR,SAAU,CACR,QAAS,QACV,EACD,OAAQ,GACR,MAAO,EACP,SAAU,EACX,EACD,OAAQ,CACN,QAAS,CACP,OAAQ,EACT,EACD,MAAO,EACR,EACD,QAAS,CACP,MAAO,EACR,EACD,MAAO,CACL,KAAM,QACP,EACD,KAAM,CACJ,MAAO,CAAE,IAAK,EAAG,IAAK,CAAG,CAC1B,CACF,EACD,aAAc,EAChB,ECnEaC,GAAqB,YACrBC,GAAiB,cACjBC,GAAe,YACfC,GAAkB,eAClBC,GAAgB,aAChBC,GAAiB,cACjBC,GAAkB,aAClBC,GAAgB,WAChBC,GAAiB,YACjBC,GAAmB,cACnBC,GAAc,SACdC,GAAwB,mBACxBC,EAAc,sBACdC,GAAqB,IACrBC,GAAa,GACbC,EAAwB,ICf9B,IAAIC,GACV,SAAUA,EAAe,CACtBA,EAAc,OAAY,SAC1BA,EAAc,WAAgB,cAC9BA,EAAc,YAAiB,eAC/BA,EAAc,KAAU,OACxBA,EAAc,KAAU,OACxBA,EAAc,MAAW,QACzBA,EAAc,IAAS,MACvBA,EAAc,QAAa,WAC3BA,EAAc,SAAc,YAC5BA,EAAc,QAAa,UAC3BA,EAAc,OAAY,QAC9B,GAAGA,IAAkBA,EAAgB,CAAA,EAAG,ECbjC,SAASC,GAAUC,EAAK,CAC3B,OAAO,OAAOA,GAAQ,SAC1B,CACO,SAASC,GAASD,EAAK,CAC1B,OAAO,OAAOA,GAAQ,QAC1B,CACO,SAASE,GAASF,EAAK,CAC1B,OAAO,OAAOA,GAAQ,QAC1B,CAIO,SAASG,GAASH,EAAK,CAC1B,OAAO,OAAOA,GAAQ,UAAYA,IAAQ,IAC9C,CACO,SAASI,GAAQJ,EAAK,CACzB,OAAO,MAAM,QAAQA,CAAG,CAC5B,CCfA,MAAMK,GAAS,CACX,EAAG,EACH,EAAG,EACH,EAAG,CACP,EAAGC,GAAY,EAAGC,GAAyB,EACpC,MAAMC,CAAS,CAClB,YAAYC,EAAWC,EAAGC,EAAG,CAKzB,GAJA,KAAK,iBAAmB,CAACC,EAAOC,IAAW,CACvC,KAAK,EAAI,KAAK,IAAID,CAAK,EAAIC,EAC3B,KAAK,EAAI,KAAK,IAAID,CAAK,EAAIC,CACvC,EACY,CAACX,GAASO,CAAS,GAAKA,EAAW,CACnC,KAAK,EAAIA,EAAU,EACnB,KAAK,EAAIA,EAAU,EACnB,MAAMK,EAAWL,EACjB,KAAK,EAAIK,EAAS,EAAIA,EAAS,EAAIT,GAAO,CAC7C,SACQI,IAAc,QAAaC,IAAM,OACtC,KAAK,EAAID,EACT,KAAK,EAAIC,EACT,KAAK,EAAIC,GAAKN,GAAO,MAGrB,OAAM,IAAI,MAAM,GAAGX,CAAW,qCAAqC,CAE1E,CACD,WAAW,QAAS,CAChB,OAAOc,EAAS,OAAOH,GAAO,EAAGA,GAAO,EAAGA,GAAO,CAAC,CACtD,CACD,IAAI,OAAQ,CACR,OAAO,KAAK,MAAM,KAAK,EAAG,KAAK,CAAC,CACnC,CACD,IAAI,MAAMO,EAAO,CACb,KAAK,iBAAiBA,EAAO,KAAK,MAAM,CAC3C,CACD,IAAI,QAAS,CACT,OAAO,KAAK,KAAK,KAAK,YAAa,CAAA,CACtC,CACD,IAAI,OAAOC,EAAQ,CACf,KAAK,iBAAiB,KAAK,MAAOA,CAAM,CAC3C,CACD,OAAO,MAAME,EAAQ,CACjB,OAAOP,EAAS,OAAOO,EAAO,EAAGA,EAAO,EAAGA,EAAO,CAAC,CACtD,CACD,OAAO,OAAOC,EAAGN,EAAGC,EAAG,CACnB,OAAO,IAAIH,EAASQ,EAAGN,EAAGC,CAAC,CAC9B,CACD,IAAIM,EAAG,CACH,OAAOT,EAAS,OAAO,KAAK,EAAIS,EAAE,EAAG,KAAK,EAAIA,EAAE,EAAG,KAAK,EAAIA,EAAE,CAAC,CAClE,CACD,MAAMA,EAAG,CACL,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,CACf,CACD,MAAO,CACH,OAAOT,EAAS,MAAM,IAAI,CAC7B,CACD,WAAWS,EAAG,CACV,OAAO,KAAK,IAAIA,CAAC,EAAE,MACtB,CACD,aAAaA,EAAG,CACZ,OAAO,KAAK,IAAIA,CAAC,EAAE,YAAW,CACjC,CACD,IAAIC,EAAG,CACH,OAAOV,EAAS,OAAO,KAAK,EAAIU,EAAG,KAAK,EAAIA,EAAG,KAAK,EAAIA,CAAC,CAC5D,CACD,MAAMA,EAAG,CACL,KAAK,GAAKA,EACV,KAAK,GAAKA,EACV,KAAK,GAAKA,CACb,CACD,aAAc,CACV,OAAO,KAAK,GAAKZ,GAAY,KAAK,GAAKA,EAC1C,CACD,KAAKY,EAAG,CACJ,OAAOV,EAAS,OAAO,KAAK,EAAIU,EAAG,KAAK,EAAIA,EAAG,KAAK,EAAIA,CAAC,CAC5D,CACD,OAAOA,EAAG,CACN,KAAK,GAAKA,EACV,KAAK,GAAKA,EACV,KAAK,GAAKA,CACb,CACD,WAAY,CACR,MAAML,EAAS,KAAK,OAChBA,GADmC,GAEnC,KAAK,OAAON,GAAyBM,CAAM,CAElD,CACD,OAAOD,EAAO,CACV,OAAOJ,EAAS,OAAO,KAAK,EAAI,KAAK,IAAII,CAAK,EAAI,KAAK,EAAI,KAAK,IAAIA,CAAK,EAAG,KAAK,EAAI,KAAK,IAAIA,CAAK,EAAI,KAAK,EAAI,KAAK,IAAIA,CAAK,EAAGP,GAAO,CAAC,CAC5I,CACD,MAAMc,EAAG,CACL,KAAK,EAAIA,EAAE,EACX,KAAK,EAAIA,EAAE,EACX,MAAMC,EAAMD,EACZ,KAAK,EAAIC,EAAI,EAAIA,EAAI,EAAIf,GAAO,CACnC,CACD,IAAIY,EAAG,CACH,OAAOT,EAAS,OAAO,KAAK,EAAIS,EAAE,EAAG,KAAK,EAAIA,EAAE,EAAG,KAAK,EAAIA,EAAE,CAAC,CAClE,CACD,QAAQA,EAAG,CACP,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,CACf,CACL,CACO,MAAMI,UAAeb,CAAS,CACjC,YAAYC,EAAWC,EAAG,CACtB,MAAMD,EAAWC,EAAGL,GAAO,CAAC,CAC/B,CACD,WAAW,QAAS,CAChB,OAAOgB,EAAO,OAAOhB,GAAO,EAAGA,GAAO,CAAC,CAC1C,CACD,OAAO,MAAMU,EAAQ,CACjB,OAAOM,EAAO,OAAON,EAAO,EAAGA,EAAO,CAAC,CAC1C,CACD,OAAO,OAAOC,EAAGN,EAAG,CAChB,OAAO,IAAIW,EAAOL,EAAGN,CAAC,CACzB,CACL,CCtHA,IAAIY,GAAU,KAAK,OACnB,MAAMC,GAAiB,CACnB,UAAYC,GAAO,sBAAsBA,CAAE,EAC3C,OAASC,GAAQ,qBAAqBA,CAAG,CAC7C,EAAGC,GAAkB,IAAI,IAAOC,GAAS,EAAGC,GAAW,KAAK,GAAKD,GAC1D,SAASE,GAAUC,EAAMC,EAAQ,CAChCL,GAAgB,IAAII,CAAI,GAG5BJ,GAAgB,IAAII,EAAMC,CAAM,CACpC,CACO,SAASC,GAAUF,EAAM,CAC5B,OAAOJ,GAAgB,IAAII,CAAI,IAAOG,GAAUA,EACpD,CAIO,SAASC,GAAY,CAExB,OAAOC,EAAMb,KAAW,EAAK,EAAM,OAAO,OAAO,CACrD,CAKO,SAASc,GAAQC,EAAI,CACxB,OAAOd,GAAe,UAAUc,CAAE,CACtC,CACO,SAASC,GAAgBC,EAAQ,CACpChB,GAAe,OAAOgB,CAAM,CAChC,CACO,SAASJ,EAAMK,EAAKC,EAAKC,EAAK,CACjC,OAAO,KAAK,IAAI,KAAK,IAAIF,EAAKC,CAAG,EAAGC,CAAG,CAC3C,CACO,SAASC,GAAIC,EAAOC,EAAOC,EAASC,EAAS,CAChD,OAAO,KAAK,OAAOH,EAAQE,EAAUD,EAAQE,IAAYD,EAAUC,EAAQ,CAC/E,CACO,SAASC,EAAcC,EAAG,CAC7B,MAAMP,EAAMQ,GAAYD,CAAC,EAAGE,EAAY,EACxC,IAAIV,EAAMW,GAAYH,CAAC,EACvB,OAAIP,IAAQD,IACRA,EAAMU,GAEHjB,EAAS,GAAMQ,EAAMD,GAAOA,CACvC,CACO,SAASY,EAAcpB,EAAO,CACjC,OAAO/B,GAAS+B,CAAK,EAAIA,EAAQe,EAAcf,CAAK,CACxD,CACO,SAASmB,GAAYnB,EAAO,CAC/B,OAAO/B,GAAS+B,CAAK,EAAIA,EAAQA,EAAM,GAC3C,CACO,SAASiB,GAAYjB,EAAO,CAC/B,OAAO/B,GAAS+B,CAAK,EAAIA,EAAQA,EAAM,GAC3C,CACO,SAASqB,EAAcvC,EAAQkB,EAAO,CACzC,GAAIlB,IAAWkB,GAAUA,IAAU,QAAa/B,GAASa,CAAM,EAC3D,OAAOA,EAEX,MAAM0B,EAAMW,GAAYrC,CAAM,EAAG2B,EAAMQ,GAAYnC,CAAM,EACzD,OAAOkB,IAAU,OACX,CACE,IAAK,KAAK,IAAIQ,EAAKR,CAAK,EACxB,IAAK,KAAK,IAAIS,EAAKT,CAAK,CAC3B,EACCqB,EAAcb,EAAKC,CAAG,CAChC,CACO,SAASa,EAAaC,EAAQC,EAAQ,CACzC,MAAMC,EAAKF,EAAO,EAAIC,EAAO,EAAGE,EAAKH,EAAO,EAAIC,EAAO,EAAGnD,EAAY,EACtE,MAAO,CAAE,GAAIoD,EAAI,GAAIC,EAAI,SAAU,KAAK,KAAKD,GAAMpD,EAAYqD,GAAMrD,CAAS,CAAC,CACnF,CACO,SAASsD,EAAYJ,EAAQC,EAAQ,CACxC,OAAOF,EAAaC,EAAQC,CAAM,EAAE,QACxC,CACO,SAASI,GAASC,EAAS,CAE9B,OAAQA,EAAU,KAAK,GAAM,GACjC,CACO,SAASC,GAA0BC,EAAWC,EAAUC,EAAQ,CACnE,GAAIhE,GAAS8D,CAAS,EAClB,OAAOH,GAASG,CAAS,EAE7B,MAAMG,EAAQ,EAAGC,EAAO,GAAKC,EAAU,IAAMC,EAAeF,EAAOC,EACnE,OAAQL,EAAS,CACb,KAAKlE,EAAc,IACf,MAAO,CAAC,KAAK,GAAKsE,EACtB,KAAKtE,EAAc,SACf,MAAO,CAAC,KAAK,GAAKuE,EACtB,KAAKvE,EAAc,MACf,OAAOqE,EACX,KAAKrE,EAAc,YACf,OAAO,KAAK,GAAKuE,EACrB,KAAKvE,EAAc,OACf,OAAO,KAAK,GAAKsE,EACrB,KAAKtE,EAAc,WACf,OAAO,KAAK,GAAKwE,EACrB,KAAKxE,EAAc,KACf,OAAO,KAAK,GAChB,KAAKA,EAAc,QACf,MAAO,CAAC,KAAK,GAAKwE,EACtB,KAAKxE,EAAc,OACf,OAAO,KAAK,MAAMoE,EAAO,EAAID,EAAS,EAAGC,EAAO,EAAID,EAAS,CAAC,EAClE,KAAKnE,EAAc,QACf,OAAO,KAAK,MAAMmE,EAAS,EAAIC,EAAO,EAAGD,EAAS,EAAIC,EAAO,CAAC,EAClE,QACI,OAAOhC,EAAW,EAAGN,EAC5B,CACL,CACO,SAAS2C,GAAwBP,EAAW,CAC/C,MAAMQ,EAAenD,EAAO,OAC5B,OAAAmD,EAAa,OAAS,EACtBA,EAAa,MAAQR,EACdQ,CACX,CACO,SAASC,GAAkBC,EAAIC,EAAIC,EAAIC,EAAI,CAE9C,OAAOxD,EAAO,OAAQqD,EAAG,GAAKE,EAAKC,IAAQD,EAAKC,GAAOF,EAAG,EAAI,EAASE,GAAOD,EAAKC,GAAKH,EAAG,CAAC,CAChG,CAsBO,SAASI,GAAkCC,EAAM,SACpD,MAAO,CACH,IAAGC,EAAAD,EAAK,WAAL,YAAAC,EAAe,IAAK9C,IAAc6C,EAAK,KAAK,MAC/C,IAAGE,EAAAF,EAAK,WAAL,YAAAE,EAAe,IAAK/C,IAAc6C,EAAK,KAAK,MACvD,CACA,CAQO,SAASG,GAAWC,EAAO,CAE9B,OAAKA,EAGEA,EAAM,SAAS,GAAG,EAAI,WAAWA,CAAK,EAAIxF,GAAqB,WAAWwF,CAAK,EAF3E,CAGf,CCjKO,IAAIC,IACV,SAAUA,EAAe,CACtBA,EAAc,KAAU,OACxBA,EAAc,SAAc,WAC5BA,EAAc,SAAc,WAC5BA,EAAc,OAAY,QAC9B,GAAGA,KAAkBA,GAAgB,CAAA,EAAG,ECNjC,IAAIC,GACV,SAAUA,EAAiB,CACxBA,EAAgB,WAAgB,aAChCA,EAAgB,WAAgB,YACpC,GAAGA,IAAoBA,EAAkB,CAAA,EAAG,ECJrC,IAAIC,IACV,SAAUA,EAAa,CACpBA,EAAY,KAAU,OACtBA,EAAY,IAAS,MACrBA,EAAY,IAAS,KACzB,GAAGA,KAAgBA,GAAc,CAAA,EAAG,ECL7B,IAAIC,GACV,SAAUA,EAAkB,CACzBA,EAAiB,OAAY,SAC7BA,EAAiB,KAAU,OAC3BA,EAAiB,MAAW,QAC5BA,EAAiB,IAAS,KAC9B,GAAGA,IAAqBA,EAAmB,CAAA,EAAG,ECNvC,IAAIC,IACV,SAAUA,EAAW,CAClBA,EAAU,QAAa,UACvBA,EAAU,QAAa,SAC3B,GAAGA,KAAcA,GAAY,CAAA,EAAG,ECJzB,IAAIC,IACV,SAAUA,EAAgB,CACvBA,EAAe,IAAS,MACxBA,EAAe,IAAS,MACxBA,EAAe,OAAY,QAC/B,GAAGA,KAAmBA,GAAiB,CAAA,EAAG,ECK1C,MAAMC,GAAU,CACZ,MAAO,QAAQ,MACf,MAAO,QAAQ,MACf,KAAM,QAAQ,KACd,IAAK,QAAQ,IACb,QAAS,QAAQ,IACjB,QAAS,QAAQ,IACrB,EASO,SAASC,IAAY,CACxB,OAAOD,EACX,CACA,SAASE,GAAeb,EAAM,CAC1B,MAAMc,EAAM,CAAE,QAAS,EAAO,EAAE,CAAE,MAAAC,EAAO,WAAAC,EAAY,SAAAC,EAAU,cAAAC,EAAe,SAAAC,EAAU,OAAAC,CAAM,EAAKpB,EAAMX,EAAO,GAAKgC,EAAc,EACnI,OAAIL,EAAW,IAAME,EAAc,KAC/BF,EAAW,IAAME,EAAc,KAC/BF,EAAW,IAAME,EAAc,KAC/BF,EAAW,IAAME,EAAc,MAG9BH,EAAM,KAAOE,EAAS,KAAOF,EAAM,MAAQE,EAAS,IAAMA,EAAS,KAAO5B,GAAQ8B,EAAWE,GAC7FN,EAAM,KAAOE,EAAS,KAAOF,EAAM,KAAOE,EAAS,IAAMA,EAAS,KAAO5B,GAAQ8B,EAAWE,KAC7FP,EAAI,SAAWK,EAAW,CAACC,EAC3BN,EAAI,QAAU,IAEXA,CACX,CACA,SAASQ,GAAcC,EAASC,EAAW,CACvC,MAAMV,EAAMW,EAA0BD,EAAWE,GACtCH,EAAQ,QAAQG,CAAQ,CAClC,EACD,OAAOrG,GAAQyF,CAAG,EAAIA,EAAI,KAAKa,GAAKA,CAAC,EAAIb,CAC7C,CACO,SAASc,IAAQ,CACpB,OAAO,OAAO,OAAW,KAAe,CAAC,QAAU,OAAO,OAAO,SAAa,KAAe,CAAC,OAAO,QACzG,CACO,SAASC,IAAgB,CAC5B,MAAO,CAACD,GAAK,GAAM,OAAO,WAAe,GAC7C,CACO,SAASE,GAAeC,EAAO,CAClC,GAAKF,GAAa,EAGlB,OAAO,WAAWE,CAAK,CAC3B,CACO,SAASC,GAAyBC,EAAU,CAC/C,GAAI,EAAAL,GAAO,GAAI,OAAO,qBAAyB,KAG/C,OAAO,IAAI,qBAAqBK,CAAQ,CAC5C,CACO,SAASC,GAAqBD,EAAU,CAC3C,GAAI,EAAAL,GAAO,GAAI,OAAO,iBAAqB,KAG3C,OAAO,IAAI,iBAAiBK,CAAQ,CACxC,CACO,SAASE,EAAUjF,EAAOkF,EAAO,CAEpC,OAAOlF,IAAUkF,GAAU/G,GAAQ+G,CAAK,GAAKA,EAAM,QAAQlF,CAAK,EAAI,EACxE,CACO,eAAemF,GAASC,EAAMC,EAAQ,CACzC,GAAI,CACA,MAAM,SAAS,MAAM,KAAK,GAAGA,GAAU,KAAK,UAAUD,GAAQ,SAAS,GAAG,CAC7E,MACK,CACL,CACL,CACO,SAASE,GAAiBJ,EAAO,CACpC,OAAO,KAAK,MAAMjF,EAAW,EAAGiF,EAAM,MAAM,CAChD,CACO,SAASK,GAAcL,EAAOM,EAAOC,EAAW,GAAM,CACzD,OAAOP,EAAMM,IAAU,QAAaC,EAAWD,EAAQN,EAAM,OAASI,GAAiBJ,CAAK,CAAC,CACjG,CACO,SAASQ,GAAcC,EAAOC,EAAMC,EAAQC,EAAQ/D,EAAW,CAElE,OAAOgE,GAAgBC,GAAgBL,EAAOG,GAAU,CAAS,EAAGF,EAAMC,EAAQ9D,CAAS,CAC/F,CACO,SAASgE,GAAgBE,EAAQL,EAAMC,EAAQ9D,EAAW,CAC7D,IAAImE,EAAS,GACb,OAAI,CAACnE,GAAaA,IAAcuB,EAAiB,UAC7C4C,EAASD,EAAO,IAAML,EAAK,OAASC,EAAO,GAE3CK,IAAW,CAACnE,GAAaA,IAAcuB,EAAiB,QACxD4C,EAASD,EAAO,MAAQJ,EAAO,GAE/BK,IAAW,CAACnE,GAAaA,IAAcuB,EAAiB,SACxD4C,EAASD,EAAO,KAAOL,EAAK,MAAQC,EAAO,GAE3CK,IAAW,CAACnE,GAAaA,IAAcuB,EAAiB,OACxD4C,EAASD,EAAO,OAASJ,EAAO,GAE7BK,CACX,CACO,SAASF,GAAgBL,EAAOG,EAAQ,CAC3C,MAAO,CACH,OAAQH,EAAM,EAAIG,EAClB,KAAMH,EAAM,EAAIG,EAChB,MAAOH,EAAM,EAAIG,EACjB,IAAKH,EAAM,EAAIG,CACvB,CACA,CACO,SAASK,EAAWC,KAAgBC,EAAS,CAChD,UAAWvH,KAAUuH,EAAS,CAC1B,GAA4BvH,GAAW,KACnC,SAEJ,GAAI,CAACZ,GAASY,CAAM,EAAG,CACnBsH,EAActH,EACd,QACH,CACD,MAAMwH,EAAgB,MAAM,QAAQxH,CAAM,EACtCwH,IAAkBpI,GAASkI,CAAW,GAAK,CAACA,GAAe,CAAC,MAAM,QAAQA,CAAW,GACrFA,EAAc,CAAA,EAET,CAACE,IAAkBpI,GAASkI,CAAW,GAAK,CAACA,GAAe,MAAM,QAAQA,CAAW,KAC1FA,EAAc,CAAA,GAElB,UAAWG,KAAOzH,EAAQ,CACtB,GAAIyH,IAAQ,YACR,SAEJ,MAAMC,EAAa1H,EAAQkB,EAAQwG,EAAWD,CAAG,EAAGE,EAAWL,EAC/DK,EAASF,CAAG,EACRrI,GAAS8B,CAAK,GAAK,MAAM,QAAQA,CAAK,EAChCA,EAAM,IAAIhB,GAAKmH,EAAWM,EAASF,CAAG,EAAGvH,CAAC,CAAC,EAC3CmH,EAAWM,EAASF,CAAG,EAAGvG,CAAK,CAC5C,CACJ,CACD,OAAOoG,CACX,CACO,SAASM,GAAiBC,EAAMC,EAAM,CACzC,MAAO,CAAC,CAACC,GAA6BD,EAAM,GAAK,EAAE,QAAU3B,EAAU0B,EAAM,EAAE,IAAI,CAAC,CACxF,CACO,SAASG,GAAeH,EAAMC,EAAM7B,EAAU,CACjDR,EAA0BqC,EAAMG,GAAO,CACnC,MAAMC,EAAUD,EAAI,KAAmBA,EAAI,QACzB9B,EAAU0B,EAAMK,CAAO,GACrCC,GAAqBF,EAAKhC,CAAQ,CAE9C,CAAK,CACL,CACO,SAASkC,GAAqBF,EAAKhC,EAAU,CAChD,MAAMT,EAAYyC,EAAI,UACtBxC,EAA0BD,EAAWE,GAAY,CAC7CO,EAASP,EAAUuC,CAAG,CAC9B,CAAK,CACL,CACO,SAASC,GAAQJ,EAAMvC,EAAS,CACnC,GAAI,GAACA,GAAW,CAACuC,GAGjB,OAAOC,GAA6BD,EAAMG,GAC/B3C,GAAcC,EAAS0C,EAAI,SAAS,CAC9C,CACL,CACO,SAASG,GAA6BC,EAAG,CAC5C,MAAO,CACH,SAAUA,EAAE,YAAa,EACzB,OAAQA,EAAE,UAAW,EACrB,KAAMA,EAAE,QAAS,EACjB,SAAUA,EAAE,SACZ,OAAQ/H,EAAO,OAAOgC,EAAc+F,EAAE,QAAQ,OAAO,WAAW,KAAK,EAAG/F,EAAc+F,EAAE,QAAQ,OAAO,SAAS,KAAK,CAAC,CAC9H,CACA,CACO,SAASC,GAAaC,EAAIC,EAAI,CACjC,KAAM,CAAE,EAAGC,EAAe,EAAGC,CAAe,EAAGH,EAAG,SAAS,IAAIC,EAAG,QAAQ,EAAG,CAACG,EAAMC,CAAI,EAAI,CAACL,EAAG,SAAUC,EAAG,QAAQ,EAAG,CAAE,GAAIK,EAAO,GAAIC,CAAO,EAAGtG,EAAaoG,EAAMD,CAAI,EAC1K,GAAIF,EAAgBI,EAAQH,EAAgBI,EADmJ,EAE3L,OAEJ,MAAMjJ,EAAQ,CAAC,KAAK,MAAMiJ,EAAOD,CAAK,EAAGhF,EAAK0E,EAAG,KAAMzE,EAAK0E,EAAG,KAAMO,EAAKR,EAAG,SAAS,OAAO1I,CAAK,EAAGmJ,EAAKR,EAAG,SAAS,OAAO3I,CAAK,EAAG8D,EAAKD,GAAkBqF,EAAIC,EAAInF,EAAIC,CAAE,EAAGF,EAAKF,GAAkBsF,EAAID,EAAIlF,EAAIC,CAAE,EAAGmF,EAAUtF,EAAG,OAAO,CAAC9D,CAAK,EAAGqJ,EAAUtF,EAAG,OAAO,CAAC/D,CAAK,EAC5Q0I,EAAG,SAAS,EAAIU,EAAQ,EAAIV,EAAG,OAAO,EACtCA,EAAG,SAAS,EAAIU,EAAQ,EAAIV,EAAG,OAAO,EACtCC,EAAG,SAAS,EAAIU,EAAQ,EAAIV,EAAG,OAAO,EACtCA,EAAG,SAAS,EAAIU,EAAQ,EAAIV,EAAG,OAAO,CAC1C,CACO,SAASW,GAAWC,EAAUC,EAAW,CAC5C,MAAMC,EAAOF,EAAS,YAAW,EAAItC,EAAOsC,EAAS,UAAS,EAAIjC,EAASD,GAAgBoC,EAAMxC,CAAI,EAAGyC,EAAgBH,EAAS,QAAQ,OAAQI,EAAO3E,GAAe,CACnK,MAAO,CACH,IAAKsC,EAAO,KACZ,IAAKA,EAAO,KACf,EACD,WAAY,CACR,IAAKA,EAAO,IACZ,IAAKA,EAAO,MACf,EACD,SAAU,CACN,IAAKkC,EAAU,KACf,IAAKA,EAAU,KAClB,EACD,cAAe,CACX,IAAKA,EAAU,IACf,IAAKA,EAAU,MAClB,EACD,SAAUD,EAAS,SAAS,EAC5B,OAAQ9G,EAAciH,EAAc,WAAW,KAAK,CAC5D,CAAK,EACGC,EAAK,UACDA,EAAK,WAAa,SAClBJ,EAAS,SAAS,EAAII,EAAK,UAE3BA,EAAK,WAAa,SAClBJ,EAAS,SAAS,EAAII,EAAK,WAGnC,MAAMC,EAAO5E,GAAe,CACxB,MAAO,CACH,IAAKsC,EAAO,IACZ,IAAKA,EAAO,MACf,EACD,WAAY,CACR,IAAKA,EAAO,KACZ,IAAKA,EAAO,KACf,EACD,SAAU,CACN,IAAKkC,EAAU,IACf,IAAKA,EAAU,MAClB,EACD,cAAe,CACX,IAAKA,EAAU,KACf,IAAKA,EAAU,KAClB,EACD,SAAUD,EAAS,SAAS,EAC5B,OAAQ9G,EAAciH,EAAc,SAAS,KAAK,CAC1D,CAAK,EACGE,EAAK,UACDA,EAAK,WAAa,SAClBL,EAAS,SAAS,EAAIK,EAAK,UAE3BA,EAAK,WAAa,SAClBL,EAAS,SAAS,EAAIK,EAAK,UAGvC,CACO,SAAShE,EAA0BiE,EAAKzD,EAAU,CAErD,OAAO5G,GAAQqK,CAAG,EAAIA,EAAI,IAAI,CAACC,EAAMjD,IAAUT,EAAS0D,EAAMjD,CAAK,CAAC,EAAIT,EAASyD,EAAK,CAAY,CACtG,CACO,SAASE,GAAyBF,EAAKhD,EAAOC,EAAU,CAC3D,OAAOtH,GAAQqK,CAAG,EAAIjD,GAAciD,EAAKhD,EAAOC,CAAQ,EAAI+C,CAChE,CACO,SAAS3B,GAA6B2B,EAAKzD,EAAU,CACxD,OAAI5G,GAAQqK,CAAG,EACJA,EAAI,KAAK,CAAC/D,EAAGe,IAAUT,EAASN,EAAGe,CAAK,CAAC,EAG7CT,EAASyD,EADK,CACY,EAAIA,EAAM,MAC/C,CACO,SAASG,GAAkCC,EAASC,EAAS,CAChE,MAAMC,EAAaF,EAAQ,MAAOG,EAAmBH,EAAQ,UAAWhF,EAAM,CAC1E,UAAWxC,EAAc2H,EAAiB,KAAK,EAAInL,EACnD,OAAQmL,EAAiB,OACzB,MAAO3H,EAAcwH,EAAQ,KAAK,EAAIC,EACtC,IAAK5H,GAAY6H,CAAU,EAAID,EAC/B,IAAK1H,GAAY2H,CAAU,EAAID,EAC/B,MAAO,EACP,SAAUzH,EAAc2H,EAAiB,KAAK,EAC9C,KAAM,CACd,EAAOC,EAAc,EACjB,GAAID,EAAiB,OAAQ,CAEzB,OADAnF,EAAI,MAAQoF,EAAc5H,EAAc2H,EAAiB,KAAK,EACtDA,EAAiB,KAAI,CACzB,KAAK5F,GAAc,SACfS,EAAI,OAASR,EAAgB,WAC7B,MACJ,KAAKD,GAAc,SACfS,EAAI,OAASR,EAAgB,WAC7B,MACJ,KAAKD,GAAc,OACfS,EAAI,OAAS3D,KAAetC,GAAayF,EAAgB,WAAaA,EAAgB,WACtF,KACP,CACD,MAAM6F,EAAaF,EAAiB,OAAS5F,GAAc,KAC3D,OAAQ4F,EAAiB,WAAU,CAC/B,KAAKvF,GAAe,IAChBI,EAAI,MAAQA,EAAI,IACZqF,IACArF,EAAI,OAASR,EAAgB,YAEjC,MACJ,KAAKI,GAAe,IAChBI,EAAI,MAAQA,EAAI,IACZqF,IACArF,EAAI,OAASR,EAAgB,YAEjC,MACJ,KAAKI,GAAe,OACpB,QACII,EAAI,MAAQ7C,EAAc6C,CAAG,EACzBqF,IACArF,EAAI,OAAS3D,KAAetC,GAAayF,EAAgB,WAAaA,EAAgB,YAE1F,KACP,CACJ,CACD,OAAAQ,EAAI,aAAeA,EAAI,MAChBA,CACX,CACA,SAASsF,GAAkBC,EAAgBC,EAAY,CAEnD,GAAI,EADcD,EAAe,OAAS5F,GAAU,SACpC,CACZ,KAAM,CAAE,KAAM8F,EAAG,GAAGC,CAAI,EAAKH,EAC7B,OAAOG,CACV,CAED,MADmB,MAAOH,EAEf,CACH,EAAIA,EAAe,EAAIzL,GAAsB0L,EAAW,MACxD,EAAID,EAAe,EAAIzL,GAAsB0L,EAAW,MACpE,EAGe,CACH,MAAQD,EAAe,MAAQzL,GAAsB0L,EAAW,MAChE,OAASD,EAAe,OAASzL,GAAsB0L,EAAW,MAC9E,CAEA,CACO,SAASG,GAAYvH,EAAUoH,EAAY,CAC9C,OAAOF,GAAkBlH,EAAUoH,CAAU,CACjD,CAIA,SAASI,GAAatB,EAAUuB,EAAazJ,EAAO0J,EAAUC,EAAU,CACpE,OAAQF,EAAW,CACf,KAAKpG,GAAY,IACTrD,GAAS2J,GACTzB,EAAS,QAAO,EAEpB,MACJ,KAAK7E,GAAY,IACTrD,GAAS0J,GACTxB,EAAS,QAAO,EAEpB,KACP,CACL,CACO,SAAS0B,GAAgB1B,EAAUpF,EAAM+G,EAAiBJ,EAAaK,EAAO,CAEjF,GAAI5B,EAAS,WACT,CAACpF,GACD,CAACA,EAAK,SACJA,EAAK,UAAY,GAAY,IAAaA,EAAK,OAAS,IAAaA,EAAK,UAAY,GACxF,OAEJ,MAAMmB,GAAYnB,EAAK,UAAY,GAAegH,EAAM,OAAQJ,EAAW5G,EAAK,IAAK6G,EAAW7G,EAAK,IAAKiH,EAAQjH,EAAK,OAAS,EAOhI,GANKA,EAAK,OACNA,EAAK,KAAO,IAEXA,EAAK,WAAa,GAAY,GAAYA,EAAK,MAAQA,EAAK,WAAa,KAC1EA,EAAK,MAAQgH,EAAM,OAElB,GAAAhH,EAAK,WAAa,GAAY,GAAYA,EAAK,MAAQA,EAAK,WAAa,IAG9E,QAAQA,EAAK,OAAM,CACf,KAAKM,EAAgB,WACbN,EAAK,OAAS6G,GACVE,EACA/G,EAAK,OAASM,EAAgB,WAG9BN,EAAK,OAAS6G,EAEb7G,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,SAGLA,EAAK,OAASmB,EAElB,MACJ,KAAKb,EAAgB,WACbN,EAAK,OAAS4G,GACVG,EACA/G,EAAK,OAASM,EAAgB,WAG9BN,EAAK,OAAS6G,EAEb7G,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,SAGLA,EAAK,OAASmB,CAEzB,CACGnB,EAAK,UAAYiH,IAAU,IAC3BjH,EAAK,UAAYiH,GAErBP,GAAatB,EAAUuB,EAAa3G,EAAK,MAAO4G,EAAUC,CAAQ,EAC7DzB,EAAS,YACVpF,EAAK,MAAQ5C,EAAM4C,EAAK,MAAO4G,EAAUC,CAAQ,GAEzD,CC/ZO,IAAIK,IACV,SAAUA,EAAW,CAClBA,EAAU,OAAY,SACtBA,EAAU,UAAe,WAC7B,GAAGA,KAAcA,GAAY,CAAA,EAAG,ECChC,IAAIC,IACH,SAAUA,EAAY,CACnBA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,GACtC,GAAGA,KAAeA,GAAa,CAAE,EAAC,EAClC,MAAMC,GAAmB,SAAUC,GAAgB,MAAOC,GAAgB,IAAI,IACvE,SAASC,GAAgBC,EAAS,CACrCF,GAAc,IAAIE,EAAQ,IAAKA,CAAO,CAC1C,CACA,SAASC,GAAarH,EAAO,CACzB,SAAW,CAAA,CAAGoH,CAAO,IAAKF,GACtB,GAAIlH,EAAM,WAAWoH,EAAQ,YAAY,EACrC,OAAOA,EAAQ,YAAYpH,CAAK,EAGxC,MAAMsH,EAAiB,6CAA8CC,EAAWvH,EAAM,QAAQsH,EAAgB,CAACnB,EAAGrI,EAAG0J,EAAGC,EAAGC,IAChH5J,EAAIA,EAAI0J,EAAIA,EAAIC,EAAIA,GAAKC,IAAM,OAAYA,EAAIA,EAAI,GAC7D,EAAGC,EAAQ,yDAA0DC,EAASD,EAAM,KAAKJ,CAAQ,EAAGM,EAAQ,GAC7G,OAAOD,EACD,CACE,EAAGA,EAAOb,GAAW,CAAC,IAAM,OACtB,SAASa,EAAOb,GAAW,CAAC,EAAGc,CAAK,EAJ+F,IAAjB,EAMxH,EAAG,SAASD,EAAOb,GAAW,CAAC,EAAGc,CAAK,EACvC,EAAG,SAASD,EAAOb,GAAW,CAAC,EAAGc,CAAK,EACvC,EAAG,SAASD,EAAOb,GAAW,CAAC,EAAGc,CAAK,CAC1C,EACC,MACV,CACO,SAASC,GAAgB9H,EAAOsC,EAAOC,EAAW,GAAM,CAC3D,GAAI,CAACvC,EACD,OAEJ,MAAM+H,EAAQjN,GAASkF,CAAK,EAAI,CAAE,MAAOA,CAAO,EAAGA,EACnD,GAAIlF,GAASiN,EAAM,KAAK,EACpB,OAAOC,GAAWD,EAAM,MAAOzF,EAAOC,CAAQ,EAElD,GAAItH,GAAQ8M,EAAM,KAAK,EACnB,OAAOD,GAAgB,CACnB,MAAOzF,GAAc0F,EAAM,MAAOzF,EAAOC,CAAQ,CAC7D,CAAS,EAEL,SAAW,CAAA,CAAG6E,CAAO,IAAKF,GAAe,CACrC,MAAMxG,EAAM0G,EAAQ,iBAAiBW,CAAK,EAC1C,GAAIrH,EACA,OAAOA,CAEd,CACL,CACO,SAASsH,GAAWhI,EAAOsC,EAAOC,EAAW,GAAM,CACtD,GAAI,CAACvC,EACD,OAEJ,MAAM+H,EAAQjN,GAASkF,CAAK,EAAI,CAAE,MAAOA,CAAO,EAAGA,EACnD,GAAIlF,GAASiN,EAAM,KAAK,EACpB,OAAOA,EAAM,QAAUf,GAAmBiB,GAAmB,EAAGC,GAAYH,EAAM,KAAK,EAE3F,GAAI9M,GAAQ8M,EAAM,KAAK,EACnB,OAAOC,GAAW,CACd,MAAO3F,GAAc0F,EAAM,MAAOzF,EAAOC,CAAQ,CAC7D,CAAS,EAEL,SAAW,CAAA,CAAG6E,CAAO,IAAKF,GAAe,CACrC,MAAMxG,EAAM0G,EAAQ,YAAYW,CAAK,EACrC,GAAIrH,EACA,OAAOA,CAEd,CACL,CAKO,SAASyH,GAAgBJ,EAAOzF,EAAOC,EAAW,GAAM,CAC3D,MAAM6F,EAAMN,GAAgBC,EAAOzF,EAAOC,CAAQ,EAClD,OAAO6F,EAAMC,GAASD,CAAG,EAAI,MACjC,CACO,SAASC,GAASN,EAAO,CAC5B,MAAiHO,EAAKP,EAAM,EAAI,IAAQQ,EAAKR,EAAM,EAAI,IAAQS,EAAKT,EAAM,EAAI,IAAQxK,EAAM,KAAK,IAAI+K,EAAIC,EAAIC,CAAE,EAAGlL,EAAM,KAAK,IAAIgL,EAAIC,EAAIC,CAAE,EAAG9H,EAAM,CAChP,EAAG,EACH,GAAInD,EAAMD,GAAO,GACjB,EAAG,CACX,EACI,OAAIC,IAAQD,IACRoD,EAAI,EAAIA,EAAI,EAAI,IAAQnD,EAAMD,IAAQC,EAAMD,IAAQC,EAAMD,IAAQ,EAASC,EAAMD,GACjFoD,EAAI,EACA4H,IAAO/K,GACAgL,EAAKC,IAAOjL,EAAMD,GAClBoD,EAAI,EAAI6H,IAAOhL,EAAM,GAAUiL,EAAKF,IAAO/K,EAAMD,GAAO,EAAS,GAAUgL,EAAKC,IAAOhL,EAAMD,IAE5GoD,EAAI,GAAK,IACTA,EAAI,GAAK,IACTA,EAAI,GAAK,GACLA,EAAI,EAAI,IACRA,EAAI,GAAK,KAETA,EAAI,GAAK,MACTA,EAAI,GAAK,KAENA,CACX,CAIO,SAASwH,GAAYlI,EAAO,CAC/B,OAAOqH,GAAarH,CAAK,CAC7B,CACO,SAASyI,GAASC,EAAK,CAC1B,MAA8DC,GAAMD,EAAI,EAAI,IAAQ,KAAQ,IAAME,EAAI,KAAK,IAAI,EAAM,KAAK,IAAI,IAAMF,EAAI,CAAC,CAAC,EAAGG,EAAI,KAAK,IAAI,EAAM,KAAK,IAAI,IAAMH,EAAI,CAAC,CAAC,EAAGI,EAAcH,EAAI,IAAMI,EAAcH,EAAI,IAAMI,EAAcH,EAAI,IAAMI,EAAY,IAAKC,EAAS,EAC1R,GAAIN,IAAM,EAAM,CACZ,MAAMO,EAAiB,KAAK,MAAMH,EAAcC,CAAS,EACzD,MAAO,CAAE,EAAGE,EAAgB,EAAGA,EAAgB,EAAGA,EACrD,CACD,MAAMlK,EAAO,GAAKzC,EAAS,EAAG4M,EAAU,CAACC,EAAOC,EAAOC,IAAU,CAQ7D,GANIA,EAAQ,GACRA,IAEAA,EAAQ,GACRA,IAEAA,EAAQ,EAAW,EACnB,OAAOF,GAASC,EAAQD,GAAS,EAAWE,EAEhD,GAAIA,EAAQ/M,EAAS,EACjB,OAAO8M,EAEX,GAAIC,EAAQL,EAAS,EAAW1M,EAAQ,CACpC,MAAMgN,GAAchN,EAAS0M,EAC7B,OAAOG,GAASC,EAAQD,IAAUG,GAAcD,GAAS,CAC5D,CACD,OAAOF,CACV,EAAEI,EAAoB,EAAGJ,EAAQL,EAAc/J,EAC1C+J,GAAeS,EAAoBV,GACnCC,EAAcD,EAAcC,EAAcD,EAAaO,EAAQ9M,EAASwM,EAAcK,EAAOK,EAAiB,EAAGC,EAAaD,EAAiBR,EAAQU,EAAM,KAAK,IAAIX,EAAWA,EAAYG,EAAQE,EAAOD,EAAOP,EAAca,CAAU,CAAC,EAAGE,EAAQ,KAAK,IAAIZ,EAAWA,EAAYG,EAAQE,EAAOD,EAAOP,CAAW,CAAC,EAAGgB,EAAO,KAAK,IAAIb,EAAWA,EAAYG,EAAQE,EAAOD,EAAOP,EAAca,CAAU,CAAC,EACxZ,MAAO,CAAE,EAAG,KAAK,MAAMC,CAAG,EAAG,EAAG,KAAK,MAAMC,CAAK,EAAG,EAAG,KAAK,MAAMC,CAAI,EACzE,CACO,SAASC,GAAWC,EAAM,CAC7B,MAAMC,EAAYxB,GAASuB,CAAI,EAC/B,MAAO,CACH,EAAGA,EAAK,EACR,EAAGC,EAAU,EACb,EAAGA,EAAU,EACb,EAAGA,EAAU,CACrB,CACA,CACO,SAAShC,GAAkB3K,EAAK,CAEnC,MAAO,CACH,EAAG,KAAK,MAAMO,EAAcM,EAAc,EAAU,GAAM,CAAC,CAAC,EAC5D,EAAG,KAAK,MAAMN,EAAcM,EAAc,EAAU,GAAM,CAAC,CAAC,EAC5D,EAAG,KAAK,MAAMN,EAAcM,EAAc,EAAU,GAAM,CAAC,CAAC,CACpE,CACA,CACO,SAAS+L,GAAgBnC,EAAOoC,EAAS,CAE5C,MAAO,QAAQpC,EAAM,CAAC,KAAKA,EAAM,CAAC,KAAKA,EAAM,CAAC,KAAKoC,GAAW,CAAc,GAChF,CACO,SAASC,GAAgBrC,EAAOoC,EAAS,CAE5C,MAAO,QAAQpC,EAAM,CAAC,KAAKA,EAAM,CAAC,MAAMA,EAAM,CAAC,MAAMoC,GAAW,CAAc,GAClF,CACO,SAASE,GAASC,EAAQC,EAAQC,EAAOC,EAAO,CACnD,IAAIC,EAAOJ,EAAQK,EAAOJ,EAC1B,OAAIG,EAAK,IAAM,SACXA,EAAOjC,GAAS6B,CAAM,GAEtBK,EAAK,IAAM,SACXA,EAAOlC,GAAS8B,CAAM,GAEnB,CACH,EAAG/M,GAAIkN,EAAK,EAAGC,EAAK,EAAGH,EAAOC,CAAK,EACnC,EAAGjN,GAAIkN,EAAK,EAAGC,EAAK,EAAGH,EAAOC,CAAK,EACnC,EAAGjN,GAAIkN,EAAK,EAAGC,EAAK,EAAGH,EAAOC,CAAK,CAC3C,CACA,CACO,SAASG,GAAazG,EAAIC,EAAIyG,EAAW,CAC5C,GAAIA,IAAc7D,GACd,OAAOiB,GAAiB,EAEvB,GAAI4C,IAAc5D,GAAe,CAClC,MAAM6D,EAAc3G,EAAG,aAAc,GAAIA,EAAG,eAAc,EAAI4G,GAAY3G,GAAA,YAAAA,EAAI,kBAAkBA,GAAA,YAAAA,EAAI,kBACpG,GAAI0G,GAAeC,GAAa3G,EAC5B,OAAOiG,GAASS,EAAaC,EAAW5G,EAAG,YAAaC,EAAG,UAAS,CAAE,EAErE,CACD,MAAM4G,EAAWF,GAAeC,EAChC,GAAIC,EACA,OAAOvC,GAASuC,CAAQ,CAE/B,CACJ,KAEG,QAAOH,CAEf,CACO,SAASI,GAAmBC,EAAUC,EAAOC,EAAS,CACzD,MAAMrD,EAAQjN,GAASoQ,CAAQ,EAAIA,EAAWA,EAAS,MACvD,OAAInD,IAAUf,GACNoE,EACOtD,GAAgB,CACnB,MAAOC,CACvB,CAAa,EAEDoD,EACOnE,GAEJC,GAEFc,IAAUd,GACRA,GAGAa,GAAgB,CACnB,MAAOC,CACnB,CAAS,CAET,CACO,SAASsD,GAAoBC,EAAW,CAC3C,OAAOA,IAAc,OACf,CACE,EAAGA,EAAU,EAAE,MACf,EAAGA,EAAU,EAAE,MACf,EAAGA,EAAU,EAAE,KAClB,EACC,MACV,CACO,SAASC,GAAuB7C,EAAK7C,EAAkB2F,EAAc,CACxE,MAAMC,EAAW,CACb,EAAG,CACC,OAAQ,GACR,MAAO/C,EAAI,CACd,EACD,EAAG,CACC,OAAQ,GACR,MAAOA,EAAI,CACd,EACD,EAAG,CACC,OAAQ,GACR,MAAOA,EAAI,CACd,CACT,EACI,OAAI7C,IACA6F,GAAkBD,EAAS,EAAG5F,EAAiB,EAAG2F,CAAY,EAC9DE,GAAkBD,EAAS,EAAG5F,EAAiB,EAAG2F,CAAY,EAC9DE,GAAkBD,EAAS,EAAG5F,EAAiB,EAAG2F,CAAY,GAE3DC,CACX,CACA,SAASC,GAAkBC,EAAYC,EAAgBJ,EAAc,CACjEG,EAAW,OAASC,EAAe,OACnC,MAAMC,EAAkB,EAAG/F,EAAc,EAAGgG,EAAe,EAAGC,EAAc,EACxEJ,EAAW,QACXA,EAAW,SAAYzN,EAAc0N,EAAe,KAAK,EAAIpR,GAAsBgR,EACnFG,EAAW,MAAQ7F,EAAc5H,EAAc0N,EAAe,KAAK,EACnED,EAAW,OAASzL,EAAgB,WACpCyL,EAAW,MAAQG,EACnBH,EAAW,SAAWzN,EAAc0N,EAAe,KAAK,EACxDD,EAAW,KAAOI,EAClBJ,EAAW,UAAYzN,EAAc0N,EAAe,KAAK,EAAIlR,EACxDkR,EAAe,OAChBD,EAAW,UAAY5O,IACvB4O,EAAW,OAAS5O,KAExB4O,EAAW,aAAeA,EAAW,MACrCA,EAAW,OAASxN,EAAcyN,EAAe,MAAM,GAGvDD,EAAW,SAAWE,CAE9B,CACO,SAASG,GAAiBpM,EAAMqM,EAAOC,EAAUtF,EAAO,CAa3D,GAXI,CAAChH,GACD,CAACA,EAAK,SACJA,EAAK,UAAY,GAAY,IAAaA,EAAK,OAAS,IAAaA,EAAK,UAAY,KAGvFA,EAAK,OACNA,EAAK,KAAO,IAEXA,EAAK,WAAa,GAAY,GAAYA,EAAK,MAAQA,EAAK,WAAa,KAC1EA,EAAK,MAAQgH,EAAM,QAElBhH,EAAK,WAAa,GAAY,GAAYA,EAAK,MAAQA,EAAK,WAAa,IAC1E,OAEJ,MAAM+C,EAAS/C,EAAK,OAAS/B,EAAc+B,EAAK,MAAM,EAAI,EAAWmB,GAAYnB,EAAK,UAAY,GAAegH,EAAM,OAASjE,EAAS,IAAgBkE,EAAQjH,EAAK,OAAS,EAAUrC,EAAMQ,GAAYkO,CAAK,EAAG3O,EAAMW,GAAYgO,CAAK,EACtO,CAACC,GAAYtM,EAAK,SAAWM,EAAgB,YAC7CN,EAAK,OAASmB,EACVnB,EAAK,MAAQrC,IACRqC,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,QACDsM,EACAtM,EAAK,OAASM,EAAgB,WAG9BN,EAAK,OAASrC,KAKtBqC,EAAK,OAASmB,EAEVnB,EAAK,MADQ,IAERA,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,QACLA,EAAK,OAASM,EAAgB,aAGlCN,EAAK,UAAYiH,IAAU,IAC3BjH,EAAK,UAAYiH,GAErBjH,EAAK,MAAQ5C,EAAM4C,EAAK,MAAOtC,EAAKC,CAAG,CAC3C,CACO,SAAS4O,GAAYpE,EAAOnB,EAAO,CACtC,GAAI,CAACmB,EACD,OAEJ,KAAM,CAAE,EAAAY,EAAG,EAAAC,EAAG,EAAAC,CAAC,EAAKd,EACdqE,EAAS,CACX,EAAG,CAAE,IAAK,EAAG,IAAK,GAAK,EACvB,EAAG,CAAE,IAAK,EAAG,IAAK,GAAK,EACvB,EAAG,CAAE,IAAK,EAAG,IAAK,GAAK,CAC/B,EACQzD,GACAqD,GAAiBrD,EAAGyD,EAAO,EAAG,GAAOxF,CAAK,EAE1CgC,GACAoD,GAAiBpD,EAAGwD,EAAO,EAAG,GAAMxF,CAAK,EAEzCiC,GACAmD,GAAiBnD,EAAGuD,EAAO,EAAG,GAAMxF,CAAK,CAEjD,CCvVA,MAAM1L,GAAS,CAAE,EAAG,EAAG,EAAG,CAAG,EAAEmR,GAAmB,CAC9C,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,CACP,EACO,SAASC,GAASC,EAASC,EAAOC,EAAK,CAC1CF,EAAQ,UAAS,EACjBA,EAAQ,OAAOC,EAAM,EAAGA,EAAM,CAAC,EAC/BD,EAAQ,OAAOE,EAAI,EAAGA,EAAI,CAAC,EAC3BF,EAAQ,UAAS,CACrB,CACO,SAASG,GAAUH,EAASI,EAAWC,EAAW,CACrDL,EAAQ,UAAYK,GAAa,gBACjCL,EAAQ,SAASrR,GAAO,EAAGA,GAAO,EAAGyR,EAAU,MAAOA,EAAU,MAAM,CAC1E,CACO,SAASE,GAAWN,EAASI,EAAWG,EAAO3C,EAAS,CACtD2C,IAGLP,EAAQ,YAAcpC,EACtBoC,EAAQ,UAAUO,EAAO5R,GAAO,EAAGA,GAAO,EAAGyR,EAAU,MAAOA,EAAU,MAAM,EAC9EJ,EAAQ,YAAc,EAC1B,CACO,SAASQ,GAAMR,EAASI,EAAW,CACtCJ,EAAQ,UAAUrR,GAAO,EAAGA,GAAO,EAAGyR,EAAU,MAAOA,EAAU,MAAM,CAC3E,CACO,SAASK,GAAapN,EAAM,CAC/B,KAAM,CAAE,UAAAqN,EAAW,QAAAV,EAAS,SAAAvH,EAAU,MAAA4B,EAAO,YAAAsG,EAAa,eAAAC,EAAgB,UAAAC,EAAW,OAAAxK,EAAQ,QAAAuH,EAAS,OAAAkD,EAAQ,UAAAC,CAAY,EAAG1N,EAAM2N,EAAMvI,EAAS,YAAa,EAAEwI,EAAe,EAAG/R,EAAQuJ,EAAS,UAAYA,EAAS,aAAeA,EAAS,SAAS,MAAQwI,GAAeC,EAAa,CAC1R,IAAK,KAAK,IAAIhS,CAAK,EACnB,IAAK,KAAK,IAAIA,CAAK,CAC3B,EAAOiS,EAAW,CAAC,CAACjS,EAAOkS,EAAW,EAAGC,EAAgB,CACjD,EAAGH,EAAW,KAAOH,EAAU,GAAKjB,GAAiB,GACrD,EAAGqB,EAAWD,EAAW,KAAOH,EAAU,GAAKK,GAAYL,EAAU,GAAKjB,GAAiB,EAC3F,EAAGqB,EAAW,CAACD,EAAW,KAAOH,EAAU,GAAKK,GAAYL,EAAU,GAAKjB,GAAiB,EAC5F,EAAGoB,EAAW,KAAOH,EAAU,GAAKjB,GAAiB,EAC7D,EACIE,EAAQ,aAAaqB,EAAc,EAAGA,EAAc,EAAGA,EAAc,EAAGA,EAAc,EAAGL,EAAI,EAAGA,EAAI,CAAC,EACjGJ,IACAZ,EAAQ,yBAA2Ba,GAEvC,MAAMS,EAAc7I,EAAS,YACzBqI,EAAO,QAAUQ,IACjBtB,EAAQ,WAAac,EAAO,KAC5Bd,EAAQ,YAAcrC,GAAgB2D,CAAW,EACjDtB,EAAQ,cAAgBc,EAAO,OAAO,EACtCd,EAAQ,cAAgBc,EAAO,OAAO,GAEtCH,EAAY,OACZX,EAAQ,UAAYW,EAAY,MAEpC,MAAMY,EAAiB,EAAGC,EAAc/I,EAAS,aAAe8I,EAChEvB,EAAQ,UAAYwB,EAChBb,EAAY,SACZX,EAAQ,YAAcW,EAAY,QAEtC,MAAMc,EAAW,CACb,UAAAf,EACA,QAAAV,EACA,SAAAvH,EACA,OAAApC,EACA,QAAAuH,EACA,MAAAvD,EACA,cAAAgH,EACA,YAAAG,CACR,EACIE,GAAUD,CAAQ,EAClBE,GAAmBF,CAAQ,EAC3BG,GAAWH,CAAQ,EACnBzB,EAAQ,yBAA2B,cACnCA,EAAQ,eAAc,CAC1B,CACO,SAAS4B,GAAWvO,EAAM,CAC7B,KAAM,CAAE,UAAAqN,EAAW,QAAAV,EAAS,SAAAvH,EAAU,OAAApC,EAAQ,QAAAuH,EAAS,MAAAvD,EAAO,cAAAgH,CAAe,EAAGhO,EAChF,GAAI,CAACoF,EAAS,OACV,OAEJ,MAAMoJ,EAASnB,EAAU,cAAc,IAAIjI,EAAS,MAAM,EACrDoJ,GAGLA,EAAO,KAAK,CACR,QAAA7B,EACA,SAAAvH,EACA,OAAApC,EACA,QAAAuH,EACA,MAAAvD,EACA,WAAYqG,EAAU,OAAO,WAC7B,cAAe,CAAE,GAAGW,CAAe,CAC3C,CAAK,CACL,CACO,SAASK,GAAUrO,EAAM,CAC5B,KAAM,CAAE,UAAAqN,EAAW,QAAAV,EAAS,SAAAvH,EAAU,OAAApC,EAAQ,QAAAuH,EAAS,MAAAvD,EAAO,YAAAmH,EAAa,cAAAH,CAAe,EAAGhO,EAAMkO,EAAiB,EACpH,GAAI,CAAC9I,EAAS,MACV,OAEJ,MAAMoJ,EAASnB,EAAU,aAAa,IAAIjI,EAAS,KAAK,EACnDoJ,IAGL7B,EAAQ,UAAS,EACjB6B,EAAO,KAAK,CACR,QAAA7B,EACA,SAAAvH,EACA,OAAApC,EACA,QAAAuH,EACA,MAAAvD,EACA,WAAYqG,EAAU,OAAO,WAC7B,cAAe,CAAE,GAAGW,CAAe,CAC3C,CAAK,EACG5I,EAAS,YACTuH,EAAQ,UAAS,EAEjBwB,EAAcD,GACdvB,EAAQ,OAAM,EAEdvH,EAAS,WACTuH,EAAQ,KAAI,EAEpB,CACO,SAAS2B,GAAmBtO,EAAM,CACrC,KAAM,CAAE,UAAAqN,EAAW,QAAAV,EAAS,SAAAvH,EAAU,OAAApC,EAAQ,QAAAuH,EAAS,MAAAvD,EAAO,cAAAgH,CAAe,EAAGhO,EAChF,GAAI,CAACoF,EAAS,MACV,OAEJ,MAAMoJ,EAASnB,EAAU,aAAa,IAAIjI,EAAS,KAAK,EACnDoJ,GAAA,MAAAA,EAAQ,WAGbA,EAAO,UAAU,CACb,QAAA7B,EACA,SAAAvH,EACA,OAAApC,EACA,QAAAuH,EACA,MAAAvD,EACA,WAAYqG,EAAU,OAAO,WAC7B,cAAe,CAAE,GAAGW,CAAe,CAC3C,CAAK,CACL,CACO,SAASS,GAAW9B,EAAS+B,EAAQ1H,EAAO,CAC1C0H,EAAO,MAGZA,EAAO,KAAK/B,EAAS3F,CAAK,CAC9B,CACO,SAAS2H,GAAmBhC,EAAS+B,EAAQtJ,EAAU4B,EAAO,CAC5D0H,EAAO,cAGZA,EAAO,aAAa/B,EAASvH,EAAU4B,CAAK,CAChD,CACO,SAAS4H,GAASzG,EAAO0G,EAAM3R,EAAO,CAEzC,MAAO,CACH,EAAGiL,EAAM,EACT,EAAGA,EAAM,EACT,EAAGA,EAAM,GAAK0G,IAAS3H,GAAU,OAAS,GAAW,GAAWhK,CACxE,CACA,CC5JA,SAAS4R,GAAkB1N,EAAQ2N,EAAWtL,EAAK,CAC/C,MAAMuL,EAAWD,EAAUtL,CAAG,EAAGwL,EAAe,EAC5CD,IAAa,SACb5N,EAAOqC,CAAG,GAAKrC,EAAOqC,CAAG,GAAKwL,GAAgBD,EAEtD,CACA,SAASE,GAASC,EAAQC,EAAOC,EAAY,GAAO,CAChD,GAAI,CAACD,EACD,OAEJ,MAAM7N,EAAU4N,EAChB,GAAI,CAAC5N,EACD,OAEJ,MAAM+N,EAAe/N,EAAQ,MAC7B,GAAK+N,EAGL,UAAW7L,KAAO2L,EAAO,CACrB,MAAMlS,EAAQkS,EAAM3L,CAAG,EAClBvG,GAGLoS,EAAa,YAAY7L,EAAKvG,EAAOmS,EAAY,YAAc,EAAE,CACpE,CACL,CACO,MAAME,EAAO,CAChB,YAAYlC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,uBAAyBjI,GAAY,OACtC,UAAWoK,KAAW,KAAK,mBACvBvP,EAAAuP,EAAQ,YAAR,MAAAvP,EAAA,KAAAuP,EAAoBpK,EAEpC,EACQ,KAAK,sBAAwB,CAACqK,EAAKrK,EAAUpC,EAAQ0M,EAAUpC,EAAaI,IAAc,OACtF,UAAW8B,KAAW,KAAK,iBAAkB,CACzC,GAAIA,EAAQ,eAAgB,CACxB,KAAM,CAAE,KAAAG,EAAM,OAAAC,CAAM,EAAKJ,EAAQ,eAAepK,EAAUqK,EAAKzM,EAAQ0M,CAAQ,EAC3EC,IACArC,EAAY,KAAOqC,GAEnBC,IACAtC,EAAY,OAASsC,EAE5B,CACD,GAAIJ,EAAQ,mBAAoB,CAC5B,MAAMK,EAAmBL,EAAQ,mBAAmBpK,CAAQ,EAC5D,UAAW3B,KAAOoM,EACdf,GAAkBpB,EAAWmC,EAAkBpM,CAAG,CAEzD,EACDxD,EAAAuP,EAAQ,aAAR,MAAAvP,EAAA,KAAAuP,EAAqBpK,EACxB,CACb,EACQ,KAAK,oBAAsB,IAAM,OAC7B,UAAWsJ,KAAU,KAAK,gBACtBzO,EAAAyO,EAAO,SAAP,MAAAzO,EAAA,KAAAyO,EAEhB,EACQ,KAAK,yBAA2BtJ,GAAY,CACxC,IAAI0K,EAAQC,EACZ,UAAWrB,KAAU,KAAK,cAOtB,GANI,CAACoB,GAAUpB,EAAO,oBAClBoB,EAASvH,GAAgBmG,EAAO,kBAAkBtJ,CAAQ,CAAC,GAE3D,CAAC2K,GAAUrB,EAAO,sBAClBqB,EAASxH,GAAgBmG,EAAO,oBAAoBtJ,CAAQ,CAAC,GAE7D0K,GAAUC,EACV,MAGR,MAAO,CAACD,EAAQC,CAAM,CAClC,EACQ,KAAK,WAAa,SAAY,CAC1B,MAAMjK,EAAU,KAAK,UAAU,cAAekK,EAAQlK,EAAQ,eAAe,MAAOqC,EAAQ6H,EAAM,MAClG,GAAI7H,EAAO,CACP,MAAM8H,EAAW/H,GAAgBC,CAAK,EACtC,GAAI8H,EAAU,CACV,MAAMC,EAAa,CACf,GAAGD,EACH,EAAGD,EAAM,OACjC,EACoB,KAAK,iBAAmB1F,GAAgB4F,EAAYA,EAAW,CAAC,CACnE,CACJ,MAEG,MAAM,IAAI,QAAQ,CAACC,EAASC,IAAW,CACnC,GAAI,CAACJ,EAAM,MACP,OAEJ,MAAMK,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,iBAAiB,OAAQ,IAAM,CAC/B,KAAK,YAAc,CACf,MAAOA,EACP,QAASL,EAAM,OAC3C,EACwBG,GACxB,CAAqB,EACDE,EAAI,iBAAiB,QAASC,GAAO,CACjCF,EAAOE,EAAI,KAAK,CACxC,CAAqB,EACDD,EAAI,IAAML,EAAM,KACpC,CAAiB,CAEjB,EACQ,KAAK,WAAa,IAAM,CACpB,MAAMzO,EAAU,KAAK,QAASuE,EAAU,KAAK,UAAU,cACvD,GAAKvE,EAGL,CAAI,KAAK,aACL,KAAK,eAAiB8B,EAAW,CAAE,EAAE9B,EAAQ,KAAK,EAClD,KAAK,oBAAmB,GAGxB,KAAK,oBAAmB,EAE5B,UAAWkC,KAAOqC,EAAQ,MAAO,CAC7B,GAAI,CAACrC,GAAO,CAACqC,EAAQ,MACjB,SAEJ,MAAM5I,EAAQ4I,EAAQ,MAAMrC,CAAG,EAC1BvG,GAGLqE,EAAQ,MAAM,YAAYkC,EAAKvG,EAAO,WAAW,CACpD,EACb,EACQ,KAAK,WAAa,SAAY,CAC1B,MAAM4I,EAAU,KAAK,UAAU,cAAeyK,EAAQzK,EAAQ,UAAU,KAAK,MAAO0K,EAAYD,EAAM,KACtG,GAAI,CAACA,EAAM,OACP,OAEJ,MAAME,EAAkB,EAAGlG,EAAUkG,EAAkBF,EAAM,OAC7D,GAAIC,EAAU,MAAO,CACjB,MAAME,EAAYxI,GAAgBsI,EAAU,KAAK,EACjD,GAAI,CAACE,EACD,OAEJ,KAAK,WAAa,CACd,MAAO,CACH,GAAGA,CACN,EACD,QAAAnG,CACpB,CACa,MAEG,MAAM,IAAI,QAAQ,CAAC4F,EAASC,IAAW,CACnC,GAAI,CAACI,EAAU,MACX,OAEJ,MAAMH,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,iBAAiB,OAAQ,IAAM,CAC/B,KAAK,WAAa,CACd,MAAOA,EACP,QAAA9F,CAC5B,EACwB4F,GACxB,CAAqB,EACDE,EAAI,iBAAiB,QAASC,GAAO,CACjCF,EAAOE,EAAI,KAAK,CACxC,CAAqB,EACDD,EAAI,IAAMG,EAAU,KACxC,CAAiB,CAEjB,EACQ,KAAK,WAAaxD,GAAa,CAC3B,KAAK,KAAKyC,GAAO3C,GAAU2C,EAAK,KAAK,KAAMzC,CAAS,CAAC,CACjE,EACQ,KAAK,YAAc,CAACE,EAAO3C,IAAY,CACnC,KAAK,KAAKkF,GAAOxC,GAAWwC,EAAK,KAAK,KAAMvC,EAAO3C,CAAO,CAAC,CACvE,EACQ,KAAK,aAAe,IAAM,CACtB,MAAMhJ,EAAU,KAAK,QAChBA,IAGL,KAAK,sBAAsBoP,GAAYA,EAAS,WAAY,CAAA,EAC5D,KAAK,WAAU,EACf,KAAK,eAAc,EACnB,KAAK,sBAAsBA,GAAY,CAC/B,CAACpP,GAAW,EAAEA,aAAmB,OAGrCoP,EAAS,QAAQpP,EAAS,CAAE,WAAY,EAAM,CAAA,CAC9D,CAAa,EACb,EACQ,KAAK,oBAAsB,IAAM,CAC7B,MAAMA,EAAU,KAAK,QAASqP,EAAgB,KAAK,eAC7CrP,GAAWqP,GAGjB1B,GAAS3N,EAASqP,CAAa,CAC3C,EACQ,KAAK,sBAAwB3O,GAAY,CAChC,KAAK,mBAGVA,EAAS,KAAK,iBAAiB,CAC3C,EACQ,KAAK,oBAAsB,IAAM,CAC7B,MAAMV,EAAU,KAAK,QACrB,GAAI,CAACA,EACD,OAGJ2N,GAAS3N,EAAS,CACd,SAAU,QACV,OAAQ,KAAK,UAAU,cAAc,WAAW,OAAO,SAH7C,EAG2D,EACrE,IAAK,IACL,KAAM,IACN,MAAO,OACP,OAAQ,MACX,EAAE,EAAI,CACnB,EACQ,KAAK,KAAO,CACR,OAAQ,EACR,MAAO,CACnB,EACQ,KAAK,SAAW,KAChB,KAAK,WAAa,GAClB,KAAK,iBAAmB,GACxB,KAAK,kBAAoB,GACzB,KAAK,eAAiB,GACtB,KAAK,cAAgB,EACxB,CACD,IAAI,aAAc,CACd,OAAO,KAAK,UAAU,cAAc,WAAW,MAClD,CACD,OAAQ,CACJ,MAAMuE,EAAU,KAAK,UAAU,cAAeyK,EAAQzK,EAAQ,UAAU,KAAK,MAAO0K,EAAY,KAAK,WACjG1K,EAAQ,eAAe,OACvB,KAAK,MAAK,EAELyK,EAAM,QAAUA,EAAM,OAJkG,GAIxEC,EACjDA,EAAU,MACV,KAAK,WAAWlG,GAAgBkG,EAAU,MAAOA,EAAU,OAAO,CAAC,EAE9DA,EAAU,OACf,KAAK,YAAYA,EAAU,MAAOA,EAAU,OAAO,EAGlD1K,EAAQ,OACb,KAAK,KAAK2J,GAAO,CACbtC,GAAMsC,EAAK,KAAK,IAAI,CACpC,CAAa,CAER,CACD,SAAU,CAEN,GADA,KAAK,KAAI,EACL,KAAK,WAAY,CACjB,MAAMlO,EAAU,KAAK,QACrBA,GAAA,MAAAA,EAAS,QACZ,MAEG,KAAK,oBAAmB,EAE5B,KAAK,iBAAmB,GACxB,KAAK,kBAAoB,GACzB,KAAK,eAAiB,GACtB,KAAK,cAAgB,EACxB,CACD,KAAK9E,EAAI,CACL,MAAMgT,EAAM,KAAK,SACjB,GAAKA,EAGL,OAAOhT,EAAGgT,CAAG,CAChB,CACD,UAAUhT,EAAI,CACV,MAAMgT,EAAM,KAAK,SACjB,GAAKA,EAGL,OAAOhT,EAAGgT,CAAG,CAChB,CACD,aAAarK,EAAU4B,EAAO,CAC1B,GAAI5B,EAAS,UAAYA,EAAS,UAC9B,OAEJ,MAAMpC,EAASoC,EAAS,UAAS,EACjC,GAAIpC,GAD+C,EAE/C,OAEJ,MAAM6N,EAAUzL,EAAS,aAAc,EAAE0L,EAAU1L,EAAS,eAAgB,GAAIyL,EAChF,GAAI,CAACf,EAAQC,CAAM,EAAI,KAAK,yBAAyB3K,CAAQ,EACxD0K,IACDA,EAASe,GAERd,IACDA,EAASe,GAET,GAAChB,GAAU,CAACC,IAGhB,KAAK,KAAMN,GAAQ,OACf,MAAMpC,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAe0D,EAAgB3L,EAAS,QAAQ,OAAQ4L,EAAqB,EAAGC,EAAeD,EAAqB5L,EAAS,aAAc8L,EAAiBD,GAAgBF,EAAc,YAAaI,EAAiB,EAAG5G,EAAUnF,EAAS,OAAO,WAAWnF,EAAAmF,EAAS,UAAT,YAAAnF,EAAkB,QAASkR,EAAgBC,EAAgBhM,EAAS,eAAiBmF,EAASmF,EAAWnF,EAAU2G,EAAgBG,EAAiBD,EAAgBF,EAAgBxD,EAAY,CAAE,EAAEJ,EAAc,CACpgB,KAAMwC,EAAStF,GAAgBsF,EAAQJ,CAAQ,EAAI,MACnE,EACYpC,EAAY,OAASyC,EAASvF,GAAgBuF,EAAQsB,CAAc,EAAI/D,EAAY,KACpF,KAAK,sBAAsBmC,EAAKrK,EAAUpC,EAAQ0M,EAAUpC,EAAaI,CAAS,EAClFN,GAAa,CACT,UAAAC,EACA,QAASoC,EACT,SAAArK,EACA,MAAA4B,EACA,YAAAsG,EACA,eAAgBxH,EAAQ,eAAe,OACvC,UAAWA,EAAQ,eAAe,UAClC,OAAQ9C,EAASiO,GAAgBF,EAAc,SAC/C,QAASrB,EACT,OAAQtK,EAAS,QAAQ,OACzB,UAAAsI,CAChB,CAAa,EACD,KAAK,uBAAuBtI,CAAQ,CAChD,CAAS,CACJ,CACD,mBAAmBsJ,EAAQtJ,EAAU4B,EAAO,CACxC,KAAK,KAAKyI,GAAOd,GAAmBc,EAAKf,EAAQtJ,EAAU4B,CAAK,CAAC,CACpE,CACD,WAAW0H,EAAQ1H,EAAO,CACtB,KAAK,KAAKyI,GAAOhB,GAAWgB,EAAKf,EAAQ1H,CAAK,CAAC,CAClD,CACD,MAAM,MAAO,CACT,KAAK,sBAAsBsK,GAAOA,EAAI,WAAY,CAAA,EAClD,KAAK,kBAAoBpP,GAAqBqP,GAAW,CACrD,UAAWC,KAAUD,EACbC,EAAO,OAAS,cAAgBA,EAAO,gBAAkB,SACzD,KAAK,aAAY,CAGrC,CAAS,EACD,KAAK,OAAM,EACX,KAAK,WAAU,EACf,MAAM,KAAK,aACX,GAAI,CACA,MAAM,KAAK,YACd,OACM,EAAG,CACN5Q,GAAW,EAAC,MAAM,CAAC,CACtB,CACD,KAAK,eAAc,EACnB,KAAK,sBAAsB0Q,GAAO,CAC1B,CAAC,KAAK,SAAW,EAAE,KAAK,mBAAmB,OAG/CA,EAAI,QAAQ,KAAK,QAAS,CAAE,WAAY,EAAI,CAAE,CAC1D,CAAS,EACD,KAAK,aAAY,EACjB,KAAK,YAAW,EAChB,KAAK,MAAK,CACb,CACD,gBAAiB,CACb,MAAMxL,EAAU,KAAK,UAAU,cAAe2L,EAAa3L,EAAQ,WAAYvE,EAAU,KAAK,QAC9F,GAAI,CAACA,EACD,OAEJ,MAAM+N,EAAe/N,EAAQ,MAC7B,GAAK+N,EAGL,IAAImC,EAAW,MAAO,CAClB,MAAMtJ,EAAQD,GAAgBuJ,EAAW,KAAK,EAC9CnC,EAAa,gBAAkBnH,EAAQmC,GAAgBnC,EAAOsJ,EAAW,OAAO,EAAI,EACvF,MAEGnC,EAAa,gBAAkB,GAEnCA,EAAa,gBAAkBmC,EAAW,OAAS,GACnDnC,EAAa,mBAAqBmC,EAAW,UAAY,GACzDnC,EAAa,iBAAmBmC,EAAW,QAAU,GACrDnC,EAAa,eAAiBmC,EAAW,MAAQ,GACpD,CACD,aAAc,CACV,KAAK,eAAiB,GACtB,SAAW,CAAA,CAAG/C,CAAM,IAAK,KAAK,UAAU,QAChCA,EAAO,QACP,KAAK,eAAe,KAAKA,CAAM,GAE/BA,EAAO,mBAAqBA,EAAO,sBACnC,KAAK,cAAc,KAAKA,CAAM,CAGzC,CACD,cAAe,CACX,KAAK,iBAAmB,GACxB,KAAK,kBAAoB,GACzB,UAAWc,KAAW,KAAK,UAAU,UAAU,SACvCA,EAAQ,WACR,KAAK,kBAAkB,KAAKA,CAAO,GAEnCA,EAAQ,gBAAkBA,EAAQ,oBAAsBA,EAAQ,aAChE,KAAK,iBAAiB,KAAKA,CAAO,CAG7C,CACD,WAAWL,EAAQ,CACX,KAAK,YAAc,KAAK,SACxB,KAAK,QAAQ,SAEjB,KAAK,WACDA,EAAO,SAAWpV,MAAsBoV,EAAO,QACzCA,EAAO,QAAQpV,EAAkB,IAAM,OACvC,KAAK,WACf,KAAK,QAAUoV,EACf,KAAK,QAAQ,WAAa,OAC1B,KAAK,eAAiB9L,EAAW,CAAA,EAAI,KAAK,QAAQ,KAAK,EACvD,KAAK,KAAK,OAAS8L,EAAO,aAC1B,KAAK,KAAK,MAAQA,EAAO,YACzB,KAAK,SAAW,KAAK,QAAQ,WAAW,IAAI,EAC5C,KAAK,sBAAsBmC,GAAO,CAC1B,CAAC,KAAK,SAAW,EAAE,KAAK,mBAAmB,OAG/CA,EAAI,QAAQ,KAAK,QAAS,CAAE,WAAY,EAAI,CAAE,CAC1D,CAAS,EACD,KAAK,UAAU,OAAO,OACtB,KAAK,eAAc,CACtB,CACD,OAAQ,CACJ,MAAMxL,EAAU,KAAK,UAAU,cAC/B,KAAK,KAAK2J,GAAO,CACT3J,EAAQ,eAAe,QAAUA,EAAQ,eAAe,OACxDqH,GAAMsC,EAAK,KAAK,IAAI,EAChB,KAAK,YACL,KAAK,YAAY,KAAK,YAAY,MAAO,KAAK,YAAY,OAAO,EAE5D,KAAK,iBACV,KAAK,WAAW,KAAK,gBAAgB,EAGrC,KAAK,WAAU,GAInB,KAAK,WAAU,CAE/B,CAAS,CACJ,CACD,QAAS,CACL,GAAI,CAAC,KAAK,QACN,MAAO,GAEX,MAAMpC,EAAY,KAAK,UAAWtH,EAAUsH,EAAU,OAAO,WAAYvK,EAAOuK,EAAU,OAAO,KAAMqE,EAAU,CAC7G,MAAO,KAAK,QAAQ,YAAc3L,EAClC,OAAQ,KAAK,QAAQ,aAAeA,CAChD,EACQ,GAAI2L,EAAQ,SAAW5O,EAAK,QACxB4O,EAAQ,QAAU5O,EAAK,OACvB4O,EAAQ,SAAW,KAAK,QAAQ,QAChCA,EAAQ,QAAU,KAAK,QAAQ,MAC/B,MAAO,GAEX,MAAMC,EAAU,CAAE,GAAG7O,GACrB,YAAK,QAAQ,MAAQA,EAAK,MAAQ,KAAK,QAAQ,YAAciD,EAC7D,KAAK,QAAQ,OAASjD,EAAK,OAAS,KAAK,QAAQ,aAAeiD,EAC5D,KAAK,UAAU,SACfsH,EAAU,UAAU,gBAAgB,CAChC,MAAOvK,EAAK,MAAQ6O,EAAQ,MAC5B,OAAQ7O,EAAK,OAAS6O,EAAQ,MAC9C,CAAa,EAEE,EACV,CACD,MAAO,CACH,KAAK,sBAAsBL,GAAOA,EAAI,WAAY,CAAA,EAClD,KAAK,kBAAoB,OACzB,KAAK,KAAK7B,GAAOtC,GAAMsC,EAAK,KAAK,IAAI,CAAC,CACzC,CACD,MAAM,cAAe,CACjB,GAAI,CAAC,KAAK,SAAW,CAAC,KAAK,OAAM,EAC7B,OAEJ,MAAMpC,EAAY,KAAK,UAAWuE,EAAevE,EAAU,sBAC3DA,EAAU,UAAU,aACpB,KAAK,oBAAmB,EACpBuE,GACA,MAAMvE,EAAU,SAEvB,CACL,CCreO,IAAIwE,IACV,SAAUA,EAAqB,CAC5BA,EAAoB,OAAY,SAChCA,EAAoB,OAAY,SAChCA,EAAoB,OAAY,QACpC,GAAGA,KAAwBA,GAAsB,CAAA,EAAG,ECDpD,MAAMjV,GAAS,EACf,SAASkV,EAAevQ,EAASwQ,EAAOC,EAASC,EAAKnM,EAAS,CAC3D,GAAImM,EAAK,CACL,IAAIC,EAAa,CAAE,QAAS,IACxBlX,GAAU8K,CAAO,EACjBoM,EAAW,QAAUpM,EAEhBA,IAAY,SACjBoM,EAAapM,GAEjBvE,EAAQ,iBAAiBwQ,EAAOC,EAASE,CAAU,CACtD,KACI,CACD,MAAMC,EAAgBrM,EACtBvE,EAAQ,oBAAoBwQ,EAAOC,EAASG,CAAa,CAC5D,CACL,CACO,MAAMC,EAAe,CACxB,YAAY/E,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,mBAAqBgF,GAAK,CAC3B,MAAMhF,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cACtD,GAAI,KAAK,SAAU,CACf,MAAMiF,EAAqBjF,EAAU,cAAc,MAAOkF,EAAWD,EAAmB,SACxF,GAAI,CAACC,EACD,OAEJD,EAAmB,cAAgB,CAAE,GAAGC,GACxCD,EAAmB,UAAY,IAAI,KAAM,EAAC,QAAO,EACjD,MAAME,EAAU1M,EAAQ,cAAc,OAAO,QAC7CrE,EAA0B+Q,EAAQ,KAAM3O,GAAQ,KAAK,UAAU,gBAAgBA,CAAI,CAAC,CACvF,CACGwO,EAAE,OAAS,YAEX,WAAW,IAAM,KAAK,kBAAmB,EAAE,GAAU,CAErE,EACQ,KAAK,mBAAsBA,GAAM,CAC7B,MAAMI,EAAaJ,EAAGhF,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,QAASqF,EAAgB5M,EAAQ,cAAe6M,EAAYF,EAAW,QAAUC,EAAc,KAAOA,EAAc,MAAOE,EAAQ9M,EAAQ,OAAO,KAAK8M,GAASA,EAAM,OAASD,CAAS,EAC1PC,GAAA,MAAAA,EAAO,QAAQ,MACVvF,EAAU,UAAUsF,CAAS,CAElD,EACQ,KAAK,wBAA0B,IAAM,CACjC,MAAMtF,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cACtD,KAAK,kBAAiB,EACjBvH,EAAQ,cAGT,yBAAU,QACVuH,EAAU,WAAa,GACvBA,EAAU,MAAK,IAGfA,EAAU,WAAa,GACnBA,EAAU,gBACLA,EAAU,KAAK,EAAI,EAGnBA,EAAU,KAAK,EAAI,GAG5C,EACQ,KAAK,oBAAsB,IAAM,CACzB,KAAK,iBACL,aAAa,KAAK,cAAc,EAChC,OAAO,KAAK,gBAEhB,MAAMwF,EAAe,SAAY,CAC7B,MAAM1D,EAAS,KAAK,UAAU,OAC9B,MAAMA,GAAA,YAAAA,EAAQ,eAC9B,EACY,KAAK,eAAiB,WAAW,IAAM,KAAK0D,EAAc,EAAE,KAAK,UAAU,cAAc,cAAc,OAAO,OAAO,MAAQ/X,CAAqB,CAC9J,EACQ,KAAK,8BAAgC,CAACgY,EAAoBb,IAAQ,CAC9D,MAAMc,EAAW,KAAK,UAAW1F,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAC3E2F,EAAkB3F,EAAU,cAAc,QAChD,GAAI,CAAC2F,EACD,OAEJ,MAAMC,EAAOD,EAAiBE,EAAW7F,EAAU,OAAO,QACtD6F,IACAA,EAAS,MAAM,cAAgBD,IAASC,EAAW,UAAY,SAE7DpN,EAAQ,cAAc,OAAO,QAAQ,QAAUA,EAAQ,cAAc,OAAO,QAAQ,UAG1FgM,EAAekB,EAAiB5Y,GAAgB2Y,EAAS,UAAWd,CAAG,EACvEH,EAAekB,EAAiB3Y,GAAiB0Y,EAAS,WAAYd,CAAG,EACzEH,EAAekB,EAAiBzY,GAAgBwY,EAAS,UAAWd,CAAG,EAClEnM,EAAQ,cAAc,OAAO,QAAQ,QAItCgM,EAAekB,EAAiB1Y,GAAeyY,EAAS,cAAed,CAAG,EAC1EH,EAAekB,EAAiB/Y,GAAc8Y,EAAS,QAASd,CAAG,EACnEH,EAAekB,EAAiBhZ,GAAgB+Y,EAAS,UAAWd,CAAG,GALvEH,EAAekB,EAAiB1Y,GAAeyY,EAAS,SAAUd,CAAG,EAOzEH,EAAekB,EAAiBF,EAAoBC,EAAS,WAAYd,CAAG,EAC5EH,EAAekB,EAAiBxY,GAAkBuY,EAAS,YAAad,CAAG,EACvF,EACQ,KAAK,iBAAmBA,GAAO,CAC3B,MAAMc,EAAW,KAAK,UAAW1F,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAe8F,EAAarN,EAAQ,cAAc,UAAWoN,EAAW7F,EAAU,OAAO,QAC1K,IAAIyF,EAAqB5Y,GACrBiZ,IAAetB,GAAoB,QACnCxE,EAAU,cAAc,QAAU,OAClCyF,EAAqB3Y,IAEhBgZ,IAAetB,GAAoB,QAAUqB,EAClD7F,EAAU,cAAc,QAAU6F,EAAS,eAAiBA,EAAS,WAGrE7F,EAAU,cAAc,QAAU6F,EAEtC,KAAK,kBAAkBjB,CAAG,EAC1B,KAAK,cAAcA,CAAG,EACtB,KAAK,8BAA8Ba,EAAoBb,CAAG,EACtD,UACAH,EAAe,SAAUpX,GAAuBqY,EAAS,iBAAkBd,EAAK,EAAK,CAErG,EACQ,KAAK,kBAAoBA,GAAO,CAC5B,MAAMc,EAAW,KAAK,UAAWK,EAAatR,GAAe,8BAA8B,EAC3F,GAAKsR,EAGL,IAAIA,EAAW,mBAAqB,OAAW,CAC3CtB,EAAesB,EAAY,SAAUL,EAAS,YAAad,CAAG,EAC9D,MACH,CACGmB,EAAW,cAAgB,SAG3BnB,EACAmB,EAAW,YAAYL,EAAS,cAAc,EAG9CK,EAAW,eAAeL,EAAS,cAAc,GAEjE,EACQ,KAAK,cAAgBd,GAAO,CACxB,MAAMc,EAAW,KAAK,UAAW1F,EAAY,KAAK,UAClD,GAAI,CADmEA,EAAU,cACpE,cAAc,OAAO,OAC9B,OAEJ,GAAI,OAAO,eAAmB,IAAa,CACvCyE,EAAe,OAAQrX,GAAasY,EAAS,OAAQd,CAAG,EACxD,MACH,CACD,MAAMiB,EAAW7F,EAAU,OAAO,QAC9B,KAAK,iBAAmB,CAAC4E,GACrBiB,GACA,KAAK,gBAAgB,UAAUA,CAAQ,EAE3C,KAAK,gBAAgB,aACrB,OAAO,KAAK,iBAEP,CAAC,KAAK,iBAAmBjB,GAAOiB,IACrC,KAAK,gBAAkB,IAAI,eAAgBG,GAAY,CACrCA,EAAQ,KAAKhB,GAAKA,EAAE,SAAWa,CAAQ,GAIrD,KAAK,oBAAmB,CAC5C,CAAiB,EACD,KAAK,gBAAgB,QAAQA,CAAQ,EAErD,EACQ,KAAK,WAAa,IAAM,CACpB,KAAM,CAAE,cAAAI,CAAa,EAAK,KAAK,UAC/B,GAAI,CAACA,EACD,OAEJ,KAAM,CAAE,MAAAC,CAAO,EAAGD,EAClBC,EAAM,SAAW,GACjBA,EAAM,aAAeA,EAAM,QACvC,EACQ,KAAK,iBAAmBlB,GAAK,CACzB,MAAMhF,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAe,CAAE,MAAAkG,CAAK,EAAKlG,EAAU,cAC3FkG,EAAM,OAAS,GACf,IAAIC,EAAU,GACd,MAAMC,EAAgBF,EAAM,SAC5B,GAAI,GAACE,GAAiB,CAAC3N,EAAQ,cAAc,OAAO,QAAQ,QAG5D,UAAW,CAAG,CAAA4I,CAAM,IAAKrB,EAAU,QAC/B,GAAKqB,EAAO,qBAGZ8E,EAAU9E,EAAO,mBAAmB+E,CAAa,EAC7CD,GACA,MAGHA,GACD,KAAK,mBAAmBnB,CAAC,EAE7BkB,EAAM,SAAW,GAC7B,EACQ,KAAK,kBAAoB,IAAM,CAC3B,MAAMD,EAAgB,KAAK,UAAU,cACrC,GAAI,CAACA,EACD,OAEJ,MAAMC,EAAQD,EAAc,MAC5B,OAAOC,EAAM,SACb,OAAOA,EAAM,cACb,OAAOA,EAAM,aACbD,EAAc,OAASpZ,GACvBqZ,EAAM,OAAS,GACfA,EAAM,SAAW,EAC7B,EACQ,KAAK,gBAAkBlB,GAAK,CACxB,MAAMhF,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAeiG,EAAgBjG,EAAU,cAAe6F,EAAW7F,EAAU,OAAO,QAC1I,GAAI,EAACiG,GAAA,MAAAA,EAAe,SAChB,OAEJA,EAAc,MAAM,OAAS,GAC7B,IAAI3F,EACJ,GAAI0E,EAAE,KAAK,WAAW,SAAS,EAAG,CAC9B,KAAK,SAAW,GAChB,MAAMqB,EAAarB,EACnB,GAAIiB,EAAc,UAAY,QAC1B,GAAIJ,EAAU,CACV,MAAMS,EAAaT,EAAS,wBAC5BvF,EAAM,CACF,EAAG+F,EAAW,QAAUC,EAAW,KACnC,EAAGD,EAAW,QAAUC,EAAW,GAC/D,CACqB,UAEI7N,EAAQ,cAAc,YAAc+L,GAAoB,OAAQ,CACrE,MAAM7V,EAAS0X,EAAW,OAAQE,EAASF,EAAW,cACtD,GAAI1X,GAAU4X,GAAUV,EAAU,CAC9B,MAAMW,EAAa7X,EAAO,sBAAqB,EAAI8X,EAAaF,EAAO,wBAAyBG,EAAab,EAAS,sBAAqB,EAC3IvF,EAAM,CACF,EAAG+F,EAAW,QAAU9W,GAASiX,EAAW,MAAQC,EAAW,KAAOC,EAAW,MACjF,EAAGL,EAAW,QAAU9W,GAASiX,EAAW,KAAOC,EAAW,IAAMC,EAAW,IAC3G,CACqB,MAEGpG,EAAM,CACF,EAAG+F,EAAW,SAAWA,EAAW,QACpC,EAAGA,EAAW,SAAWA,EAAW,OAChE,CAEiB,MACQA,EAAW,SAAWR,IAC3BvF,EAAM,CACF,EAAG+F,EAAW,SAAWA,EAAW,QACpC,EAAGA,EAAW,SAAWA,EAAW,OAC5D,EAEa,SAEG,KAAK,SAAWrB,EAAE,OAAS,YACvBa,EAAU,CACV,MAAMc,EAAa3B,EAAG4B,EAAe,EAAGC,EAAYF,EAAW,QAAQA,EAAW,QAAQ,OAASC,CAAY,EAAGF,EAAab,EAAS,sBAAuB,EAAEiB,EAAoB,EACrLxG,EAAM,CACF,EAAGuG,EAAU,SAAWH,EAAW,MAAQI,GAC3C,EAAGD,EAAU,SAAWH,EAAW,KAAOI,EAClE,CACiB,CAEL,MAAMpO,EAAUsH,EAAU,OAAO,WAC7BM,IACAA,EAAI,GAAK5H,EACT4H,EAAI,GAAK5H,GAEbuN,EAAc,MAAM,SAAW3F,EAC/B2F,EAAc,OAASlZ,EACnC,EACQ,KAAK,UAAYiY,GAAK,CAClB,MAAM/B,EAAM+B,EAAG+B,EAAU,MAAM,KAAK9D,EAAI,cAAc,EACtD,UAAW+D,KAASD,EAChB,KAAK,SAAS,OAAOC,EAAM,UAAU,EAEzC,KAAK,kBAAiB,CAClC,EACQ,KAAK,eAAiBhC,GAAK,CACvB,MAAM/B,EAAM+B,EAAG+B,EAAU,MAAM,KAAK9D,EAAI,cAAc,EACtD,UAAW+D,KAASD,EAChB,KAAK,SAAS,OAAOC,EAAM,UAAU,EAEzC,KAAK,iBAAiBhC,CAAC,CACnC,EACQ,KAAK,YAAcA,GAAK,CACpB,MAAM/B,EAAM+B,EAAG+B,EAAU,MAAM,KAAK9D,EAAI,cAAc,EACtD,UAAW+D,KAASD,EAChB,KAAK,SAAS,IAAIC,EAAM,WAAY,YAAY,IAAG,CAAE,EAEzD,KAAK,gBAAgBhC,CAAC,CAClC,EACQ,KAAK,SAAW,GAChB,KAAK,SAAW,IAAI,IACpB,KAAK,UAAY,CACb,UAAW,IAAM,KAAK,WAAY,EAClC,WAAY,IAAM,KAAK,kBAAmB,EAC1C,UAAYA,GAAM,KAAK,gBAAgBA,CAAC,EACxC,QAAUA,GAAM,KAAK,iBAAiBA,CAAC,EACvC,WAAaA,GAAM,KAAK,YAAYA,CAAC,EACrC,UAAYA,GAAM,KAAK,gBAAgBA,CAAC,EACxC,SAAWA,GAAM,KAAK,UAAUA,CAAC,EACjC,YAAcA,GAAM,KAAK,UAAUA,CAAC,EACpC,cAAgBA,GAAM,KAAK,eAAeA,CAAC,EAC3C,iBAAkB,IAAM,KAAK,wBAAyB,EACtD,YAAcA,GAAM,KAAK,mBAAmBA,CAAC,EAC7C,eAAiBA,GAAM,KAAK,mBAAmBA,CAAC,EAChD,OAAQ,IAAM,CACV,KAAK,oBAAmB,CAC3B,CACb,CACK,CACD,cAAe,CACX,KAAK,iBAAiB,EAAI,CAC7B,CACD,iBAAkB,CACd,KAAK,iBAAiB,EAAK,CAC9B,CACL,CCnUO,IAAIiC,GACV,SAAUA,EAAW,CAClBA,EAAU,YAAiB,cAC3BA,EAAU,cAAmB,gBAC7BA,EAAU,eAAoB,iBAC9BA,EAAU,iBAAsB,mBAChCA,EAAU,iBAAsB,mBAChCA,EAAU,mBAAwB,qBAClCA,EAAU,gBAAqB,kBAC/BA,EAAU,cAAmB,gBAC7BA,EAAU,eAAoB,iBAC9BA,EAAU,cAAmB,gBAC7BA,EAAU,kBAAuB,oBACjCA,EAAU,gBAAqB,iBACnC,GAAGA,IAAcA,EAAY,CAAA,EAAG,ECbzB,MAAMC,CAAa,CACtB,aAAc,CACV,KAAK,MAAQ,EAChB,CACD,OAAO,OAAOvY,EAAQgE,EAAM,CACxB,MAAMmI,EAAQ,IAAIoM,EAClB,OAAApM,EAAM,KAAKnM,CAAM,EACbgE,IAAS,SACL9E,GAAS8E,CAAI,GAAK3E,GAAQ2E,CAAI,EAC9BmI,EAAM,KAAK,CAAE,MAAOnI,CAAM,CAAA,EAG1BmI,EAAM,KAAKnI,CAAI,GAGhBmI,CACV,CACD,KAAKnI,EAAM,EACHA,GAAA,YAAAA,EAAM,SAAU,SAGpB,KAAK,MAAQA,EAAK,MACrB,CACL,CCvBO,MAAMwU,EAAW,CACpB,aAAc,CACV,KAAK,MAAQ,IAAID,EACjB,KAAK,MAAM,MAAQ,GACnB,KAAK,MAAQ,GACb,KAAK,SAAW,GAChB,KAAK,OAAS,GACd,KAAK,KAAO,GACZ,KAAK,QAAU,CAClB,CACD,KAAKvU,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,GAEvDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE3B,CACL,CCjCO,MAAMyU,EAAoB,CAC7B,aAAc,CACV,KAAK,QAAU,CAClB,CACD,KAAKzU,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,GAEvDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE3B,CACL,CCjBO,MAAM0U,EAAe,CACxB,aAAc,CACV,KAAK,UAAY,kBACjB,KAAK,MAAQ,IAAID,GACjB,KAAK,OAAS,EACjB,CACD,KAAKzU,EAAM,CACP,GAAKA,EAML,IAHIA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,QAAU,OAAW,CAC1B,MAAMgQ,EAAQhQ,EAAK,MAAOmI,EAASjN,GAAS8E,EAAK,KAAK,EAAI,CAAE,MAAOA,EAAK,KAAO,EAAGA,EAAK,MACvF,KAAK,MAAM,KAAKgQ,EAAM,QAAU,QAAaA,EAAM,QAAU,OAAYA,EAAQ,CAAE,MAAO7H,CAAO,CAAA,CACpG,CACGnI,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CCvBO,MAAM2U,EAAW,CACpB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,OAAS,CACjB,CACD,KAAK3U,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CChBO,MAAM4U,EAAW,CACpB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,KAAO,EACf,CACD,KAAK5U,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CChBO,IAAI6U,IACV,SAAUA,EAAS,CAChBA,EAAQ,OAAY,SACpBA,EAAQ,UAAe,WAC3B,GAAGA,KAAYA,GAAU,CAAA,EAAG,ECHrB,MAAMC,EAAS,CAClB,aAAc,CACV,KAAK,UAAY,GACjB,KAAK,OAAS,GACd,KAAK,KAAO,GACZ,KAAK,KAAOD,GAAQ,MACvB,CACD,KAAK7U,EAAM,CACFA,IAGDA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CCzBO,MAAM+U,EAAS,CAClB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,MAAQ,EACb,KAAK,OAAS,EACjB,CACD,KAAK/U,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CCnBO,MAAMgV,EAAW,CACpB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,KAAO,GACZ,KAAK,SAAW,IAAID,EACvB,CACD,KAAK/U,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,SAAS,KAAKA,EAAK,QAAQ,EACnC,CACL,CCnBO,MAAMiV,EAAY,CACrB,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,OAAS,EACjB,CACD,KAAKjV,EAAM,CACHA,IAAS,SAGTA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CCXO,MAAMkV,EAAO,CAChB,aAAc,CACV,KAAK,QAAU,IAAIN,GACnB,KAAK,MAAQ,IAAIE,GACjB,KAAK,QAAU,IAAIE,GACnB,KAAK,OAAS,IAAIC,EACrB,CACD,KAAKjV,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,MAAMmV,EAAQnV,EAAK,MACfmV,IAAU,SACV,KAAK,MAAQ1T,EAA0B0T,EAAOxT,GAAK,CAC/C,MAAMyT,EAAM,IAAIN,GAChB,OAAAM,EAAI,KAAKzT,CAAC,EACHyT,CACvB,CAAa,GAEL,KAAK,QAAQ,KAAKpV,EAAK,OAAO,EAC9B,KAAK,OAAO,KAAKA,EAAK,MAAM,CAC/B,CACL,CC5BO,MAAMqV,EAAM,CACf,YAAYC,EAAQjI,EAAW,CAC3B,KAAK,QAAUiI,EACf,KAAK,WAAajI,CACrB,CACD,KAAKrN,EAAM,CAIP,GAHI,CAACA,GAGD,CAAC,KAAK,WACN,OAEJ,MAAMuV,EAAc,KAAK,QAAQ,YAAY,IAAI,KAAK,UAAU,EAChE,GAAKA,EAGL,UAAWC,KAAcD,EAChBC,EAAW,iBAGhBA,EAAW,gBAAgB,KAAMxV,CAAI,CAE5C,CACL,CCpBO,MAAMyV,EAAc,CACvB,YAAYH,EAAQjI,EAAW,CAC3B,KAAK,UAAYwE,GAAoB,OACrC,KAAK,OAAS,IAAIqD,GAClB,KAAK,MAAQ,IAAIG,GAAMC,EAAQjI,CAAS,CAC3C,CACD,KAAKrN,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,MAAM0V,EAAY1V,EAAK,UACnB0V,IAAc,SACd,KAAK,UAAYA,GAErB,KAAK,OAAO,KAAK1V,EAAK,MAAM,EAC5B,KAAK,MAAM,KAAKA,EAAK,KAAK,CAC7B,CACL,CClBA,MAAM2V,GAAkB,GACjB,MAAMC,EAAe,CACxB,KAAK5V,EAAM,CACFA,IAGDA,EAAK,WACL,KAAK,SAAW,CACZ,EAAGA,EAAK,SAAS,GAAK2V,GACtB,EAAG3V,EAAK,SAAS,GAAK2V,GACtB,KAAM3V,EAAK,SAAS,MAAQS,GAAU,OACtD,GAEYT,EAAK,UACL,KAAK,QAAUqD,EAAW,CAAE,EAAErD,EAAK,OAAO,GAEjD,CACL,CCnBO,IAAI6V,IACV,SAAUA,EAAgB,CACvBA,EAAe,OAAY,SAC3BA,EAAe,OAAY,QAC/B,GAAGA,KAAmBA,GAAiB,CAAA,EAAG,ECFnC,MAAMC,EAAW,CACpB,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,QAAU,GACf,KAAK,KAAOD,GAAe,MAC9B,CACD,KAAK7V,EAAM,CACFA,IAGDA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,OAAS,SACVA,EAAK,OAAS6V,GAAe,OAC7B,KAAK,KAAOA,GAAe,OAG3B,KAAK,KAAOA,GAAe,QAG/B7V,EAAK,UAAY,SACjB,KAAK,QAAUqD,EAAW,CAAE,EAAErD,EAAK,OAAO,GAEjD,CACL,CC3BO,IAAI+V,IACV,SAAUA,EAAW,CAClBA,EAAU,IAAS,MACnBA,EAAU,KAAU,OACpBA,EAAU,MAAW,OACzB,GAAGA,KAAcA,GAAY,CAAA,EAAG,ECJzB,MAAMC,EAAa,CACtB,aAAc,CACV,KAAK,KAAO,GACZ,KAAK,KAAOD,GAAU,IACtB,KAAK,MAAQ,EAChB,CACD,KAAK/V,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEzB,CACL,CCnBO,MAAMiW,EAAM,CACf,aAAc,CACV,KAAK,KAAO,GACZ,KAAK,QAAU,IAAID,EACtB,CACD,KAAKhW,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC1BA,EAAK,UAAY,SACjB,KAAK,QAAUqD,EAAW,CAAE,EAAErD,EAAK,OAAO,GAEjD,CACL,CChBO,MAAMkW,EAAiB,CAC1B,aAAc,CACV,KAAK,MAAQ,EACb,KAAK,OAAS,GACd,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,KAAO,EACf,CACD,KAAKlW,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CACO,MAAMmW,WAA+BD,EAAiB,CACzD,aAAc,CACV,QACA,KAAK,KAAO7V,GAAc,KAC1B,KAAK,WAAaK,GAAe,MACpC,CACD,KAAKV,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,aAAe,SACpB,KAAK,WAAaA,EAAK,YAE9B,CACL,CCpDO,MAAMoW,WAAuBF,EAAiB,CACjD,aAAc,CACV,QACA,KAAK,OAAS,EACd,KAAK,KAAO,EACf,CACD,KAAKlW,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,GAGDA,EAAK,SAAW,SAChB,KAAK,OAASzB,EAAcyB,EAAK,MAAM,EAE9C,CACL,CChBO,MAAMqW,EAAa,CACtB,aAAc,CACV,KAAK,EAAI,IAAID,GACb,KAAK,EAAI,IAAIA,GACb,KAAK,EAAI,IAAIA,EAChB,CACD,KAAKpW,EAAM,CACFA,IAGL,KAAK,EAAE,KAAKA,EAAK,CAAC,EAClB,KAAK,EAAE,KAAKA,EAAK,CAAC,EAClB,KAAK,EAAE,KAAKA,EAAK,CAAC,EACrB,CACL,CCZO,MAAMsW,WAAwB/B,CAAa,CAC9C,aAAc,CACV,QACA,KAAK,UAAY,IAAI8B,EACxB,CACD,OAAO,OAAOra,EAAQgE,EAAM,CACxB,MAAMmI,EAAQ,IAAImO,GAClB,OAAAnO,EAAM,KAAKnM,CAAM,EACbgE,IAAS,SACL9E,GAAS8E,CAAI,GAAK3E,GAAQ2E,CAAI,EAC9BmI,EAAM,KAAK,CAAE,MAAOnI,CAAM,CAAA,EAG1BmI,EAAM,KAAKnI,CAAI,GAGhBmI,CACV,CACD,KAAKnI,EAAM,CAEP,GADA,MAAM,KAAKA,CAAI,EACX,CAACA,EACD,OAEJ,MAAMgM,EAAiBhM,EAAK,UACxBgM,IAAmB,SACfA,EAAe,SAAW,OAC1B,KAAK,UAAU,EAAE,KAAKA,CAAc,EAGpC,KAAK,UAAU,KAAKhM,EAAK,SAAS,EAG7C,CACL,CCpCO,IAAIuW,IACV,SAAUA,EAAe,CACtBA,EAAc,OAAY,SAC1BA,EAAc,OAAY,SAC1BA,EAAc,QAAa,SAC/B,GAAGA,KAAkBA,GAAgB,CAAA,EAAG,ECLjC,MAAMC,EAAiB,CAC1B,aAAc,CACV,KAAK,MAAQ,CAChB,CACD,KAAKxW,EAAM,CACFA,GAGDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,MAEzB,CACL,CCZO,MAAMyW,EAAkB,CAC3B,aAAc,CACV,KAAK,OAAS,GACd,KAAK,QAAU,CAClB,CACD,KAAKzW,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE3B,CACL,CCdO,MAAM0W,EAAgB,CACzB,aAAc,CACV,KAAK,MAAQ,CAChB,CACD,KAAK1W,EAAM,CACFA,GAGDA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,EAE5C,CACL,CACO,MAAM2W,WAAiCD,EAAgB,CAC1D,aAAc,CACV,QACA,KAAK,UAAY,IAAIR,EACxB,CACD,KAAKlW,EAAM,CAEP,GADA,MAAM,KAAKA,CAAI,EACX,CAACA,EACD,OAEJ,MAAM0L,EAAY1L,EAAK,UACnB0L,IAAc,QACd,KAAK,UAAU,KAAKA,CAAS,CAEpC,CACL,CACO,MAAMkL,WAAuCD,EAAyB,CACzE,aAAc,CACV,QACA,KAAK,UAAY,IAAIR,EACxB,CACD,KAAKnW,EAAM,CACP,MAAM,KAAKA,CAAI,CAClB,CACL,CCtCO,MAAM6W,WAA8BH,EAAgB,CACvD,aAAc,CACV,QACA,KAAK,MAAQ,CAChB,CACL,CCLO,MAAMI,EAAgB,CACzB,aAAc,CACV,KAAK,WAAa,IAAID,GACtB,KAAK,SAAW,IAAIA,EACvB,CACD,KAAK7W,EAAM,CACFA,IAGL,KAAK,WAAW,KAAKA,EAAK,UAAU,EACpC,KAAK,SAAS,KAAKA,EAAK,QAAQ,EACnC,CACL,CCRO,MAAM+W,EAAW,CACpB,aAAc,CACV,KAAK,OAAS,IAAIP,GAClB,KAAK,OAAS,IAAIM,GAClB,KAAK,OAAS,GACd,KAAK,SAAW,GAChB,KAAK,KAAOP,GAAc,OAC1B,KAAK,QAAU,IAAIE,EACtB,CACD,KAAKzW,EAAM,CACFA,IAGL,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,OAAO,KAAKA,EAAK,MAAM,EACxBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,WAAa,SAClB,KAAK,SAAWzB,EAAcyB,EAAK,QAAQ,GAE3CA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,QAAQ,KAAKA,EAAK,OAAO,EACjC,CACL,CC9BO,MAAMgX,EAAO,CAChB,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,KAAO,GACZ,KAAK,QAAU,GACf,KAAK,KAAO,EACf,CACD,KAAKhX,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,MAAM8F,EAAU9F,EAAK,QACrB,GAAI8F,IAAY,OACZ,UAAWmR,KAAUnR,EAAS,CAC1B,MAAMH,EAAOG,EAAQmR,CAAM,EACvBtR,IACA,KAAK,QAAQsR,CAAM,EAAI5T,EAAW,KAAK,QAAQ4T,CAAM,GAAK,GAAItR,CAAI,EAEzE,CAED3F,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,KAExB,CACL,CC9BO,MAAMkX,EAAU,CACnB,aAAc,CACV,KAAK,OAAS,EACd,KAAK,MAAQ,EAChB,CACD,KAAKlX,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASzB,EAAcyB,EAAK,MAAM,GAEvCA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAE5C,CACL,CChBO,MAAMmX,EAAY,CACrB,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,OAAS,GACd,KAAK,OAAS,CACV,EAAG,IACH,EAAG,GACf,CACK,CACD,KAAKnX,EAAM,CACP,GAAKA,IAGDA,EAAK,WAAa,SAClB,KAAK,SAAWzB,EAAcyB,EAAK,QAAQ,GAE3CA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,QAAQ,CACb,MAAMoX,EAAUpX,EAAK,OAAO,EACxBoX,IAAY,SACZ,KAAK,OAAO,EAAIA,GAEpB,MAAMC,EAAUrX,EAAK,OAAO,EACxBqX,IAAY,SACZ,KAAK,OAAO,EAAIA,EAEvB,CACJ,CACL,CC9BO,MAAMC,EAAW,CACpB,aAAc,CACV,KAAK,EAAI,GACT,KAAK,EAAI,GACT,KAAK,KAAO7W,GAAU,QACtB,KAAK,OAAS,CACjB,CACD,KAAKT,EAAM,CACFA,IAGDA,EAAK,IAAM,SACX,KAAK,EAAIA,EAAK,GAEdA,EAAK,IAAM,SACX,KAAK,EAAIA,EAAK,GAEdA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CCxBO,MAAMuX,EAAY,CACrB,aAAc,CACV,KAAK,aAAe,KACpB,KAAK,OAAS,GACd,KAAK,QAAU,GACf,KAAK,SAAW,EACnB,CACD,KAAKvX,EAAM,CACFA,IAGDA,EAAK,eAAiB,SACtB,KAAK,aAAezB,EAAcyB,EAAK,YAAY,GAEnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,WAAa,SAClB,KAAK,SAAWzB,EAAcyB,EAAK,QAAQ,GAElD,CACL,CCvBO,MAAMwX,EAAS,CAClB,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,MAAQ,IAAId,GACjB,KAAK,OAAS,GACd,KAAK,QAAU,EAClB,CACD,KAAK1W,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEtB,KAAK,MAAM,KAAKA,EAAK,KAAK,EACtBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,KAAK,UAAYA,EAAK,UAClBA,EAAK,UACL,KAAK,QAAUqD,EAAW,KAAK,QAASrD,EAAK,OAAO,GAE3D,CACL,CCxBO,MAAMyX,EAAc,CACvB,KAAKzX,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,GAEvDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEzB,CACL,CCZO,MAAM0X,EAAU,CACnB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,OAAS,GACd,KAAK,KAAO,IAAID,EACnB,CACD,KAAKzX,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,QACd,KAAK,KAAK,KAAKA,EAAK,IAAI,EAExBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CCrBO,IAAI2X,GACV,SAAUA,EAAS,CAChBA,EAAQ,OAAY,SACpBA,EAAQ,KAAU,OAClBA,EAAQ,IAAS,MACjBA,EAAQ,QAAa,UACrBA,EAAQ,MAAW,OACvB,GAAGA,IAAYA,EAAU,CAAA,EAAG,ECNrB,MAAMC,EAAS,CAClB,aAAc,CACV,KAAK,QAAUD,EAAQ,GAC1B,CACD,KAAK3X,EAAM,CACFA,IAGDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAExB,KAAK,OAASA,EAAK,QAAUA,EAAK,QAClC,KAAK,KAAOA,EAAK,MAAQA,EAAK,QAC9B,KAAK,MAAQA,EAAK,OAASA,EAAK,QAChC,KAAK,IAAMA,EAAK,KAAOA,EAAK,QAC/B,CACL,CCfO,MAAM6X,EAAK,CACd,aAAc,CACV,KAAK,aAAe,EACpB,KAAK,OAAS,EACjB,CACD,KAAK7X,EAAM,CACFA,IAGDA,EAAK,eAAiB,SACtB,KAAK,aAAezB,EAAcyB,EAAK,YAAY,GAEnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,WACL,KAAK,SAAWqD,EAAW,CAAE,EAAErD,EAAK,QAAQ,GAEnD,CACL,CCVO,MAAM8X,EAAK,CACd,aAAc,CACV,KAAK,MAAQ,IAAIZ,GACjB,KAAK,QAAU,IAAIC,GACnB,KAAK,OAAS,IAAIG,GAClB,KAAK,MAAQ,EACb,KAAK,SAAW,GAChB,KAAK,UAAYvc,EAAc,KAC/B,KAAK,MAAQ,EACb,KAAK,OAAS,GACd,KAAK,QAAU,IAAIwc,GACnB,KAAK,KAAO,IAAIC,GAChB,KAAK,SAAW,IAAII,GACpB,KAAK,OAAS,GACd,KAAK,KAAO,GACZ,KAAK,MAAQ,EACb,KAAK,KAAO,IAAIC,GAChB,KAAK,SAAW,GAChB,KAAK,MAAQ,IAAIH,GACjB,KAAK,QAAU,GACf,KAAK,KAAO,EACf,CACD,KAAK1X,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,KAAK,MAAM,KAAK7E,GAAS6E,EAAK,KAAK,EAAI,CAAE,MAAOA,EAAK,KAAO,EAAGA,EAAK,KAAK,EACzE,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,KAAK,OAAO,KAAKA,EAAK,MAAM,EACxBA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,WAAa,SAClB,KAAK,SAAW7E,GAAS6E,EAAK,QAAQ,EAChC,CACE,WAAYA,EAAK,SACjB,SAAUA,EAAK,QAClB,EACC,CAAE,GAAGA,EAAK,WAEhBA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,MAAM+X,EAAW/X,EAAK,SAClB+X,IAAa,SACT3c,GAAS2c,CAAQ,EACjB,KAAK,SAAS,KAAKA,CAAQ,EAG3B,KAAK,SAAS,KAAK,CACf,QAASA,CAC7B,CAAiB,GAGT,KAAK,KAAK,KAAK/X,EAAK,IAAI,EACpBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAEzC,KAAK,KAAK,KAAKA,EAAK,IAAI,EACpBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAEzB,KAAK,MAAM,KAAKA,EAAK,KAAK,EACtBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,KAExB,CACL,CC5FO,MAAMgY,WAAyB7B,EAAuB,CACzD,aAAc,CACV,QACA,KAAK,QAAU5V,GAAY,KAC3B,KAAK,MAAQ,CAChB,CACD,KAAKP,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,GAGDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,QAE3B,CACL,CCfO,MAAMiY,WAAgBrB,EAA+B,CACxD,aAAc,CACV,QACA,KAAK,UAAY,IAAIoB,GACrB,KAAK,MAAQ,CAChB,CACD,KAAKhY,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,MAAM,KAAKA,CAAI,EACf,MAAM0L,EAAY1L,EAAK,UACnB0L,IAAc,QACd,KAAK,UAAU,KAAKA,CAAS,CAEpC,CACL,CClBO,MAAMwM,EAAiB,CAC1B,aAAc,CACV,KAAK,OAAS,GACd,KAAK,MAAQ,KACb,KAAK,OAAS,IACjB,CACD,KAAKlY,EAAM,CACP,GAAI,CAACA,EACD,OAEAA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,MAAMmY,EAAQnY,EAAK,MACfmY,IAAU,SACV,KAAK,MAAQA,GAEjB,MAAMC,EAASpY,EAAK,OAChBoY,IAAW,SACX,KAAK,OAASA,EAErB,CACL,CCtBO,IAAIC,IACV,SAAUA,EAAW,CAClBA,EAAU,OAAY,SACtBA,EAAU,KAAU,MACxB,GAAGA,KAAcA,GAAY,CAAA,EAAG,ECHzB,MAAMC,EAAqB,CAC9B,aAAc,CACV,KAAK,KAAOD,GAAU,OACtB,KAAK,MAAQ,CAChB,CACD,KAAKrY,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEzB,CACL,CCfO,MAAMuY,EAAgB,CACzB,aAAc,CACV,KAAK,QAAU,IAAIL,GACnB,KAAK,MAAQ,IAAII,GACjB,KAAK,MAAQ,CAChB,CACD,KAAKtY,EAAM,CACFA,IAGL,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,KAAK,MAAM,KAAKA,EAAK,KAAK,EACtBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEzB,CACL,CCjBO,MAAMwY,EAAO,CAChB,aAAc,CACV,KAAK,KAAO,EACZ,KAAK,MAAQ,IAAIjE,EACjB,KAAK,OAAS,GACd,KAAK,OAAS,CACV,EAAG,EACH,EAAG,CACf,EACQ,KAAK,MAAM,MAAQ,MACtB,CACD,KAAKvU,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,EACnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAGhBA,EAAK,OAAO,IAAM,SAClB,KAAK,OAAO,EAAIA,EAAK,OAAO,GAE5BA,EAAK,OAAO,IAAM,SAClB,KAAK,OAAO,EAAIA,EAAK,OAAO,IAEnC,CACL,CChCO,MAAMyY,EAAM,CACf,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,KAAO,GACZ,KAAK,QAAU,GACf,KAAK,KAAO,QACf,CACD,KAAKzY,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,MAAM8F,EAAU9F,EAAK,QACrB,GAAI8F,IAAY,OACZ,UAAW4S,KAAS5S,EAAS,CACzB,MAAMH,EAAOG,EAAQ4S,CAAK,EACtB/S,IACA,KAAK,QAAQ+S,CAAK,EAAIrV,EAAW,KAAK,QAAQqV,CAAK,GAAK,GAAI/S,CAAI,EAEvE,CAED3F,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,KAExB,CACL,CC7BO,MAAM2Y,WAAsBxC,EAAuB,CACtD,aAAc,CACV,QACA,KAAK,QAAU5V,GAAY,KAC3B,KAAK,MAAQ,CAChB,CACD,KAAKP,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,GAGDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,QAE3B,CACL,CCfO,MAAM4Y,WAAahC,EAA+B,CACrD,aAAc,CACV,QACA,KAAK,UAAY,IAAI+B,GACrB,KAAK,MAAQ,CAChB,CACD,KAAK3Y,EAAM,CAEP,GADA,MAAM,KAAKA,CAAI,EACX,CAACA,EACD,OAEJ,MAAM0L,EAAY1L,EAAK,UACnB0L,IAAc,QACd,KAAK,UAAU,KAAKA,CAAS,CAEpC,CACL,CChBO,MAAMmN,EAAO,CAChB,aAAc,CACV,KAAK,MAAQ,CAChB,CACD,KAAK7Y,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQsW,GAAgB,OAAO,KAAK,MAAOtW,EAAK,KAAK,GAE1DA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,UAAY,SACjB,KAAK,QAAUzB,EAAcyB,EAAK,OAAO,GAEhD,CACL,CCnBO,MAAM8Y,WAAepC,EAAgB,CACxC,aAAc,CACV,QACA,KAAK,YAAc,EACnB,KAAK,SAAW,EAChB,KAAK,aAAe,CACvB,CACD,KAAK1W,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,IAGDA,EAAK,cAAgB,SACrB,KAAK,YAAcA,EAAK,aAExBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,eAAiB,SACtB,KAAK,aAAeA,EAAK,cAEhC,CACL,CCVO,MAAM+Y,EAAiB,CAC1B,YAAYzD,EAAQjI,EAAW,CAC3B,KAAK,QAAUiI,EACf,KAAK,WAAajI,EAClB,KAAK,OAAS,IAAIyJ,GAClB,KAAK,WAAa,IAAIC,GACtB,KAAK,MAAQ,IAAIT,GACjB,KAAK,MAAM,MAAQ,OACnB,KAAK,OAAS,IAAIU,GAClB,KAAK,OAAS,GACd,KAAK,KAAO,IAAIc,GAChB,KAAK,OAAS,IAAIS,GAClB,KAAK,QAAU,IAAIN,GACnB,KAAK,iBAAmB,GACxB,KAAK,OAAS,IAAIO,GAClB,KAAK,MAAQ,IAAIC,GACjB,KAAK,KAAO,IAAIG,GAChB,KAAK,OAAS,IAAIC,GAClB,KAAK,OAAS,IAAIC,EACrB,CACD,KAAK9Y,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,GAAIA,EAAK,SAAW,OAChB,UAAWgZ,KAAS,OAAO,KAAKhZ,EAAK,MAAM,EAAG,CAC1C,GAAI,CAAC,OAAO,OAAOA,EAAK,OAAQgZ,CAAK,EACjC,SAEJ,MAAMrT,EAAO3F,EAAK,OAAOgZ,CAAK,EAC1BrT,IAAS,SACT,KAAK,OAAOqT,CAAK,EAAI3V,EAAW,KAAK,OAAO2V,CAAK,GAAK,GAAIrT,CAAI,EAErE,CAED3F,EAAK,mBAAqB,SAC1B,KAAK,iBAAmBA,EAAK,kBAEjC,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,MAAM,KAAKsW,GAAgB,OAAO,KAAK,MAAOtW,EAAK,KAAK,CAAC,EAC9D,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,KAAK,KAAKA,EAAK,IAAI,EACxB,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,KAAK,MAAM,KAAKA,EAAK,KAAK,EAC1B,KAAK,KAAK,KAAKA,EAAK,IAAI,EACxB,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,WAAW,KAAKA,EAAK,UAAU,EAChCA,EAAK,gBAAkB,SACvB,KAAK,cAAgBqD,EAAW,CAAE,EAAErD,EAAK,aAAa,GAE1D,MAAMiZ,EAAejZ,EAAK,OAQ1B,GAPIiZ,IACA,KAAK,OAASxX,EAA0BwX,EAActX,GAAK,CACvD,MAAMyT,EAAM,IAAIyD,GAChB,OAAAzD,EAAI,KAAKzT,CAAC,EACHyT,CACvB,CAAa,GAED,KAAK,WAAY,CACjB,MAAM8D,EAAW,KAAK,QAAQ,SAAS,IAAI,KAAK,UAAU,EAC1D,GAAIA,EACA,UAAW1J,KAAW0J,EACd1J,EAAQ,aACRA,EAAQ,YAAY,KAAMxP,CAAI,EAI1C,MAAMuV,EAAc,KAAK,QAAQ,YAAY,IAAI,KAAK,UAAU,EAChE,GAAIA,EACA,UAAWC,KAAcD,EACjBC,EAAW,sBACXA,EAAW,qBAAqB,KAAMxV,CAAI,CAIzD,CACJ,CACL,CC3FO,SAASmZ,GAAYrT,KAAYsT,EAAkB,CACtD,UAAWC,KAAiBD,EACxBtT,EAAQ,KAAKuT,CAAa,CAElC,CACO,SAASC,GAAqBhE,EAAQjI,KAAc+L,EAAkB,CACzE,MAAMtT,EAAU,IAAIiT,GAAiBzD,EAAQjI,CAAS,EACtD,OAAA8L,GAAYrT,EAAS,GAAGsT,CAAgB,EACjCtT,CACX,CCGO,MAAMyT,EAAQ,CACjB,YAAYjE,EAAQjI,EAAW,CAC3B,KAAK,kBAAoBxJ,GACb,KAAK,OAAO,KAAK+O,GAASA,EAAM,QAAQ,OAASA,EAAM,QAAQ,OAAS/O,CAAI,GAChF,KAAK,OAAO,KAAK+O,GAASA,EAAM,QAAQ,OAASA,EAAM,QAAQ,OAASmD,GAAU,GAAG,EAE7F,KAAK,cAAgByD,GAAU,CAC3B,KAAK,KAAK,KAAK,QAAQ,UAAUA,CAAM,CAAC,CACpD,EACQ,KAAK,QAAUlE,EACf,KAAK,WAAajI,EAClB,KAAK,SAAW,GAChB,KAAK,WAAa,IAAImH,GACtB,KAAK,eAAiB,IAAIE,GAC1B,KAAK,MAAQ,GACb,KAAK,cAAgB,GACrB,KAAK,MAAQ,EACb,KAAK,WAAa,IAAIC,GACtB,KAAK,aAAe,GACpB,KAAK,SAAW,EAChB,KAAK,SAAW,IAChB,KAAK,cAAgB,IAAIc,GAAcH,EAAQjI,CAAS,EACxD,KAAK,gBAAkB,GACvB,KAAK,UAAYiM,GAAqB,KAAK,QAAS,KAAK,UAAU,EACnE,KAAK,YAAc,GACnB,KAAK,uBAAyB,GAC9B,KAAK,WAAa,GAClB,KAAK,OAAS,GACd,KAAK,MAAQ,GACb,KAAK,OAAS,GACd,KAAK,QAAU,GAClB,CACD,KAAKtZ,EAAM,SACP,GAAI,CAACA,EACD,OAEAA,EAAK,SAAW,QAChByB,EAA0BzB,EAAK,OAAQwZ,GAAU,KAAK,cAAcA,CAAM,CAAC,EAE3ExZ,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,MAAQ,SACb,KAAK,IAAMA,EAAK,KAEhBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAEzC,MAAMyZ,EAAezZ,EAAK,aACtByZ,IAAiB,SACjB,KAAK,aAAeA,GAEpBzZ,EAAK,WAAa,SAClB,KAAK,SAAWzB,EAAcyB,EAAK,QAAQ,GAE/C,MAAM0Z,EAAW1Z,EAAK,SAClB0Z,IAAa,SACb,KAAK,SAAWA,GAEhB1Z,EAAK,cAAgB,SACrB,KAAK,YAAcA,EAAK,aAExBA,EAAK,yBAA2B,SAChC,KAAK,uBAAyBA,EAAK,wBAEnCA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAExB,KAAK,WAAW,KAAKA,EAAK,UAAU,EACpC,MAAM2Z,EAAa3Z,EAAK,WACpBhF,GAAU2e,CAAU,EACpB,KAAK,WAAW,OAASA,EAGzB,KAAK,WAAW,KAAKA,CAAU,EAEnC,KAAK,eAAe,KAAK3Z,EAAK,cAAc,EAC5C,KAAK,cAAc,KAAKA,EAAK,aAAa,EACtCA,EAAK,kBACL,KAAK,gBAAkBA,EAAK,gBAAgB,IAAI2B,GAAK,CACjD,MAAMyT,EAAM,IAAIQ,GAChB,OAAAR,EAAI,KAAKzT,CAAC,EACHyT,CACvB,CAAa,GAEL,KAAK,UAAU,KAAKpV,EAAK,SAAS,EAClC,KAAK,MAAQqD,EAAW,KAAK,MAAOrD,EAAK,KAAK,EAC9C,KAAK,QAAQ,YAAY,KAAMA,CAAI,EAC/BA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,MAAMuV,EAAc,KAAK,QAAQ,YAAY,IAAI,KAAK,UAAU,EAChE,GAAIA,EACA,UAAWC,KAAcD,EACjBC,EAAW,aACXA,EAAW,YAAY,KAAMxV,CAAI,EAI7C,GAAIA,EAAK,aAAe,OACpB,UAAW4Z,KAAc5Z,EAAK,WAAY,CACtC,MAAM6Z,EAAgB,IAAI/D,GAC1B+D,EAAc,KAAKD,CAAU,EAC7B,KAAK,WAAW,KAAKC,CAAa,CACrC,CAGL,GADA,KAAK,WAAW,KAAK,CAAC/R,EAAGD,IAAMC,EAAE,SAAWD,EAAE,QAAQ,EAClD7H,EAAK,SAAW,OAChB,UAAW4S,KAAS5S,EAAK,OAAQ,CAC7B,MAAM8Z,EAAgB,KAAK,OAAO,KAAKnY,GAAKA,EAAE,OAASiR,EAAM,IAAI,EACjE,GAAKkH,EAMDA,EAAc,KAAKlH,CAAK,MANR,CAChB,MAAMmH,EAAW,IAAI9D,GACrB8D,EAAS,KAAKnH,CAAK,EACnB,KAAK,OAAO,KAAKmH,CAAQ,CAC5B,CAIJ,CAEL,KAAK,cAAc,MAAO9Z,EAAA,KAAK,kBAAkB8V,GAAU,IAAI,IAArC,YAAA9V,EAAwC,KAClE,KAAK,cAAc,OAAQC,EAAA,KAAK,kBAAkB6V,GAAU,KAAK,IAAtC,YAAA7V,EAAyC,IACvE,CACD,cAAciY,EAAOpS,EAASiU,EAAgB,CAC1C,KAAK,KAAKA,CAAc,EACxB,MAAMC,EAAoB,KAAK,WAAW,KAAKtY,GAAKA,EAAE,OAASkU,GAAe,QAAU,OAASlU,EAAE,SAAW,OAAO,WAAaA,EAAE,SAAWoE,EAAUoS,CAAK,EAC9J,YAAK,KAAK8B,GAAA,YAAAA,EAAmB,OAAO,EAC7BA,GAAA,YAAAA,EAAmB,QAC7B,CACD,SAASld,EAAM,CACX,GAAIA,EAAM,CACN,MAAMmd,EAAc,KAAK,OAAO,KAAKtH,GAASA,EAAM,OAAS7V,CAAI,EAC7Dmd,GACA,KAAK,KAAKA,EAAY,OAAO,CAEpC,KACI,CACD,MAAM9G,EAAatR,GAAe,8BAA8B,EAAGqY,EAAiB/G,GAAA,YAAAA,EAAY,QAASgH,EAAe,KAAK,kBAAkBD,EAAiBpE,GAAU,KAAOA,GAAU,KAAK,EAC5LqE,GACA,KAAK,KAAKA,EAAa,OAAO,CAErC,CACJ,CACL,CClKO,IAAIC,IACV,SAAUA,EAAgB,CACvBA,EAAe,SAAc,WAC7BA,EAAe,UAAe,WAClC,GAAGA,KAAmBA,GAAiB,CAAA,EAAG,ECHnC,MAAMC,EAAmB,CAC5B,YAAYhF,EAAQjI,EAAW,CAC3B,KAAK,UAAYA,EACjB,KAAK,QAAUiI,EACf,KAAK,aAAe,GACpB,KAAK,qBAAuB,GAC5B,KAAK,qBAAuB,EAC/B,CACD,iBAAiBtO,EAAO,CACpB,UAAWwO,KAAc,KAAK,qBACtBA,EAAW,aACXA,EAAW,SAASxO,CAAK,CAGpC,CACD,gBAAgBnD,EAAM,OAClB,UAAW2R,KAAc,KAAK,sBAC1BvV,EAAAuV,EAAW,kBAAX,MAAAvV,EAAA,KAAAuV,EAA6B3R,EAEpC,CACD,MAAM,MAAO,CACT,KAAK,aAAe,MAAM,KAAK,QAAQ,eAAe,KAAK,UAAW,EAAI,EAC1E,KAAK,qBAAuB,GAC5B,KAAK,qBAAuB,GAC5B,UAAW2R,KAAc,KAAK,aAAc,CACxC,OAAQA,EAAW,KAAI,CACnB,KAAK6E,GAAe,SAChB,KAAK,qBAAqB,KAAK7E,CAAU,EACzC,MACJ,KAAK6E,GAAe,UAChB,KAAK,qBAAqB,KAAK7E,CAAU,EACzC,KACP,CACDA,EAAW,KAAI,CAClB,CACJ,CACD,kBAAkBpQ,EAAU4B,EAAO,CAC/B,UAAWwO,KAAc,KAAK,qBAC1BA,EAAW,MAAMpQ,EAAU4B,CAAK,EAEpC,UAAWwO,KAAc,KAAK,qBACtBA,EAAW,UAAUpQ,CAAQ,GAC7BoQ,EAAW,SAASpQ,EAAU4B,CAAK,CAG9C,CACD,MAAM5B,EAAU,CACZ,UAAWoQ,KAAc,KAAK,qBACtBA,EAAW,aACXA,EAAW,MAAMpQ,CAAQ,EAGjC,UAAWoQ,KAAc,KAAK,qBACtBA,EAAW,UAAUpQ,CAAQ,GAC7BoQ,EAAW,MAAMpQ,CAAQ,CAGpC,CACL,CC3DO,IAAImV,IACV,SAAUA,EAAiB,CACxBA,EAAgB,OAAY,SAC5BA,EAAgB,OAAY,SAC5BA,EAAgB,QAAa,SACjC,GAAGA,KAAoBA,GAAkB,CAAA,EAAG,ECQ5C,MAAMC,GAAoB,EAAG5d,GAAS,EAAGyC,GAAO,GAAK9D,GAAY,EAAGkf,GAAe,SACnF,SAASC,GAAezD,EAAQ0D,EAAeC,EAAIC,EAAkB,CACjE,MAAMC,EAAaH,EAAc,QAAQ1D,CAAM,EAC/C,GAAK6D,EAGL,OAAOzX,EAAW,CACd,MAAOsX,EAAc,MACrB,KAAMA,EAAc,IACvB,EAAE/U,GAAyBkV,EAAYF,EAAIC,CAAgB,CAAC,CACjE,CACA,SAASE,GAAcrC,EAAOsC,EAAcJ,EAAIC,EAAkB,CAC9D,MAAMI,EAAYD,EAAa,QAAQtC,CAAK,EAC5C,GAAKuC,EAGL,OAAO5X,EAAW,CACd,MAAO2X,EAAa,MACpB,KAAMA,EAAa,IACtB,EAAEpV,GAAyBqV,EAAWL,EAAIC,CAAgB,CAAC,CAChE,CACA,SAASK,GAAWlb,EAAM,CACtB,GAAI,CAACmC,EAAUnC,EAAK,QAASA,EAAK,UAAU,EACxC,OAEJ,MAAMmb,EAAWnb,EAAK,OAASpD,GAC3BoD,EAAK,MAAQA,EAAK,SAAWmb,EAC7Bnb,EAAK,MAAM,CAACA,EAAK,MAAM,EAElBA,EAAK,MAAQmb,GAClBnb,EAAK,MAAMA,EAAK,MAAM,CAE9B,CACO,MAAMob,EAAS,CAClB,YAAY9F,EAAQjI,EAAW,CAC3B,KAAK,UAAYA,EACjB,KAAK,cAAgB,CAACA,EAAWnO,EAAUmc,EAAQC,EAAWd,KAAsB,CAChF,SAAW,CAAG,CAAA9L,CAAM,IAAKrB,EAAU,QAAS,CACxC,MAAMkO,EAAY7M,EAAO,mBAAqB,OAAYA,EAAO,iBAAiBxP,EAAU,IAAI,EAAI,OACpG,GAAIqc,EACA,OAAO9f,EAAS,OAAO8f,EAAU,EAAGA,EAAU,EAAGF,CAAM,CAE9D,CACD,MAAM/U,EAAa+G,EAAU,OAAO,KAAMmO,EAAgBzb,GAAkC,CACxF,KAAMuG,EACN,SAAUpH,CAC1B,CAAa,EAAGyO,EAAMlS,EAAS,OAAO+f,EAAc,EAAGA,EAAc,EAAGH,CAAM,EAAGrY,EAAS,KAAK,UAAS,EAAI+U,EAAW,KAAK,QAAQ,KAAK,SAAU0D,EAAiBC,GAAY,CAChKR,GAAW,CACP,QAAAQ,EACA,WAAY,CAAC/D,EAAQ,MAAM,EAC3B,MAAOhK,EAAI,EACX,SAAUN,EAAU,OAAO,KAAK,MAChC,MAAQnQ,GAAWyQ,EAAI,GAAKzQ,EAC5B,OAAA8F,CACpB,CAAiB,CACjB,EAAe2Y,EAAeD,GAAY,CAC1BR,GAAW,CACP,QAAAQ,EACA,WAAY,CAAC/D,EAAQ,MAAM,EAC3B,MAAOhK,EAAI,EACX,SAAUN,EAAU,OAAO,KAAK,OAChC,MAAQnQ,GAAWyQ,EAAI,GAAKzQ,EAC5B,OAAA8F,CACpB,CAAiB,CACjB,EAKY,OAJAyY,EAAc1D,EAAS,MAAQA,EAAS,OAAO,EAC/C0D,EAAc1D,EAAS,OAASA,EAAS,OAAO,EAChD4D,EAAY5D,EAAS,KAAOA,EAAS,OAAO,EAC5C4D,EAAY5D,EAAS,QAAUA,EAAS,OAAO,EAC3C,KAAK,cAAcpK,EAAK2N,CAAQ,EAEzB,KAAK,cAAcjO,EAAW,OAAWgO,EAAQC,EAAW,CAAS,EAEzE3N,CACnB,EACQ,KAAK,mBAAqB,IAAM,CAC5B,MAAMlO,EAAeD,GAAwB,KAAK,SAAS,EAAGsB,EAAMrB,EAAa,KAAM,EAAEmc,EAAc,KAAK,QAAQ,KACpH,GAAIA,EAAY,YAAc7gB,EAAc,QAAU6gB,EAAY,YAAc7gB,EAAc,QAC1F,OAAO+F,EAEX,MAAM+a,EAAM/c,GAASR,EAAcsd,EAAY,MAAM,KAAK,CAAC,EAAGE,EAAYhd,GAASR,EAAcsd,EAAY,MAAM,MAAM,CAAC,EAAGvP,EAAQ,CACjI,KAAMyP,EAAYD,EAAMxc,GACxB,MAAOyc,EAAYD,EAAMxc,EACzC,EACY,OAAKuc,EAAY,WACb9a,EAAI,OAAS7C,EAAcM,EAAc8N,EAAM,KAAMA,EAAM,KAAK,CAAC,GAEjEuP,EAAY,QAAU,OAAOA,EAAY,OAAU,WACnD9a,EAAI,QAAU3D,KAEX2D,CACnB,EACQ,KAAK,cAAgB,CAAC6M,EAAK2N,EAAWd,KAAsB,CACxD,MAAMuB,EAAoB,KAAK,QAAQ,WAAY/Y,EAAS,KAAK,YACjE,GAAI,CAAC+Y,EAAkB,OACnB,MAAO,GAEX,MAAMC,EAAiBD,EAAkB,QACzC,GAAIC,EAAe,OACf,MAAO,GAEX,MAAMC,EAAUD,EAAe,QAC/B,GAAIC,GADiD,GACxBX,EAAWW,EACpC,MAAM,IAAI,MAAM,GAAGthB,CAAW,8CAA8C,EAEhF,MAAO,CAAC,CAAC,KAAK,UAAU,UAAU,KAAKyK,GAAYvG,EAAY8O,EAAKvI,EAAS,QAAQ,EAAIpC,EAASoC,EAAS,UAAS,CAAE,CAClI,EACQ,KAAK,cAAgB+C,GAAS,CAC1B,GAAI,CAACA,GAAS,CAAC,KAAK,MAAS,CAAC,KAAK,WAAa,CAAC,KAAK,KAAK,MACvD,OAAOA,EAEX,MAAM+T,EAAa,EAAGC,EAAO,EAAGC,EAAa,KAAK,KAAK,YAAc,KAAK,KAAK,SAAWxf,GAASsf,EAAaA,EAAYG,EAAU,KAAK,KAAK,WAAa,KAAK,GAAKhd,GAAO8c,EAC9K,OAD6L,KAAK,QAAQ,KAAK,KAAK,OAASA,GAAQE,IAAY,KAAK,GAAKD,EAAW,EAAIxf,GAItQ,KAAK,UACE,KAAK,UAEZ,KAAK,KAAK,MACHgS,GAASzG,EAAO,KAAK,KAAK,MAAM,KAAM,KAAK,KAAK,MAAM,KAAK,EAE/DA,EARIA,CASvB,EACQ,KAAK,cAAgBjJ,GAAY,CAC7B,MAAMmO,EAAY,KAAK,UAAWiP,EAAche,EAAc,KAAK,QAAQ,OAAO,KAAK,EAAGie,EAAO,EACjG,KAAK,SAAW,KAAK,cAAclP,EAAWnO,EAAU9B,EAAMkf,EAAaC,EAAMlP,EAAU,OAAO,CAAC,EACnG,KAAK,gBAAkB,KAAK,SAAS,KAAI,EACzC,MAAM/G,EAAa+G,EAAU,OAAO,KAAMmP,EAAgB,EAO1D,OANA,KAAK,WAAa,CACd,GAAG/V,GAAY,KAAK,QAAQ,KAAK,OAAQH,CAAU,EACnD,OAAQ,KAAK,QAAQ,KAAK,OAAO,QAAUkW,EAC3C,KAAM,KAAK,QAAQ,KAAK,OAAO,MAAQ/b,GAAU,OACjE,EACY,KAAK,UAAYzB,GAA0B,KAAK,QAAQ,KAAK,UAAW,KAAK,SAAU,KAAK,UAAU,EAC9F,KAAK,QAAQ,KAAK,UAAS,CAC/B,KAAKjE,EAAc,OACf,KAAK,QAAUwf,GAAgB,OAC/B,MACJ,KAAKxf,EAAc,QACf,KAAK,QAAUwf,GAAgB,QAC/B,KACP,CACD,KAAK,OAASje,EAAO,MACjC,EACQ,KAAK,QAAUgZ,CAClB,CACD,QAAQmH,EAAU,WACd,GAAI,KAAK,aAAe,KAAK,UACzB,OAEJ,KAAK,UAAY,GACjB,KAAK,OAAO,QAAU,GACtB,KAAK,KAAK,QAAU,GACpB,MAAMpP,EAAY,KAAK,UAAWqP,EAAgB,KAAK,cAAeC,EAActP,EAAU,aAAa,IAAI,KAAK,KAAK,GACzHpN,EAAA0c,GAAA,YAAAA,EAAa,kBAAb,MAAA1c,EAAA,KAAA0c,EAA+B,MAC/B,SAAW,CAAG,CAAAjO,CAAM,IAAKrB,EAAU,SAC/BnN,EAAAwO,EAAO,oBAAP,MAAAxO,EAAA,KAAAwO,EAA2B,KAAM+N,GAErC,UAAWjN,KAAWnC,EAAU,UAAU,UACtCuP,EAAApN,EAAQ,oBAAR,MAAAoN,EAAA,KAAApN,EAA4B,KAAMiN,GAEtCC,GAAA,MAAAA,EAAe,MAAM,MACrB,KAAK,QAAQ,cAAcpI,EAAU,kBAAmB,CACpD,UAAW,KAAK,UAChB,KAAM,CACF,SAAU,IACb,CACb,CAAS,CACJ,CACD,KAAKtN,EAAO,CACR,MAAMqG,EAAY,KAAK,UAAW8B,EAAS9B,EAAU,OACrD,SAAW,CAAG,CAAAqB,CAAM,IAAKrB,EAAU,QAC/B8B,EAAO,mBAAmBT,EAAQ,KAAM1H,CAAK,EAEjDmI,EAAO,aAAa,KAAMnI,CAAK,CAClC,CACD,cAAe,CACX,OAAO,KAAK,cAAc,KAAK,OAAO,OAASyE,GAAoB,KAAK,KAAK,CAAC,CACjF,CACD,SAAU,CACN,OAAO,KAAK,UAAW,GAAIlQ,GAAY,KAAK,GAAK8D,EACpD,CACD,aAAc,CACV,MAAO,CACH,EAAG,KAAK,SAAS,EAAI,KAAK,OAAO,EACjC,EAAG,KAAK,SAAS,EAAI,KAAK,OAAO,EACjC,EAAG,KAAK,SAAS,CAC7B,CACK,CACD,WAAY,CACR,OAAO,KAAK,OAAO,QAAU,KAAK,KAAK,KAC1C,CACD,gBAAiB,CACb,OAAO,KAAK,cAAc,KAAK,OAAO,OAASoM,GAAoB,KAAK,WAAW,CAAC,CACvF,CACD,KAAKmP,EAAI1b,EAAU2d,EAAiB7D,EAAO,mBACvC,MAAM3L,EAAY,KAAK,UAAWiI,EAAS,KAAK,QAChD,KAAK,GAAKsF,EACV,KAAK,MAAQ5B,EACb,KAAK,YAAc,GACnB,KAAK,WAAa,GAClB,KAAK,WAAa,GAClB,KAAK,UAAY,GACjB,KAAK,aAAe,GACpB,KAAK,aAAe,EACpB,KAAK,UAAY,GACjB,KAAK,YAAc,GACnB,KAAK,WAAa,GAClB,KAAK,SAAW,EAChB,KAAK,UAAY,GACjB,KAAK,OAAS,CACV,YAAa,CAAE,CAC3B,EACQ,KAAK,QAAUuB,GAAgB,OAC/B,KAAK,mBAAqB,GAC1B,MAAMxU,EAAUsH,EAAU,OAAO,WAAYyP,EAAczP,EAAU,cAAe0P,EAAmBzD,GAAqB,KAAK,QAASjM,EAAWyP,EAAY,SAAS,EAAG,CAAE,iBAAAjC,GAAqBkC,EAAkBC,EAAaD,EAAiB,OAAO,KAAME,EAAYF,EAAiB,MAAM,KACpS,KAAK,OAASnX,GAAyBoX,EAAY,KAAK,GAAInC,CAAgB,EAC5E,KAAK,MAAQjV,GAAyBqX,EAAW,KAAK,GAAIpC,CAAgB,EAC1E,MAAMF,EAAgBoC,EAAiB,OAAQ/B,EAAe+B,EAAiB,MAC/E,GAAIF,EAAiB,CACjB,IAAI5c,EAAA4c,EAAgB,SAAhB,MAAA5c,EAAwB,KAAM,CAC9B,MAAMid,EAAqBL,EAAgB,OAAO,KAAM5F,GAASrR,GAAyBsX,EAAoB,KAAK,GAAIrC,CAAgB,EACnI5D,KACA,KAAK,OAASA,GACd0D,EAAc,KAAKkC,EAAgB,MAAM,EAEhD,CACD,IAAI3c,EAAA2c,EAAgB,QAAhB,MAAA3c,EAAuB,KAAM,CAC7B,MAAMid,EAAoBN,EAAgB,MAAM,KAAMnE,GAAQ9S,GAAyBuX,EAAmB,KAAK,GAAItC,CAAgB,EAC/HnC,KACA,KAAK,MAAQA,GACbsC,EAAa,KAAK6B,EAAgB,KAAK,EAE9C,CACJ,CACD,GAAI,KAAK,SAAWpC,GAAc,CAC9B,MAAM2C,EAAmB,CAAC,GAAG,KAAK,UAAU,cAAc,KAAI,CAAE,EAChE,KAAK,OAASA,EAAiB,KAAK,MAAM,KAAK,SAAWA,EAAiB,MAAM,CAAC,CACrF,CACD,GAAI,KAAK,QAAU3C,GAAc,CAC7B,MAAM4C,EAAkB,CAAC,GAAG,KAAK,UAAU,aAAa,KAAI,CAAE,EAC9D,KAAK,MAAQA,EAAgB,KAAK,MAAM,KAAK,SAAWA,EAAgB,MAAM,CAAC,CAClF,CACD,KAAK,WAAa3C,GAAe,KAAK,OAAQC,EAAe,KAAK,GAAIE,CAAgB,EACtF,KAAK,UAAYE,GAAc,KAAK,MAAOC,EAAc,KAAK,GAAIH,CAAgB,EAClFkC,EAAiB,KAAKF,CAAe,EACrC,MAAM/B,EAAa,KAAK,WACpBA,GACAiC,EAAiB,KAAKjC,EAAW,SAAS,EAE9C,MAAMG,EAAY,KAAK,UACnBA,GACA8B,EAAiB,KAAK9B,EAAU,SAAS,EAE7C,MAAM3H,EAAgB,IAAImC,GAAcH,EAAQjI,CAAS,EACzDiG,EAAc,KAAKjG,EAAU,cAAc,aAAa,EACxDiG,EAAc,KAAKyJ,EAAiB,aAAa,EACjD,KAAK,cAAgBzJ,EACrB,KAAK,YAAawH,GAAA,YAAAA,EAAY,OAAQiC,EAAiB,OAAO,KAC9D,KAAK,aAAcjC,GAAA,YAAAA,EAAY,QAASiC,EAAiB,OAAO,MAChE,KAAK,WAAY9B,GAAA,YAAAA,EAAW,OAAQ8B,EAAiB,MAAM,KAC3D,KAAK,YAAa9B,GAAA,YAAAA,EAAW,QAAS8B,EAAiB,MAAM,MAC7D,KAAK,QAAUA,EACf,MAAMO,EAAc,KAAK,QAAQ,KAAK,KACtC,KAAK,UAAYhf,EAAcgf,EAAY,MAAM,KAAK,EAAIxiB,EACtDwiB,EAAY,YACZ,KAAK,cAAgB,KAAK,QAAQ,iBAAiBA,EAAY,SAAS,EACpE,KAAK,eAAiBjQ,EAAU,QAAQiQ,EAAY,UAAW,KAAK,aAAa,GACjF,KAAK,cAAc,KAAKjQ,CAAS,GAGzCA,EAAU,OAAO,aAAa,IAAI,EAClC,KAAK,KAAOxH,GAAkC,KAAK,QAAQ,KAAME,CAAO,EACxE,KAAK,OAAS,CACV,QAAS,EACrB,EACQ,KAAK,KAAO,CACR,QAAS,GACT,OAAQ,CACpB,EACQ,KAAK,cAAc7G,CAAQ,EAC3B,KAAK,gBAAkB,KAAK,qBAC5B,KAAK,SAAW,KAAK,gBAAgB,KAAI,EACzC,MAAMgH,EAAc,EACpB,KAAK,UAAYA,EAAc5H,EAAc,KAAK,QAAQ,KAAK,KAAK,EACpE,MAAMif,EAAYlQ,EAAU,UAC5BkQ,EAAU,cAAc,KAAK,SAAS,CAAC,EACvC,KAAK,aAAe,KAAK,SAAS,EAAIlQ,EAAU,QAChD,KAAK,MAAQ,GACb,IAAImQ,EAAenQ,EAAU,cAAc,IAAI,KAAK,MAAM,EACrDmQ,IACDA,EAAe,KAAK,QAAQ,gBAAgB,KAAK,MAAM,EACnDA,GACAnQ,EAAU,cAAc,IAAI,KAAK,OAAQmQ,CAAY,GAGzDA,GAAA,MAAAA,EAAc,YACdA,EAAa,WAAW,IAAI,EAEhC,IAAIb,EAActP,EAAU,aAAa,IAAI,KAAK,KAAK,EAClDsP,IACDA,EAAc,KAAK,QAAQ,eAAe,KAAK,KAAK,EAChDA,GACAtP,EAAU,aAAa,IAAI,KAAK,MAAOsP,CAAW,GAGtDA,GAAA,MAAAA,EAAa,WACbA,EAAY,UAAU,IAAI,EAE9B,MAAMc,EAAgBd,GAAA,YAAAA,EAAa,cAC/Bc,IACA,KAAK,MAAQA,EAAc,IAAI,GAEnC,KAAK,SAAW,GAChB,KAAK,YAAcvV,GAAgB,KAAK,QAAQ,OAAO,KAAK,EAC5D,UAAWsH,KAAW+N,EAAU,SAC5B/N,EAAQ,KAAK,IAAI,EAErB,UAAWkO,KAASH,EAAU,QAC1BX,EAAAc,EAAM,OAAN,MAAAd,EAAA,KAAAc,EAAa,OAEjBC,EAAAH,GAAA,YAAAA,EAAc,eAAd,MAAAG,EAAA,KAAAH,EAA6BnQ,EAAW,OACxCuQ,GAAAjB,GAAA,YAAAA,EAAa,eAAb,MAAAiB,GAAA,KAAAjB,EAA4BtP,EAAW,MACvC,SAAW,CAAG,CAAAqB,CAAM,IAAKrB,EAAU,SAC/BwQ,GAAAnP,EAAO,kBAAP,MAAAmP,GAAA,KAAAnP,EAAyB,KAEhC,CACD,gBAAiB,CACb,MAAM1L,EAAS,KAAK,UAAS,EAAIsD,EAAa,KAAK,UAAU,OAAO,KAAMpH,EAAW,KAAK,SAC1F,OAAQA,EAAS,GAAK,CAAC8D,GACnB9D,EAAS,GAAK,CAAC8D,GACf9D,EAAS,GAAKoH,EAAW,OAAStD,GAClC9D,EAAS,GAAKoH,EAAW,MAAQtD,CACxC,CACD,WAAY,CACR,MAAO,CAAC,KAAK,WAAa,CAAC,KAAK,UAAY,KAAK,gBACpD,CACD,OAAQ,OACJ,UAAWwM,KAAW,KAAK,UAAU,UAAU,UAC3CvP,EAAAuP,EAAQ,QAAR,MAAAvP,EAAA,KAAAuP,EAAgB,KAEvB,CACL,CCnWO,MAAMsO,EAAM,CACf,YAAY5e,EAAUkG,EAAU,CAC5B,KAAK,SAAWlG,EAChB,KAAK,SAAWkG,CACnB,CACL,CCLO,IAAI2Y,IACV,SAAUA,EAAW,CAClBA,EAAU,OAAY,SACtBA,EAAU,UAAe,WAC7B,GAAGA,KAAcA,GAAY,CAAA,EAAG,ECFhC,MAAMxiB,GAAY,EACX,MAAMyiB,EAAU,CACnB,YAAY/hB,EAAGN,EAAGkT,EAAM,CACpB,KAAK,SAAW,CACZ,EAAG5S,EACH,EAAGN,CACf,EACQ,KAAK,KAAOkT,CACf,CACL,CACO,MAAMoP,UAAeD,EAAU,CAClC,YAAY/hB,EAAGN,EAAGqH,EAAQ,CACtB,MAAM/G,EAAGN,EAAGoiB,GAAU,MAAM,EAC5B,KAAK,OAAS/a,CACjB,CACD,SAASH,EAAO,CACZ,OAAOhE,EAAYgE,EAAO,KAAK,QAAQ,GAAK,KAAK,MACpD,CACD,WAAWwJ,EAAO,CACd,MAAM1H,EAAO,KAAK,SAAUC,EAAOyH,EAAM,SAAU6R,EAAU,CAAE,EAAG,KAAK,IAAItZ,EAAK,EAAID,EAAK,CAAC,EAAG,EAAG,KAAK,IAAIC,EAAK,EAAID,EAAK,CAAC,CAAG,EAAEzG,EAAI,KAAK,OACtI,GAAImO,aAAiB4R,GAAU5R,EAAM,OAAS0R,GAAU,OAAQ,CAC5D,MAAMI,EAAc9R,EAAO+R,EAAOlgB,EAAIigB,EAAY,OAAQE,EAAO,KAAK,KAAKH,EAAQ,GAAK3iB,GAAY2iB,EAAQ,GAAK3iB,EAAS,EAC1H,OAAO6iB,EAAOC,CACjB,SACQhS,aAAiBiS,IAAajS,EAAM,OAAS0R,GAAU,UAAW,CACvE,MAAMQ,EAAYlS,EAAO,CAAE,MAAA8L,EAAO,OAAAC,GAAWmG,EAAU,KACvD,OADqE,KAAK,IAAIL,EAAQ,EAAI/F,EAAO5c,EAAS,EAAI,KAAK,IAAI2iB,EAAQ,EAAI9F,EAAQ7c,EAAS,GACnI2C,GAAK3C,IACjB2iB,EAAQ,GAAKhgB,EAAIia,GAAS+F,EAAQ,GAAKhgB,EAAIka,GAC5C8F,EAAQ,GAAK/F,GACb+F,EAAQ,GAAK9F,CACpB,CACD,MAAO,EACV,CACL,CACO,MAAMkG,WAAkBN,EAAU,CACrC,YAAY/hB,EAAGN,EAAGwc,EAAOC,EAAQ,CAC7B,MAAMnc,EAAGN,EAAGoiB,GAAU,SAAS,EAC/B,KAAK,KAAO,CACR,OAAQ3F,EACR,MAAOD,CACnB,CACK,CACD,SAAStV,EAAO,CACZ,MAAM2b,EAAI,KAAK,KAAK,MAAOzV,EAAI,KAAK,KAAK,OAAQ4E,EAAM,KAAK,SAC5D,OAAO9K,EAAM,GAAK8K,EAAI,GAAK9K,EAAM,GAAK8K,EAAI,EAAI6Q,GAAK3b,EAAM,GAAK8K,EAAI,GAAK9K,EAAM,GAAK8K,EAAI,EAAI5E,CAC7F,CACD,WAAWsD,EAAO,CACd,GAAIA,aAAiB4R,EACjB,OAAO5R,EAAM,WAAW,IAAI,EAEhC,MAAMmS,EAAI,KAAK,KAAK,MAAOzV,EAAI,KAAK,KAAK,OAAQpE,EAAO,KAAK,SAAUC,EAAOyH,EAAM,SAAUxB,EAAQwB,aAAiBiS,GAAYjS,EAAM,KAAO,CAAE,MAAO,EAAG,OAAQ,CAAC,EAAIoS,EAAK5T,EAAM,MAAO6T,EAAK7T,EAAM,OACtM,OAAOjG,EAAK,EAAID,EAAK,EAAI6Z,GAAK5Z,EAAK,EAAI6Z,EAAK9Z,EAAK,GAAKC,EAAK,EAAID,EAAK,EAAIoE,GAAKnE,EAAK,EAAI8Z,EAAK/Z,EAAK,CACnG,CACL,CCrDA,MAAMtF,GAAO,GAAKzC,GAAS,EAAG+hB,GAAiB,EACxC,MAAMC,EAAS,CAClB,YAAYC,EAAWC,EAAU,CAC7B,KAAK,UAAYD,EACjB,KAAK,SAAWC,EAChB,KAAK,WAAa,IAAM,CACpB,KAAM,CAAE,EAAA7iB,EAAG,EAAAN,CAAC,EAAK,KAAK,UAAU,SAAU,CAAE,MAAAwc,EAAO,OAAAC,CAAQ,EAAG,KAAK,UAAU,KAAM,CAAE,SAAA0G,CAAU,EAAG,KAClG,QAASC,EAAI,EAAGA,EAAIJ,GAAgBI,IAAK,CACrC,MAAMC,EAAaD,EAAIniB,GACvB,KAAK,MAAM,KAAK,IAAIgiB,GAAS,IAAIN,GAAUriB,EAAIkc,EAAQ9Y,GAAO2f,EAAYrjB,EAAIyc,EAAS/Y,IAAQ,KAAK,MAAM0f,EAAI1f,EAAI,EAAI2f,GAAa7G,EAAQ9Y,GAAM+Y,EAAS/Y,EAAI,EAAGyf,CAAQ,CAAC,CAC7K,CACD,KAAK,SAAW,EAC5B,EACQ,KAAK,QAAU,GACf,KAAK,SAAW,GAChB,KAAK,MAAQ,EAChB,CACD,OAAOjc,EAAO,CACV,OAAK,KAAK,UAAU,SAASA,EAAM,QAAQ,EAGvC,KAAK,QAAQ,OAAS,KAAK,UAC3B,KAAK,QAAQ,KAAKA,CAAK,EAChB,KAEN,KAAK,UACN,KAAK,WAAU,EAEZ,KAAK,MAAM,KAAKoc,GAAOA,EAAI,OAAOpc,CAAK,CAAC,GATpC,EAUd,CACD,MAAMwJ,EAAO6S,EAAO,CAChB,MAAMpe,EAAM,CAAA,EACZ,GAAI,CAACuL,EAAM,WAAW,KAAK,SAAS,EAChC,MAAO,GAEX,UAAWhI,KAAK,KAAK,QACb,CAACgI,EAAM,SAAShI,EAAE,QAAQ,GAC1BxF,EAAYwN,EAAM,SAAUhI,EAAE,QAAQ,EAAIA,EAAE,SAAS,UAAW,IAC/D,CAAC6a,GAASA,EAAM7a,EAAE,QAAQ,IAG/BvD,EAAI,KAAKuD,EAAE,QAAQ,EAEvB,GAAI,KAAK,SACL,UAAW4a,KAAO,KAAK,MACnBne,EAAI,KAAK,GAAGme,EAAI,MAAM5S,EAAO6S,CAAK,CAAC,EAG3C,OAAOpe,CACV,CACD,YAAY5B,EAAU8D,EAAQkc,EAAO,CACjC,OAAO,KAAK,MAAM,IAAIjB,EAAO/e,EAAS,EAAGA,EAAS,EAAG8D,CAAM,EAAGkc,CAAK,CACtE,CACD,eAAehgB,EAAU4D,EAAMoc,EAAO,CAClC,OAAO,KAAK,MAAM,IAAIZ,GAAUpf,EAAS,EAAGA,EAAS,EAAG4D,EAAK,MAAOA,EAAK,MAAM,EAAGoc,CAAK,CAC1F,CACL,CCjDA,MAAMC,GAAgB,EAAG5jB,GAAY,EAAG6jB,GAAwB,EAC1DC,GAAkB/Y,GAAe,CACnC,KAAM,CAAE,OAAA8R,EAAQ,MAAAD,GAAU7R,EAAYgZ,EAAY,KAAOC,EAAa,IACtE,OAAO,IAAIjB,GAAUgB,EAAYnH,EAAOmH,EAAYlH,EAAQmH,EAAapH,EAAOoH,EAAanH,CAAM,CACvG,EACO,MAAMoH,EAAU,CACnB,YAAYlK,EAAQjI,EAAW,CAC3B,KAAK,WAAa,IAAIkQ,IAAc,CAChC,KAAK,MAAM,KAAK,GAAGA,CAAS,CACxC,EACQ,KAAK,cAAgB,CAACzX,EAAS2Z,EAAazG,IAAU,OAClD,MAAM0G,EAAgB5Z,EAAQ,OAC9B,GAAI,GAAC7F,EAAA6F,EAAQ,OAAO,UAAf,MAAA7F,EAAwB,QAAQ,CAC7B+Y,IAAU,OACV,KAAK,OAAS0G,EAAc,MAAM,MAE7BA,EAAc,OACnB,KAAK,aAAa,IAAI1G,EAAO0G,EAAc,MAAM,KAAK,EAE1D,MACH,CACD,MAAMC,EAAgB,KAAK,mBAAmBD,EAAc,OAAO,EAAGE,EAAqBF,EAAc,MAAOG,EAAW,EAAGC,EAAoBJ,EAAc,MAAM,MAAQG,EAAWH,EAAc,MAAM,MAAQE,EAAoBG,EAAkB,KAAK,IAAIH,EAAoBE,CAAiB,EAAIH,EAAgBF,EAAaO,EAAiB,KAAK,IAAI,KAAK,MAAO,KAAK,OAAOre,GAAKA,EAAE,QAAUqX,CAAK,EAAE,MAAM,EACtZA,IAAU,OACV,KAAK,OAAS0G,EAAc,MAAM,MAAQC,EAG1C,KAAK,aAAa,IAAI3G,EAAO0G,EAAc,MAAM,MAAQC,CAAa,EAEtEK,EAAiBD,EACjB,KAAK,KAAK,KAAK,IAAIA,EAAkBC,CAAc,EAAG,OAAWla,EAASkT,CAAK,EAE1EgH,EAAiBD,GACtB,KAAK,eAAeC,EAAiBD,EAAiB/G,CAAK,CAE3E,EACQ,KAAK,mBAAqBiH,GAAkB,CACxC,MAAM5S,EAAY,KAAK,WAAY6S,EAAgB,EACnD,GAAI,CAAC7S,EAAU,OAAO,SAAW,CAAC4S,EAAe,OAC7C,OAAOC,EAEX,MAAM/Q,EAAS9B,EAAU,OAAO,QAAStH,EAAUsH,EAAU,OAAO,WACpE,OAAQ8B,EAAO,MAAQA,EAAO,QAAW8Q,EAAe,OAASA,EAAe,MAAQla,GAAWxK,GAC/G,EACQ,KAAK,cAAgB,CAAC2D,EAAU2d,EAAiB7D,EAAOmH,IAAgB,CACpE,GAAI,CACA,IAAI/a,EAAW,KAAK,MAAM,IAAG,EACxBA,IACDA,EAAW,IAAIgW,GAAS,KAAK,QAAS,KAAK,UAAU,GAEzDhW,EAAS,KAAK,KAAK,QAASlG,EAAU2d,EAAiB7D,CAAK,EAC5D,IAAIoH,EAAS,GAIb,OAHID,IACAC,EAASD,EAAY/a,CAAQ,GAE5Bgb,GAGL,KAAK,OAAO,KAAKhb,CAAQ,EACzB,KAAK,QAAQ,KAAKA,CAAQ,EAC1B,KAAK,UACL,KAAK,QAAQ,cAAckP,EAAU,cAAe,CAChD,UAAW,KAAK,WAChB,KAAM,CACF,SAAAlP,CACH,CACrB,CAAiB,EACMA,GAXH,MAYP,OACMiN,EAAG,CACNzR,GAAS,EAAG,QAAQ,GAAGjG,CAAW,qBAAqB0X,CAAC,EAAE,CAC7D,CACb,EACQ,KAAK,gBAAkB,CAAC3P,EAAOsW,EAAOyD,IAAa,CAC/C,MAAMrX,EAAW,KAAK,OAAO1C,CAAK,EAClC,GAAI,CAAC0C,GAAYA,EAAS,QAAU4T,EAChC,MAAO,GAEX,MAAMqH,EAAO,KAAK,QAAQ,QAAQjb,CAAQ,EAAGkb,EAAc,EAC3D,YAAK,OAAO,OAAO5d,EAAO4d,CAAW,EACrC,KAAK,QAAQ,OAAOD,EAAMC,CAAW,EACrClb,EAAS,QAAQqX,CAAQ,EACzB,KAAK,QAAQ,cAAcnI,EAAU,gBAAiB,CAClD,UAAW,KAAK,WAChB,KAAM,CACF,SAAAlP,CACH,CACjB,CAAa,EACD,KAAK,WAAWA,CAAQ,EACjB,EACnB,EACQ,KAAK,QAAUkQ,EACf,KAAK,WAAajI,EAClB,KAAK,QAAU,EACf,KAAK,OAAS,GACd,KAAK,QAAU,GACf,KAAK,MAAQ,GACb,KAAK,OAAS,EACd,KAAK,aAAe,IAAI,IACxB,KAAK,WAAa,GAClB,KAAK,YAAc,EACnB,KAAK,oBAAsB,IAAIiN,GAAmBhF,EAAQjI,CAAS,EACnE,KAAK,oBAAsB,GAC3B,MAAM/G,EAAa+G,EAAU,OAAO,KACpC,KAAK,SAAW,IAAIuR,GAASS,GAAe/Y,CAAU,EAAG6Y,EAAa,EACtE,KAAK,OAAS,GACd,KAAK,SAAW,EACnB,CACD,IAAI,OAAQ,CACR,OAAO,KAAK,OAAO,MACtB,CACD,oBAAqB,CACjB,MAAM9R,EAAY,KAAK,WAAsBA,EAAU,cAC/C,gBAAgB,QAAQhJ,GAAK,KAAK,YAAYA,EAAE,SAAWoC,GAAYpC,EAAE,SAAUgJ,EAAU,OAAO,IAAI,EAAI,OAAWhJ,EAAE,OAAO,CAAC,CAC5I,CACD,YAAYnF,EAAU2d,EAAiB7D,EAAOmH,EAAa,CACvD,MAAMI,EAAY,KAAK,WAAW,cAAc,UAAU,OAAO,MAAM,KAAMC,EAAQxH,IAAU,OAAY,KAAK,OAAS,KAAK,aAAa,IAAIA,CAAK,GAAK,KAAK,OAAQyH,EAAe,KAAK,MAC1L,GAAID,EADwM,EAExM,OAAQD,EAAS,CACb,KAAKlI,GAAU,OAAQ,CACnB,MAAqCqI,EAAgBD,EAAe,EAAcD,EAC9EE,EAAgB,GAChB,KAAK,eAAeA,CAAa,EAErC,KACH,CACD,KAAKrI,GAAU,KACX,GAAIoI,GAAgBD,EAChB,OAEJ,KACP,CAEL,OAAO,KAAK,cAActhB,EAAU2d,EAAiB7D,EAAOmH,CAAW,CAC1E,CACD,OAAQ,CACJ,KAAK,OAAS,GACd,KAAK,QAAU,GACf,KAAK,oBAAsB,EAC9B,CACD,SAAU,CACN,KAAK,OAAS,GACd,KAAK,QAAU,GACf,KAAK,OAAS,GACd,KAAK,SAAW,EACnB,CACD,KAAKnZ,EAAO,CACR,MAAMqG,EAAY,KAAK,WAAY8B,EAAS9B,EAAU,OACtD8B,EAAO,MAAK,EACZ,KAAK,OAAOnI,CAAK,EACjB,SAAW,CAAG,CAAA0H,CAAM,IAAKrB,EAAU,QAC/B8B,EAAO,WAAWT,EAAQ1H,CAAK,EAEnC,UAAW3C,KAAK,KAAK,QACjBA,EAAE,KAAK2C,CAAK,CAEnB,CACD,OAAO2Z,EAAW,CACd,OAAO,KAAK,OAAO,OAAOA,CAAS,CACtC,CACD,KAAKA,EAAW,CACZ,OAAO,KAAK,OAAO,KAAKA,CAAS,CACpC,CACD,IAAIje,EAAO,CACP,OAAO,KAAK,OAAOA,CAAK,CAC3B,CACD,gBAAgBmB,EAAM,CAClB,KAAK,oBAAoB,gBAAgBA,CAAI,CAChD,CACD,MAAM,MAAO,SACT,MAAMwJ,EAAY,KAAK,WAAYvH,EAAUuH,EAAU,cACvD,KAAK,YAAc,EACnB,KAAK,WAAa,GAClB,MAAM,KAAK,cACX,IAAImG,EAAU,GACd,SAAW,CAAG,CAAA9E,CAAM,IAAKrB,EAAU,QAE/B,GADAmG,IAAUvT,EAAAyO,EAAO,0BAAP,YAAAzO,EAAA,KAAAyO,KAAsC8E,EAC5CA,EACA,MAIR,GADA,KAAK,mBAAkB,EACnB,CAACA,EAAS,CACV,MAAMuJ,EAAmBjX,EAAQ,UAAW8a,EAAS7D,EAAiB,OACtE,UAAW/D,KAAS4H,EAAQ,CACxB,MAAMC,EAAeD,EAAO5H,CAAK,EACjC,QAAS+F,EAAI,KAAK,MAAO+B,EAAI,EAAGA,IAAI5gB,EAAA2gB,EAAa,SAAb,YAAA3gB,EAAqB,QAAS6e,EAAIhC,EAAiB,OAAO,MAAOgC,IAAK+B,IACtG,KAAK,YAAY,OAAWD,EAAc7H,CAAK,CAEtD,CACD,QAAS+F,EAAI,KAAK,MAAOA,EAAIhC,EAAiB,OAAO,MAAOgC,IACxD,KAAK,YAAW,CAEvB,CACJ,CACD,MAAM,aAAc,CAChB,GAAI,KAAK,oBACL,OAEJ,MAAM1R,EAAY,KAAK,WACvB,KAAK,OAAS,MAAM,KAAK,QAAQ,UAAUA,EAAW,EAAI,EAC1D,KAAK,SAAW,MAAM,KAAK,QAAQ,YAAYA,EAAW,EAAI,EAC9D,MAAM,KAAK,oBAAoB,OAC/B,SAAW,CAAG,CAAAqP,CAAa,IAAKrP,EAAU,eACtCqP,EAAc,KAAKrP,CAAS,CAEnC,CACD,KAAK0T,EAAIxN,EAAOsJ,EAAiB7D,EAAO,CACpC,QAAS+F,EAAI,EAAGA,EAAIgC,EAAIhC,IACpB,KAAK,YAAYxL,GAAA,YAAAA,EAAO,SAAUsJ,EAAiB7D,CAAK,CAE/D,CACD,MAAM,QAAS,CACX,KAAK,MAAK,EACV,MAAM,KAAK,OACX,KAAK,KAAK,CAAE,MAAO,EAAG,OAAQ,CAAC,CAAE,CACpC,CACD,OAAO5T,EAAU4T,EAAOyD,EAAU,CAC9B,KAAK,SAAS,KAAK,OAAO,QAAQrX,CAAQ,EAAG,OAAW4T,EAAOyD,CAAQ,CAC1E,CACD,SAAS/Z,EAAOse,EAAW5B,GAAuBpG,EAAOyD,EAAU,CAE/D,GAAI/Z,EAAQ,GAAYA,EAAQ,KAAK,MACjC,OAEJ,IAAIue,EAAU,EACd,QAASlC,EAAIrc,EAAOue,EAAUD,GAAYjC,EAAI,KAAK,MAAOA,IAClD,KAAK,gBAAgBA,IAAK/F,EAAOyD,CAAQ,GACzCwE,GAGX,CACD,eAAeD,EAAUhI,EAAO,CAE5B,KAAK,SAAS,EAAcgI,EAAUhI,CAAK,CAC9C,CACD,YAAa,CACT,MAAMlT,EAAU,KAAK,WAAW,cAAe8a,EAAS9a,EAAQ,UAAU,OAAQ2Z,EAAc,EAChG,UAAWzG,KAAS4H,EAChB,KAAK,cAAcA,EAAO5H,CAAK,EAAGyG,EAAazG,CAAK,EAExD,KAAK,cAAclT,EAAQ,UAAWA,EAAQ,gBAAgB,MAAM,CACvE,CACD,cAAcuV,EAAQ,CAClB,KAAK,YAAcA,EACnB,KAAK,WAAa,KAAK,YAAc,KAAK,YAAcA,CAC3D,CACD,gBAAgBja,EAAQ,CACpB,KAAK,cAAgBA,CACxB,CACD,OAAO4F,EAAO,SACV,MAAMqG,EAAY,KAAK,WAAY6T,EAAoB,IAAI,IAC3D,KAAK,SAAW,IAAItC,GAASS,GAAehS,EAAU,OAAO,IAAI,EAAG8R,EAAa,EACjF,SAAW,CAAG,CAAAzC,CAAa,IAAKrP,EAAU,eACtCqP,EAAc,OAAM,EAExB,SAAW,CAAG,CAAAhO,CAAM,IAAKrB,EAAU,SAC/BpN,EAAAyO,EAAO,SAAP,MAAAzO,EAAA,KAAAyO,EAAgB1H,GAEpB,MAAMma,EAAe,KAAK,cAC1B,UAAW/b,KAAY,KAAK,OAAQ,CAC5B+b,GAAgB,CAAC/b,EAAS,qBAC1BA,EAAS,SAAS,GAAK+b,EAAa,MACpC/b,EAAS,SAAS,GAAK+b,EAAa,OACpC/b,EAAS,gBAAgB,GAAK+b,EAAa,MAC3C/b,EAAS,gBAAgB,GAAK+b,EAAa,QAE/C/b,EAAS,mBAAqB,GAC9B,KAAK,oBAAoB,MAAMA,CAAQ,EACvC,SAAW,CAAA,CAAGsJ,CAAM,IAAK,KAAK,WAAW,QAAS,CAC9C,GAAItJ,EAAS,UACT,OAEJlF,EAAAwO,EAAO,iBAAP,MAAAxO,EAAA,KAAAwO,EAAwBtJ,EAAU4B,EACrC,CACD,UAAW0W,KAAS,KAAK,OACjBA,EAAM,UAAUtY,CAAQ,GACxBsY,EAAM,KAAKtY,EAAU4B,CAAK,EAGlC,GAAI5B,EAAS,UAAW,CACpB8b,EAAkB,IAAI9b,CAAQ,EAC9B,QACH,CACD,KAAK,SAAS,OAAO,IAAI0Y,GAAM1Y,EAAS,YAAW,EAAIA,CAAQ,CAAC,CACnE,CACD,GAAI8b,EAAkB,KAAM,CACxB,MAAME,EAAe/c,GAAM,CAAC6c,EAAkB,IAAI7c,CAAC,EACnD,KAAK,OAAS,KAAK,OAAO+c,CAAW,EACrC,KAAK,QAAU,KAAK,QAAQ,OAAOA,CAAW,EAC9C,UAAWhc,KAAY8b,EACnB,KAAK,QAAQ,cAAc5M,EAAU,gBAAiB,CAClD,UAAW,KAAK,WAChB,KAAM,CACF,SAAAlP,CACH,CACrB,CAAiB,EAEL,KAAK,WAAW,GAAG8b,CAAiB,CACvC,CACD,KAAK,oBAAoB,iBAAiBla,CAAK,EAC/C,UAAW5B,KAAY,KAAK,OAAQ,CAChC,UAAWoK,KAAW,KAAK,SACvBA,EAAQ,OAAOpK,EAAU4B,CAAK,EAE9B,CAAC5B,EAAS,WAAa,CAACA,EAAS,UACjC,KAAK,oBAAoB,kBAAkBA,EAAU4B,CAAK,CAEjE,CAED,GADA,OAAO,KAAK,cACR,KAAK,WAAY,CACjB,MAAMqa,EAAS,KAAK,QACpBA,EAAO,KAAK,CAACvZ,EAAGD,IAAMA,EAAE,SAAS,EAAIC,EAAE,SAAS,GAAKA,EAAE,GAAKD,EAAE,EAAE,EAChE,MAAMoM,EAAe,EACrB,KAAK,YAAcoN,EAAOA,EAAO,OAASpN,CAAY,EAAE,SAAS,EACjE,KAAK,WAAa,EACrB,CACJ,CACL,CCpUA,MAAMqN,GAAe,EAAGC,GAAsB,EACvC,MAAMC,EAAO,CAChB,YAAYnU,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,WAAaiU,GAClB,KAAK,aAAeC,EACvB,CACD,MAAO,CACH,MAAMlU,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cACtD,KAAK,WAAa,CAACvH,EAAQ,cAAgBlE,KAAU0f,GAAe,OAAO,iBAC3E,KAAK,aAAeC,GACpB,MAAME,EAAQ,KAAK,WAAYtS,EAAS9B,EAAU,OAClD,GAAI8B,EAAO,QAAS,CAChB,MAAM5N,EAAU4N,EAAO,QACvBA,EAAO,KAAK,MAAQ5N,EAAQ,YAAckgB,EAC1CtS,EAAO,KAAK,OAAS5N,EAAQ,aAAekgB,CAC/C,CACD,MAAMlE,EAAYzX,EAAQ,UAAW8V,EAAc2B,EAAU,KAC7D,KAAK,SAAWjf,EAAcsd,EAAY,QAAQ,QAAQ,EAAI6F,EAC9D,KAAK,mBAAqBnjB,EAAcif,EAAU,KAAK,UAAU,KAAK,EAAIkE,CAC7E,CACD,aAAarc,EAAU,CACnB,MAAMU,EAAUV,EAAS,QAASqc,EAAQ,KAAK,WAAY7F,EAAc9V,EAAQ,KAAM4b,EAAe9F,EAAY,SAAU+F,EAAQvc,EAAS,OAC7Iuc,EAAM,UAAYrjB,EAAcsd,EAAY,KAAK,EAAI6F,EACrDE,EAAM,UAAYrjB,EAAcsd,EAAY,KAAK,EAAI6F,EACrDE,EAAM,mBAAqBrjB,EAAcwH,EAAQ,KAAK,UAAU,KAAK,EAAI2b,EACzE,MAAMG,EAAcD,EAAM,YAC1BC,EAAY,WAAaF,EAAa,aAAe,OAAYA,EAAa,WAAaD,EAAQ,OACnGG,EAAY,SAAWF,EAAa,WAAa,OAAYA,EAAa,SAAWD,EAAQ,OAC7FE,EAAM,SAAWrjB,EAAcsd,EAAY,QAAQ,QAAQ,EAAI6F,CAClE,CACL,CCvBA,SAASI,EAAWxU,EAAW,CAC3B,OAAOA,GAAa,CAACA,EAAU,SACnC,CACA,MAAMyU,GAAa,GACnB,SAASC,GAAU7kB,EAAOwc,EAAWoI,GAAYE,EAAS,GAAO,CAC7D,MAAO,CACH,MAAA9kB,EACA,OAAQ8kB,EAASF,GAAapI,EAAYoI,GAAa5kB,EAASpC,CACxE,CACA,CACA,SAASmnB,GAAqB3M,EAAQjI,KAAc+L,EAAkB,CAClE,MAAMtT,EAAU,IAAIyT,GAAQjE,EAAQjI,CAAS,EAC7C,OAAA8L,GAAYrT,EAAS,GAAGsT,CAAgB,EACjCtT,CACX,CACO,MAAMoc,EAAU,CACnB,YAAY5M,EAAQsF,EAAIvB,EAAe,CACnC,KAAK,qBAAuBhG,GAAW,CACnC,GAAI,GAACwO,EAAW,IAAI,GAAK,CAAC,KAAK,cAAc,wBAG7C,UAAWM,KAAS9O,EACZ8O,EAAM,SAAW,KAAK,cAAc,UAGpCA,EAAM,eACD,KAAK,OAGV,KAAK,MAAK,EAG9B,EACQ,KAAK,WAAcC,GAAc,CAC7B,GAAI,CACA,GAAI,CAAC,KAAK,SACN,KAAK,iBAAmB,QACxBA,EAAY,KAAK,eAAiBtnB,EAAwB,KAAK,SAAU,CACzE,KAAK,KAAK,EAAK,EACf,MACH,CACD,KAAK,iBAAL,KAAK,eAAmBsnB,GACxB,MAAMpb,EAAQ+a,GAAUK,EAAY,KAAK,eAAgB,KAAK,SAAU,KAAK,OAAO,EAGpF,GAFA,KAAK,YAAYpb,EAAM,KAAK,EAC5B,KAAK,eAAiBob,EAClBpb,EAAM,MAAQlM,EAAuB,CACrC,KAAK,KAAK,EAAK,EACf,MACH,CAED,GADA,KAAK,UAAU,KAAKkM,CAAK,EACrB,CAAC,KAAK,QAAS,CACf,KAAK,QAAO,EACZ,MACH,CACG,KAAK,iBACL,KAAK,KAAK,EAAK,CAEtB,OACMqL,EAAG,CACNzR,GAAS,EAAG,MAAM,GAAGjG,CAAW,qBAAsB0X,CAAC,CAC1D,CACb,EACQ,KAAK,QAAUiD,EACf,KAAK,GAAK,OAAOsF,CAAE,EACnB,KAAK,SAAW,IAChB,KAAK,QAAU,GACf,KAAK,OAAS,EACd,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,YAAc,GACnB,KAAK,QAAU,GACf,KAAK,UAAY,GACjB,KAAK,QAAU,GACf,KAAK,eAAiB,EACtB,KAAK,QAAU,IACf,KAAK,WAAa,GAClB,KAAK,eAAiB,IAAI,IAC1B,KAAK,eAAiBvB,EACtB,KAAK,sBAAwBA,EAC7B,KAAK,OAAS,IAAImI,GAAO,IAAI,EAC7B,KAAK,OAAS,IAAIjS,GAAO,IAAI,EAC7B,KAAK,UAAY,IAAIiQ,GAAU,KAAK,QAAS,IAAI,EACjD,KAAK,eAAiB,IAAI,IAC1B,KAAK,cAAgB,CACjB,MAAO,CACH,SAAU,GACV,OAAQ,EACX,CACb,EACQ,KAAK,QAAU,IAAI,IACnB,KAAK,cAAgB,IAAI,IACzB,KAAK,aAAe,IAAI,IACxB,KAAK,SAAWyC,GAAqB,KAAK,QAAS,IAAI,EACvD,KAAK,cAAgBA,GAAqB,KAAK,QAAS,IAAI,EAC5D,KAAK,gBAAkB,IAAI7P,GAAe,IAAI,EAC9C,KAAK,sBAAwBpQ,GAAyBqR,GAAW,KAAK,qBAAqBA,CAAO,CAAC,EACnG,KAAK,QAAQ,cAAciB,EAAU,eAAgB,CAAE,UAAW,IAAI,CAAE,CAC3E,CACD,IAAI,iBAAkB,CAClB,MAAO,CAAC,KAAK,SAAW,CAAC,KAAK,YAAcuN,EAAW,IAAI,CAC9D,CACD,IAAI,SAAU,CACV,OAAO,KAAK,QACf,CACD,IAAI,eAAgB,CAChB,OAAO,KAAK,cACf,CACD,gBAAgB5f,EAAU,CACtB,GAAI,CAAC4f,EAAW,IAAI,EAChB,OAEJ,MAAMQ,EAAK,KAAK,cAAc,QAC9B,GAAI,CAACA,EACD,OAEJ,MAAMC,EAAsB,CAACjQ,EAAG1E,EAAK3K,IAAW,CAC5C,GAAI,CAAC6e,EAAW,IAAI,EAChB,OAEJ,MAAM9b,EAAU,KAAK,OAAO,WAAYwc,EAAY,CAChD,EAAG5U,EAAI,EAAI5H,EACX,EAAG4H,EAAI,EAAI5H,CAC3B,EAAewX,EAAY,KAAK,UAAU,SAAS,YAAYgF,EAAWvf,EAAS+C,CAAO,EAC9E9D,EAASoQ,EAAGkL,CAAS,CACjC,EAAWiF,EAAgBnQ,GAAM,CACrB,GAAI,CAACwP,EAAW,IAAI,EAChB,OAEJ,MAAMnO,EAAarB,EAAG1E,EAAM,CACxB,EAAG+F,EAAW,SAAWA,EAAW,QACpC,EAAGA,EAAW,SAAWA,EAAW,OACpD,EACY4O,EAAoBjQ,EAAG1E,EADX,CACsB,CACrC,EAAE8U,EAAoB,IAAM,CACpBZ,EAAW,IAAI,IAGpBa,EAAU,GACVC,EAAa,GAChB,EAAEC,EAAmB,IAAM,CACnBf,EAAW,IAAI,IAGpBc,EAAa,GACzB,EAAWE,EAAmBxQ,GAAM,CACxB,GAAKwP,EAAW,IAAI,EAGpB,IAAIa,GAAW,CAACC,EAAY,CACxB,MAAM3O,EAAa3B,EAAG4B,EAAe,EACrC,IAAIC,EAAYF,EAAW,QAAQA,EAAW,QAAQ,OAASC,CAAY,EAC3E,GAAI,CAACC,IACDA,EAAYF,EAAW,eAAeA,EAAW,eAAe,OAASC,CAAY,EACjF,CAACC,GACD,OAGR,MAAM3S,EAAU,KAAK,OAAO,QAASwS,EAAaxS,EAAUA,EAAQ,sBAAqB,EAAK,OAAWuhB,EAAgB,EAAGnV,EAAM,CAC9H,EAAGuG,EAAU,SAAWH,EAAaA,EAAW,KAAO+O,GACvD,EAAG5O,EAAU,SAAWH,EAAaA,EAAW,IAAM+O,EAC1E,EACgBR,EAAoBjQ,EAAG1E,EAAK,KAAK,IAAIuG,EAAU,QAASA,EAAU,OAAO,CAAC,CAC7E,CACDwO,EAAU,GACVC,EAAa,GAChB,EAAEI,EAAqB,IAAM,CACrBlB,EAAW,IAAI,IAGpBa,EAAU,GACVC,EAAa,GACzB,EACQ,IAAID,EAAU,GAAOC,EAAa,GAClC,KAAK,eAAe,IAAI,QAASH,CAAY,EAC7C,KAAK,eAAe,IAAI,aAAcC,CAAiB,EACvD,KAAK,eAAe,IAAI,YAAaG,CAAgB,EACrD,KAAK,eAAe,IAAI,WAAYC,CAAe,EACnD,KAAK,eAAe,IAAI,cAAeE,CAAkB,EACzD,SAAW,CAACtf,EAAKuO,CAAO,IAAK,KAAK,eAC9BqQ,EAAG,iBAAiB5e,EAAKuO,CAAO,CAEvC,CACD,YAAY9U,EAAO,CACf,KAAK,WAAaA,CACrB,CACD,QAAQuG,EAAKuf,EAAWvG,EAAW,GAAO,CACtC,MAAI,CAACoF,EAAW,IAAI,GAAM,CAACpF,GAAY,KAAK,eAAe,IAAIhZ,CAAG,EACvD,IAEX,KAAK,eAAe,IAAIA,EAAKuf,CAAS,EAC/B,GACV,CACD,OAAQ,CACJ,MAAO,CAAC,KAAK,WAAa,KAAK,WAAa,KAAK,SACpD,CACD,oBAAqB,OACjB,GAAKnB,EAAW,IAAI,EAGpB,UAAW,CAACpe,EAAKuO,CAAO,IAAK,KAAK,gBAC9B/R,EAAA,KAAK,cAAc,UAAnB,MAAAA,EAA4B,oBAAoBwD,EAAKuO,GAEzD,KAAK,eAAe,QACvB,CACD,QAAQiR,EAAS,GAAM,SACnB,GAAKpB,EAAW,IAAI,EAGpB,MAAK,KAAI,EACT,KAAK,mBAAkB,EACvB,KAAK,UAAU,UACf,KAAK,OAAO,UACZ,SAAW,CAAG,CAAArE,CAAY,IAAK,KAAK,eAChCvd,EAAAud,EAAa,UAAb,MAAAvd,EAAA,KAAAud,EAAuB,MAE3B,SAAW,CAAG,CAAAb,CAAW,IAAK,KAAK,cAC/Bzc,EAAAyc,EAAY,UAAZ,MAAAzc,EAAA,KAAAyc,EAAsB,MAE1B,UAAWlZ,KAAO,KAAK,cAAc,KAAI,EACrC,KAAK,cAAc,OAAOA,CAAG,EAEjC,UAAWA,KAAO,KAAK,aAAa,KAAI,EACpC,KAAK,aAAa,OAAOA,CAAG,EAIhC,GAFA,KAAK,QAAQ,aAAa,IAAI,EAC9B,KAAK,UAAY,GACbwf,EAAQ,CACR,MAAMC,EAAU,KAAK,QAAQ,MAAOxmB,EAAMwmB,EAAQ,UAAUvhB,GAAKA,IAAM,IAAI,EACvEjF,GADqF,GAGrFwmB,EAAQ,OAAOxmB,EAAK,CAAW,CAEtC,CACD,KAAK,QAAQ,cAAc4X,EAAU,mBAAoB,CAAE,UAAW,IAAI,CAAE,EAC/E,CACD,KAAK6O,EAAO,CACR,GAAI,CAACtB,EAAW,IAAI,EAChB,OAEJ,IAAIuB,EAAcD,EAClB,MAAME,EAASjB,GAAc,CACrBgB,IACA,KAAK,eAAiB,OACtBA,EAAc,IAElB,KAAK,WAAWhB,CAAS,CACrC,EACQ,KAAK,oBAAsB/kB,GAAQ+kB,GAAaiB,EAAMjB,CAAS,CAAC,CACnE,CACD,MAAM,OAAOvT,EAAM/I,EAAU,GAAI,CAC7B,SAAW,CAAG,CAAA4I,CAAM,IAAK,KAAK,QAAS,CACnC,GAAI,CAACA,EAAO,OACR,SAEJ,MAAM5N,EAAM,MAAM4N,EAAO,OAAOG,EAAM/I,CAAO,EAC7C,GAAKhF,EAAI,UAGT,OAAOA,EAAI,IACd,CACDF,GAAW,EAAC,MAAM,GAAGjG,CAAW,8BAA8BkU,CAAI,YAAY,CACjF,CACD,gBAAgBhL,EAAM,OAClB,GAAKge,EAAW,IAAI,EAGpB,MAAK,UAAU,gBAAgBhe,CAAI,EACnC,SAAW,CAAG,CAAA6K,CAAM,IAAK,KAAK,SAC1BzO,EAAAyO,EAAO,kBAAP,MAAAzO,EAAA,KAAAyO,EAAyB7K,GAEhC,CACD,MAAM,MAAO,aACT,GAAI,CAACge,EAAW,IAAI,EAChB,OAEJ,MAAMyB,EAAU,KAAK,QAAQ,oBAAmB,EAChD,UAAWzU,KAAQyU,EAAS,CACxB,MAAM9U,EAAS,KAAK,QAAQ,gBAAgBK,CAAI,EAC5CL,GACA,KAAK,cAAc,IAAIK,EAAML,CAAM,CAE1C,CACD,MAAM+U,EAAS,KAAK,QAAQ,mBAAkB,EAC9C,UAAW1U,KAAQ0U,EAAQ,CACvB,MAAM/U,EAAS,KAAK,QAAQ,eAAeK,CAAI,EAC3CL,GACA,KAAK,aAAa,IAAIK,EAAML,CAAM,CAEzC,CACD,MAAM,KAAK,UAAU,cACrB,KAAK,SAAWyT,GAAqB,KAAK,QAAS,KAAM,KAAK,sBAAuB,KAAK,aAAa,EACvG,KAAK,cAAgBA,GAAqB,KAAK,QAAS,KAAM,KAAK,QAAQ,EAC3E,MAAMuB,EAAmB,MAAM,KAAK,QAAQ,oBAAoB,IAAI,EACpE,SAAW,CAAC5I,EAAIlM,CAAM,IAAK8U,EACvB,KAAK,QAAQ,IAAI5I,EAAIlM,CAAM,EAE/B,KAAK,OAAO,OACZ,MAAM,KAAK,OAAO,OAClB,KAAK,oBAAmB,EACxB,KAAK,OAAO,iBACZ,KAAK,OAAO,SACZ,KAAM,CAAE,QAAA+U,EAAS,SAAAC,EAAU,MAAAC,EAAO,SAAAjK,EAAU,OAAAsI,CAAQ,EAAG,KAAK,cAC5D,KAAK,QAAUyB,EACf,KAAK,UAAYnlB,EAAcolB,CAAQ,EAAI5oB,EAC3C,KAAK,OAASwD,EAAcqlB,CAAK,EAAI7oB,EACrC,KAAK,UAAY,EACjB,MAAM8oB,EAAkB,IAAKC,EAAc,EAC3C,KAAK,SAAWnK,EAAWmK,EAAcnK,EAAWkK,EACpD,KAAK,QAAU5B,EACf,SAAW,CAAG,CAAAxT,CAAM,IAAK,KAAK,cAC1B,OAAMvO,EAAAuO,EAAO,OAAP,YAAAvO,EAAA,KAAAuO,EAAc,OAExB,SAAW,CAAG,CAAAA,CAAM,IAAK,KAAK,aAC1B,OAAMtO,EAAAsO,EAAO,OAAP,YAAAtO,EAAA,KAAAsO,EAAc,OAExB,SAAW,CAAG,CAAAE,CAAM,IAAK,KAAK,QAC1B,OAAMkO,EAAAlO,EAAO,OAAP,YAAAkO,EAAA,KAAAlO,IAEV,KAAK,QAAQ,cAAc4F,EAAU,cAAe,CAAE,UAAW,IAAI,CAAE,EACvE,MAAM,KAAK,UAAU,OACrB,KAAK,UAAU,aACf,SAAW,CAAG,CAAA5F,CAAM,IAAK,KAAK,SAC1BiP,EAAAjP,EAAO,iBAAP,MAAAiP,EAAA,KAAAjP,GAEJ,KAAK,QAAQ,cAAc4F,EAAU,eAAgB,CAAE,UAAW,IAAI,CAAE,CAC3E,CACD,MAAM,UAAUvX,EAAM,CACb8kB,EAAW,IAAI,IAGpB,KAAK,cAAgB9kB,EACrB,MAAM,KAAK,UACd,CACD,OAAQ,OACJ,GAAK8kB,EAAW,IAAI,IAGhB,KAAK,sBAAwB,SAC7BtkB,GAAgB,KAAK,mBAAmB,EACxC,OAAO,KAAK,qBAEZ,MAAK,SAGT,UAAW,CAAG,CAAAmR,CAAM,IAAK,KAAK,SAC1BzO,EAAAyO,EAAO,QAAP,MAAAzO,EAAA,KAAAyO,GAEC,KAAK,aACN,KAAK,QAAU,IAEnB,KAAK,QAAQ,cAAc4F,EAAU,gBAAiB,CAAE,UAAW,IAAI,CAAE,EAC5E,CACD,KAAK6O,EAAO,CACR,GAAI,CAACtB,EAAW,IAAI,EAChB,OAEJ,MAAMiC,EAAc,KAAK,SAAWX,EACpC,GAAI,KAAK,aAAe,CAAC,KAAK,cAAc,SAAU,CAClD,KAAK,YAAc,GACnB,MACH,CAID,GAHI,KAAK,UACL,KAAK,QAAU,IAEfW,EACA,SAAW,CAAG,CAAApV,CAAM,IAAK,KAAK,QACtBA,EAAO,MACPA,EAAO,KAAI,EAIvB,KAAK,QAAQ,cAAc4F,EAAU,cAAe,CAAE,UAAW,IAAI,CAAE,EACvE,KAAK,KAAKwP,GAAe,EAAK,CACjC,CACD,MAAM,SAAU,CACZ,GAAKjC,EAAW,IAAI,EAGpB,YAAK,KAAI,EACF,KAAK,OACf,CACD,MAAM,MAAMxI,EAAe,CACvB,GAAKwI,EAAW,IAAI,EAGpB,YAAK,sBAAwBxI,EAC7B,KAAK,eAAiBA,EACtB,KAAK,SAAW4I,GAAqB,KAAK,QAAS,KAAM,KAAK,sBAAuB,KAAK,aAAa,EACvG,KAAK,cAAgBA,GAAqB,KAAK,QAAS,KAAM,KAAK,QAAQ,EACpE,KAAK,SACf,CACD,MAAM,OAAQ,CACN,CAACJ,EAAW,IAAI,GAAK,KAAK,UAG9B,MAAM,KAAK,OACX,KAAK,QAAU,GACf,MAAM,IAAI,QAAQ1R,GAAW,CACzB,MAAM4T,EAAQ,SAAY,OACtB,KAAK,gBAAgB,eACjB,KAAK,cAAc,mBAAmB,aAAe,KAAK,uBAC1D,KAAK,sBAAsB,QAAQ,KAAK,cAAc,OAAO,EAEjE,SAAW,CAAG,CAAArV,CAAM,IAAK,KAAK,QAC1B,OAAMzO,EAAAyO,EAAO,QAAP,YAAAzO,EAAA,KAAAyO,IAEV,KAAK,QAAQ,cAAc4F,EAAU,iBAAkB,CAAE,UAAW,IAAI,CAAE,EAC1E,KAAK,KAAI,EACTnE,GAChB,EACY,KAAK,cAAgB,WAAW,IAAM,KAAK4T,IAAS,KAAK,MAAM,CAC3E,CAAS,EACJ,CACD,MAAO,OACH,GAAI,GAAClC,EAAW,IAAI,GAAK,CAAC,KAAK,SAG/B,CAAI,KAAK,gBACL,aAAa,KAAK,aAAa,EAC/B,OAAO,KAAK,eAEhB,KAAK,YAAc,GACnB,KAAK,QAAU,GACf,KAAK,gBAAgB,kBACrB,KAAK,MAAK,EACV,KAAK,UAAU,QACf,KAAK,OAAO,OACR,KAAK,cAAc,mBAAmB,aAAe,KAAK,uBAC1D,KAAK,sBAAsB,UAAU,KAAK,cAAc,OAAO,EAEnE,SAAW,CAAG,CAAAnT,CAAM,IAAK,KAAK,SAC1BzO,EAAAyO,EAAO,OAAP,MAAAzO,EAAA,KAAAyO,GAEJ,UAAWjL,KAAO,KAAK,QAAQ,KAAI,EAC/B,KAAK,QAAQ,OAAOA,CAAG,EAE3B,KAAK,eAAiB,KAAK,SAC3B,KAAK,QAAQ,cAAc6Q,EAAU,iBAAkB,CAAE,UAAW,IAAI,CAAE,EAC7E,CACD,qBAAsB,CAClB,KAAK,cAAc,WAAa,GAChC,MAAM0P,EAAc,KAAK,cAAc,cAAc,KAAK,OAAO,KAAK,MAAO,KAAK,OAAO,WAAY,KAAK,QAAQ,EAElH,OADA,KAAK,cAAc,SAAS,KAAK,aAAa,EAC1C,KAAK,sBAAwBA,EACtB,IAEX,KAAK,oBAAsBA,EACpB,GACV,CACL,CC3cO,MAAMC,EAAgB,CACzB,aAAc,CACV,KAAK,WAAa,IAAI,GACzB,CACD,iBAAiBpV,EAAMqV,EAAU,CAC7B,KAAK,oBAAoBrV,EAAMqV,CAAQ,EACvC,IAAIC,EAAM,KAAK,WAAW,IAAItV,CAAI,EAC7BsV,IACDA,EAAM,CAAA,EACN,KAAK,WAAW,IAAItV,EAAMsV,CAAG,GAEjCA,EAAI,KAAKD,CAAQ,CACpB,CACD,cAAcrV,EAAMuV,EAAM,CACtB,MAAMC,EAAY,KAAK,WAAW,IAAIxV,CAAI,EAC1CwV,GAAA,MAAAA,EAAW,QAAQrS,GAAWA,EAAQoS,CAAI,EAC7C,CACD,iBAAiBvV,EAAM,CACnB,MAAO,CAAC,CAAC,KAAK,WAAW,IAAIA,CAAI,CACpC,CACD,wBAAwBA,EAAM,CACrBA,EAID,KAAK,WAAW,OAAOA,CAAI,EAH3B,KAAK,WAAa,IAAI,GAK7B,CACD,oBAAoBA,EAAMqV,EAAU,CAChC,MAAMC,EAAM,KAAK,WAAW,IAAItV,CAAI,EACpC,GAAI,CAACsV,EACD,OAEJ,MAAMroB,EAASqoB,EAAI,OAAQznB,EAAMynB,EAAI,QAAQD,CAAQ,EACrD,GAAIxnB,EAD+D,EAE/D,OAEJ,MAAM4jB,EAAc,EAChBxkB,IAAWwkB,EACX,KAAK,WAAW,OAAOzR,CAAI,EAG3BsV,EAAI,OAAOznB,EAAK4jB,CAAW,CAElC,CACL,CCvCA,eAAegE,GAAwBjX,EAAWkX,EAAKC,EAAcrB,EAAQ,GAAO,CAChF,IAAIriB,EAAMyjB,EAAI,IAAIlX,CAAS,EAC3B,OAAI,CAACvM,GAAOqiB,KACRriB,EAAM,MAAM,QAAQ,IAAI,CAAC,GAAG0jB,EAAa,QAAQ,EAAE,IAAI7iB,GAAKA,EAAE0L,CAAS,CAAC,CAAC,EACzEkX,EAAI,IAAIlX,EAAWvM,CAAG,GAEnBA,CACX,CACA,eAAe2jB,GAAezkB,EAAM,CAChC,MAAM0kB,EAAM9e,GAAyB5F,EAAK,IAAKA,EAAK,KAAK,EACzD,GAAI,CAAC0kB,EACD,OAAO1kB,EAAK,SAEhB,MAAM2kB,EAAW,MAAM,MAAMD,CAAG,EAChC,OAAIC,EAAS,GACD,MAAMA,EAAS,QAE3B/jB,GAAW,EAAC,MAAM,GAAGjG,CAAW,IAAIgqB,EAAS,MAAM,+BAA+B,EAC3E3kB,EAAK,SAChB,CACA,MAAM4kB,GAAgB,OAAQC,GAAiB,QAASC,GAAY,SAAUC,GAA0BC,GAAiB,CACrH,IAAI9R,EACJ,GAAI8R,aAAwB,mBAAqBA,EAAa,QAAQ,YAAa,IAAKF,GACpF5R,EAAW8R,EACN9R,EAAS,QAAQnZ,EAAkB,IACpCmZ,EAAS,QAAQnZ,EAAkB,EAAI8qB,QAG1C,CACD,MAAMI,EAAmBD,EAAa,qBAAqBF,EAAS,EAChEG,EAAiB,QAEjB/R,EAAW+R,EAAiB,CAAU,EACtC/R,EAAS,QAAQnZ,EAAkB,EAAI8qB,KAGvC3R,EAAW,SAAS,cAAc4R,EAAS,EAC3C5R,EAAS,QAAQnZ,EAAkB,EAAI6qB,GACvCI,EAAa,YAAY9R,CAAQ,EAExC,CACD,MAAMgS,EAAc,OACpB,OAAKhS,EAAS,MAAM,QAChBA,EAAS,MAAM,MAAQgS,GAEtBhS,EAAS,MAAM,SAChBA,EAAS,MAAM,OAASgS,GAErBhS,CACX,EAAGiS,GAAkB,CAACvK,EAAI5e,IAAW,CACjC,IAAIgpB,EAAehpB,GAAU,SAAS,eAAe4e,CAAE,EACvD,OAAIoK,IAGJA,EAAe,SAAS,cAAc,KAAK,EAC3CA,EAAa,GAAKpK,EAClBoK,EAAa,QAAQjrB,EAAkB,EAAI6qB,GAC3C,SAAS,KAAK,OAAOI,CAAY,EAC1BA,EACX,EACO,MAAMI,EAAO,CAChB,aAAc,CACV,KAAK,SAAW,IAAI,IACpB,KAAK,UAAY,GACjB,KAAK,iBAAmB,IAAInB,GAC5B,KAAK,aAAe,GACpB,KAAK,QAAU,GACf,KAAK,cAAgB,CACjB,YAAa,IAAI,IACjB,OAAQ,IAAI,IACZ,SAAU,IAAI,GAC1B,EACQ,KAAK,YAAc,IAAI,IACvB,KAAK,OAAS,IAAI,IAClB,KAAK,SAAW,IAAI,IACpB,KAAK,QAAU,IAAI,IACnB,KAAK,cAAgB,IAAI,IACzB,KAAK,aAAe,IAAI,IACxB,KAAK,eAAiB,IAAI,GAC7B,CACD,IAAI,SAAU,CACV,MAAMnjB,EAAM,CAAA,EACZ,SAAW,CAAC/D,EAAMsoB,CAAM,IAAK,KAAK,SAC9BvkB,EAAI/D,CAAI,EAAIsoB,EAEhB,OAAOvkB,CACV,CACD,IAAI,OAAQ,CACR,OAAO,KAAK,SACf,CACD,IAAI,SAAU,CACV,MAAO,OACV,CACD,UAAUukB,EAAQ,CACd,MAAM5hB,EAAM4hB,EAAO,KAAOA,EAAO,MAAQ,UACzC,KAAK,SAAS,IAAI5hB,EAAK4hB,CAAM,EAC7B,KAAK,iBAAiB,cAAc/Q,EAAU,YAAa,CAAE,KAAM,CAAE,KAAM7Q,EAAK,OAAA4hB,CAAM,CAAI,CAAA,CAC7F,CACD,MAAM,UAAUpO,EAAQzI,EAAQ8W,EAAU,GAAM,CAC5C7jB,EAA0BwV,EAAQpI,GAAQ,CACjC,KAAK,gBAAgBA,CAAI,GAC1B,KAAK,cAAc,IAAIA,EAAML,CAAM,CAEnD,CAAS,EACD,MAAM,KAAK,QAAQ8W,CAAO,CAC7B,CACD,iBAAiBzW,EAAMqV,EAAU,CAC7B,KAAK,iBAAiB,iBAAiBrV,EAAMqV,CAAQ,CACxD,CACD,MAAM,cAAcnnB,EAAMwoB,EAAuBD,EAAU,GAAM,CAC7D,KAAK,cAAc,YAAY,IAAIvoB,EAAMwoB,CAAqB,EAC9D,MAAM,KAAK,QAAQD,CAAO,CAC7B,CACD,MAAM,SAASvoB,EAAMyoB,EAAkBF,EAAU,GAAM,CACnD,KAAK,cAAc,OAAO,IAAIvoB,EAAMyoB,CAAgB,EACpD,MAAM,KAAK,QAAQF,CAAO,CAC7B,CACD,MAAM,mBAAmBvoB,EAAM0oB,EAAoBH,EAAU,GAAM,CAC/D,KAAK,cAAc,SAAS,IAAIvoB,EAAM0oB,CAAkB,EACxD,MAAM,KAAK,QAAQH,CAAO,CAC7B,CACD,MAAM,iBAAiBvoB,EAAMimB,EAAWsC,EAAU,GAAM,CAC/C,KAAK,iBAAiBvoB,CAAI,GAC3B,KAAK,eAAe,IAAIA,EAAMimB,CAAS,EAE3C,MAAM,KAAK,QAAQsC,CAAO,CAC7B,CACD,MAAM,UAAU5W,EAAQ4W,EAAU,GAAM,CAC/B,KAAK,UAAU5W,EAAO,EAAE,GACzB,KAAK,QAAQ,KAAKA,CAAM,EAE5B,MAAM,KAAK,QAAQ4W,CAAO,CAC7B,CACD,MAAM,UAAU9L,EAAQ1T,EAAS2W,EAAW,GAAO6I,EAAU,GAAM,EAC3D7I,GAAY,CAAC,KAAK,UAAUjD,CAAM,IAClC,KAAK,QAAQ,IAAIA,EAAQ1T,CAAO,EAEpC,MAAM,KAAK,QAAQwf,CAAO,CAC7B,CACD,MAAM,SAAS9W,EAAQ8W,EAAU,GAAM,CACnC,UAAWI,KAAalX,EAAO,WACvB,KAAK,eAAekX,CAAS,GAGjC,KAAK,aAAa,IAAIA,EAAWlX,CAAM,EAE3C,MAAM,KAAK,QAAQ8W,CAAO,CAC7B,CACD,aAAajY,EAAW,CACpB,KAAK,SAAS,OAAOA,CAAS,EAC9B,KAAK,OAAO,OAAOA,CAAS,EAC5B,KAAK,YAAY,OAAOA,CAAS,CACpC,CACD,cAAcwB,EAAMuV,EAAM,CACtB,KAAK,iBAAiB,cAAcvV,EAAMuV,CAAI,CACjD,CACD,KAAM,CACF,OAAO,KAAK,KACf,CACD,QAAQ1hB,EAAO,CACX,OAAO,KAAK,KAAKA,CAAK,CACzB,CACD,MAAM,oBAAoB2K,EAAW,CACjC,MAAMvM,EAAM,IAAI,IAChB,UAAW4N,KAAU,KAAK,QAClBA,EAAO,YAAYrB,EAAU,aAAa,GAC1CvM,EAAI,IAAI4N,EAAO,GAAI,MAAMA,EAAO,UAAUrB,CAAS,CAAC,EAG5D,OAAOvM,CACV,CACD,gBAAgB+N,EAAM,CAClB,OAAO,KAAK,cAAc,IAAIA,CAAI,CACrC,CACD,MAAM,eAAexB,EAAW8V,EAAQ,GAAO,CAC3C,OAAOmB,GAAwBjX,EAAW,KAAK,YAAa,KAAK,cAAc,YAAa8V,CAAK,CACpG,CACD,MAAM,UAAU9V,EAAW8V,EAAQ,GAAO,CACtC,OAAOmB,GAAwBjX,EAAW,KAAK,OAAQ,KAAK,cAAc,OAAQ8V,CAAK,CAC1F,CACD,iBAAiBtU,EAAM,CACnB,OAAO,KAAK,eAAe,IAAIA,CAAI,CACtC,CACD,UAAUH,EAAQ,CACd,OAAO,KAAK,QAAQ,KAAK,GAAK,EAAE,KAAOA,CAAM,CAChD,CACD,UAAU8K,EAAQ,CACd,OAAO,KAAK,QAAQ,IAAIA,CAAM,CACjC,CACD,eAAe3K,EAAM,CACjB,OAAO,KAAK,aAAa,IAAIA,CAAI,CACpC,CACD,qBAAsB,CAClB,OAAO,KAAK,cAAc,MAC7B,CACD,oBAAqB,CACjB,OAAO,KAAK,aAAa,MAC5B,CACD,MAAM,YAAYxB,EAAW8V,EAAQ,GAAO,CACxC,OAAOmB,GAAwBjX,EAAW,KAAK,SAAU,KAAK,cAAc,SAAU8V,CAAK,CAC9F,CACD,MAAO,CACC,KAAK,eAGT,KAAK,aAAe,GACvB,CACD,KAAKzgB,EAAO,CACR,KAAM,CAAE,MAAAijB,CAAK,EAAK,KAAMhgB,EAAOggB,EAAMjjB,CAAK,EAC1C,GAAI,CAACiD,GAAQA,EAAK,UAAW,CAEzBggB,EAAM,OAAOjjB,EAAO,CAAW,EAC/B,MACH,CACD,OAAOiD,CACV,CACD,MAAM,KAAKigB,EAAQ,OACf,MAA4BhL,EAAKgL,EAAO,MAAM3lB,EAAA2lB,EAAO,UAAP,YAAA3lB,EAAgB,KAAM,cAAc,KAAK,MAAM9C,EAAS,EAAK,GAAY,CAAC,GAAI,CAAE,MAAAuF,EAAO,IAAAgiB,CAAG,EAAKkB,EAAQ9f,EAAU4e,EAAM,MAAMD,GAAe,CAAE,SAAUmB,EAAO,QAAS,IAAAlB,EAAK,MAAAhiB,CAAK,CAAE,EAAIkjB,EAAO,QACvOC,EAAiBjgB,GAAyBE,EAASpD,CAAK,EAAG,CAAE,MAAAijB,CAAO,EAAG,KAAMG,EAAWH,EAAM,UAAUzpB,GAAKA,EAAE,GAAG,cAAgB0e,CAAE,EAAGmL,EAAW,EAAGC,EAAU,IAAI9D,GAAU,KAAMtH,EAAIiL,CAAc,EAC3M,GAAIC,GAAYC,EAAU,CACtB,MAAME,EAAM,KAAK,KAAKH,CAAQ,EAAGI,EAAM,EAAG/J,EAAO,EAAGmE,EAAc2F,EAAMC,EAAM/J,EAC1E8J,GAAO,CAACA,EAAI,WACZA,EAAI,QAAQ,EAAK,EAErBN,EAAM,OAAOG,EAAUxF,EAAa0F,CAAO,CAC9C,MAEGL,EAAM,KAAKK,CAAO,EAEtB,MAAMhB,EAAeG,GAAgBvK,EAAIgL,EAAO,OAAO,EAAG1S,EAAW6R,GAAuBC,CAAY,EACxG,OAAAgB,EAAQ,OAAO,WAAW9S,CAAQ,EAClC,MAAM8S,EAAQ,QACPA,CACV,CACD,YAAYlgB,EAASuT,EAAe,CAChC,KAAK,QAAQ,QAAQ3K,GAAM,OAAI,OAAAzO,EAAAyO,EAAO,cAAP,YAAAzO,EAAA,KAAAyO,EAAqB5I,EAASuT,GAAc,CAC9E,CACD,qBAAqBhM,EAAWvH,KAAYuT,EAAe,CACvD,MAAMH,EAAW,KAAK,SAAS,IAAI7L,CAAS,EACvC6L,GAGLA,EAAS,QAAQ1J,UAAW,OAAAvP,EAAAuP,EAAQ,cAAR,YAAAvP,EAAA,KAAAuP,EAAsB1J,EAAS,GAAGuT,GAAc,CAC/E,CACD,MAAM,QAAQiM,EAAU,GAAM,CACrBA,GAGL,MAAM,QAAQ,IAAI,KAAK,MAAM,IAAI,GAAK,EAAE,QAAS,CAAA,CAAC,CACrD,CACD,oBAAoBzW,EAAMqV,EAAU,CAChC,KAAK,iBAAiB,oBAAoBrV,EAAMqV,CAAQ,CAC3D,CACD,kBAAkBjiB,EAAU,CACxB,KAAM,CAAE,MAAA0jB,CAAO,EAAG,KAClB,GAAI,CAACA,EAAM,OACP,MAAM,IAAI,MAAM,GAAGhrB,CAAW,+DAA+D,EAEjGgrB,EAAM,QAAQhgB,GAAQA,EAAK,gBAAgB1D,CAAQ,CAAC,CACvD,CACL,CCxQA,IAAIkkB,IACH,SAAUA,EAAY,CACnBA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,GACtC,GAAGA,KAAeA,GAAa,CAAE,EAAC,EAC3B,MAAMC,EAAgB,CACzB,aAAc,CACV,KAAK,IAAM,MACX,KAAK,aAAe,KACvB,CACD,YAAYje,EAAO,CACf,MAAM4D,EAAa5D,EAAM,MAAOiD,EAAWW,EAAW,KAAO5D,EAAM,MACnE,GAAIiD,EAAS,IAAM,QAAaA,EAAS,IAAM,QAAaA,EAAS,IAAM,OACvE,OAAOvC,GAASuC,CAAQ,CAE/B,CACD,iBAAiBjD,EAAO,CACpB,MAAM4D,EAAa5D,EAAM,MAAOiD,EAAWW,EAAW,KAAO5D,EAAM,MACnE,GAAIiD,EAAS,IAAM,QAAaA,EAAS,IAAM,OAC3C,OAAOvC,GAAS,CACZ,EAAGvK,EAAc8M,EAAS,CAAC,EAC3B,EAAG9M,EAAc8M,EAAS,CAAC,EAC3B,EAAG9M,EAAc8M,EAAS,CAAC,CAC3C,CAAa,CAER,CACD,YAAYhL,EAAO,CACf,GAAI,CAACA,EAAM,WAAW,KAAK,EACvB,OAEJ,MAAM2H,EAAQ,qEAAsEC,EAASD,EAAM,KAAK3H,CAAK,EAAGimB,EAAY,EAAGC,EAAe,EAAGre,EAAQ,GACzJ,OAAOD,EACDmC,GAAW,CACT,EAAGnC,EAAO,OAASqe,EAAYlmB,GAAW6H,EAAOme,GAAW,CAAC,CAAC,EAAIG,EAClE,EAAG,SAASte,EAAOme,GAAW,CAAC,EAAGle,CAAK,EACvC,EAAG,SAASD,EAAOme,GAAW,CAAC,EAAGle,CAAK,EACvC,EAAG,SAASD,EAAOme,GAAW,CAAC,EAAGle,CAAK,CACvD,CAAa,EACC,MACT,CACL,CC3CA,IAAId,IACH,SAAUA,EAAY,CACnBA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,IAClCA,EAAWA,EAAW,EAAO,CAAC,EAAI,GACtC,GAAGA,KAAeA,GAAa,CAAE,EAAC,EAC3B,MAAMof,EAAgB,CACzB,aAAc,CACV,KAAK,IAAM,MACX,KAAK,aAAe,KACvB,CACD,YAAYpe,EAAO,CACf,MAAM4D,EAAa5D,EAAM,MAAOqe,EAAWza,EAAW,KAAO5D,EAAM,MACnE,GAAIqe,EAAS,IAAM,OACf,OAAOA,CAEd,CACD,iBAAiBre,EAAO,CACpB,MAAM4D,EAAa5D,EAAM,MAAOqe,EAAWza,EAAW,KAAO5D,EAAM,MACnE,GAAIqe,EAAS,IAAM,OACf,MAAO,CACH,EAAGloB,EAAckoB,EAAS,CAAC,EAC3B,EAAGloB,EAAckoB,EAAS,CAAC,EAC3B,EAAGloB,EAAckoB,EAAS,CAAC,CAC3C,CAEK,CACD,YAAYpmB,EAAO,CACf,GAAI,CAACA,EAAM,WAAW,KAAK,YAAY,EACnC,OAEJ,MAAM2H,EAAQ,mEAAoEC,EAASD,EAAM,KAAK3H,CAAK,EAAG6H,EAAQ,GACtH,OAAOD,EACD,CACE,EAAGA,EAAO,OAHoH,EAG/F7H,GAAW6H,EAAOb,GAAW,CAAC,CAAC,EAHkF,EAIhJ,EAAG,SAASa,EAAOb,GAAW,CAAC,EAAGc,CAAK,EACvC,EAAG,SAASD,EAAOb,GAAW,CAAC,EAAGc,CAAK,EACvC,EAAG,SAASD,EAAOb,GAAW,CAAC,EAAGc,CAAK,CAC1C,EACC,MACT,CACL,CCvCO,SAASwe,IAAO,CACnB,MAAMC,EAAkB,IAAIH,GAAmBI,EAAkB,IAAIP,GACrE7e,GAAgBmf,CAAe,EAC/Bnf,GAAgBof,CAAe,EAC/B,MAAMrR,EAAS,IAAI8P,GACnB,OAAA9P,EAAO,KAAI,EACJA,CACX,CCVO,MAAMsR,EAAuB,CAChC,YAAYvZ,EAAW,CACnB,KAAK,KAAOgN,GAAe,SAC3B,KAAK,UAAYhN,CACpB,CACL,CCLO,MAAMwZ,EAAwB,CACjC,YAAYxZ,EAAW,CACnB,KAAK,KAAOgN,GAAe,UAC3B,KAAK,UAAYhN,CACpB,CACL,CCNO,IAAIyZ,GACV,SAAUA,EAAiB,CACxBA,EAAgB,UAAe,YAC/BA,EAAgB,iBAAsB,oBACtCA,EAAgB,OAAY,QAChC,GAAGA,IAAoBA,EAAkB,CAAA,EAAG,ECLrC,IAAIC,IACV,SAAUA,EAAc,CACrBA,EAAa,OAAY,SACzBA,EAAa,OAAY,SACzBA,EAAa,OAAY,QAC7B,GAAGA,KAAiBA,GAAe,CAAA,EAAG,ECL/B,IAAIC,IACV,SAAUA,EAAY,CACnBA,EAAW,WAAgB,eAC3BA,EAAW,WAAgB,eAC3BA,EAAW,YAAiB,gBAC5BA,EAAW,aAAkB,iBAC7BA,EAAW,WAAgB,eAC3BA,EAAW,YAAiB,gBAC5BA,EAAW,YAAiB,gBAC5BA,EAAW,WAAgB,eAC3BA,EAAW,WAAgB,eAC3BA,EAAW,YAAiB,gBAC5BA,EAAW,YAAiB,gBAC5BA,EAAW,aAAkB,iBAC7BA,EAAW,cAAmB,kBAC9BA,EAAW,YAAiB,gBAC5BA,EAAW,aAAkB,iBAC7BA,EAAW,aAAkB,iBAC7BA,EAAW,YAAiB,gBAC5BA,EAAW,YAAiB,gBAC5BA,EAAW,cAAmB,mBAC9BA,EAAW,cAAmB,mBAC9BA,EAAW,eAAoB,oBAC/BA,EAAW,gBAAqB,qBAChCA,EAAW,cAAmB,mBAC9BA,EAAW,eAAoB,oBAC/BA,EAAW,eAAoB,oBAC/BA,EAAW,cAAmB,mBAC9BA,EAAW,cAAmB,kBAClC,GAAGA,KAAeA,GAAa,CAAA,EAAG,EC3BlC,MAAMC,GAAcR,GAAI,EACnB7kB,GAAK,IACN,OAAO,YAAcqlB,ICDzB,MAAMC,GAAKvlB,GAAM,CACf,MAAMod,EAAIpd,EAAE,IAAM,cAClB,OAAOwlB,GAAC,UAAC,IAAM,CACb,IAAI9U,EACJ,OAAOrJ,GAAE,KAAK,CAAE,GAAI+V,EAAG,IAAKpd,EAAE,IAAK,QAASA,EAAE,OAAO,CAAE,EAAE,KAAMsH,GAAM,CACnE,IAAInB,EACJuK,EAAIpJ,GAAInB,EAAInG,EAAE,kBAAoB,MAAQmG,EAAE,KAAKnG,EAAGsH,CAAC,CACtD,CAAA,EAAG,IAAM,CACRoJ,GAAK,MAAQA,EAAE,SACrB,CACA,EAAK,CAAC0M,EAAGpd,EAAGA,EAAE,IAAKA,EAAE,OAAO,CAAC,EAAmBylB,GAAC,IAAC,MAAO,CAAE,GAAIrI,EAAG,UAAWpd,EAAE,SAAS,CAAE,CAC1F,ECVA,eAAexF,GAAEwF,EAAG,CAClB,MAAMA,EAAEod,EAAC,CACX,CCLA,MAAM1f,GAAO,GAAKgC,GAAc,EAAG0M,GAAW,EAAGsZ,GAAkB,GAAIC,GAAgB,EAAGC,GAAa,IAChG,SAASC,GAAcpiB,EAAU,CACpC,MAAMqiB,EAAkBriB,EAAS,gBAAiB,CAAE,GAAAzG,EAAI,GAAAC,CAAI,EAAGJ,EAAaipB,EAAiBriB,EAAS,QAAQ,EAAGsiB,EAAU,KAAK,IAAI/oB,CAAE,EAAGgpB,EAAU,KAAK,IAAI/oB,CAAE,EAAG,CAAE,YAAAgjB,CAAW,EAAKxc,EAAS,OAAQwiB,EAAYhG,EAAY,WAAYiG,EAAYjG,EAAY,SAChQ,GAAI,CAACgG,GAAa,CAACC,EACf,OAEJ,MAAMC,GAAgBF,GAAaF,GAAWE,IAAc,GAAOG,GAAgBF,GAAaF,GAAWE,IAAc,GACzH,IAAKC,GAAgBC,IAAiB,CAAC3iB,EAAS,UAC5CA,EAAS,UAAa,CAAC,CAACwiB,GAAaF,EAAUE,GAAe,CAAC,CAACC,GAAaF,EAAUE,EACnFD,IACAxiB,EAAS,SAAS,EAAIA,EAAS,SAAS,EAAI/F,GAAO+F,EAAS,SAAS,GAErEyiB,IACAziB,EAAS,SAAS,EAAIA,EAAS,SAAS,EAAI/F,GAAO+F,EAAS,SAAS,YAGnE,CAACwiB,GAAaF,EAAUE,KAAe,CAACC,GAAaF,EAAUE,IAAcziB,EAAS,UAC5FA,EAAS,UAAY,WAEhBA,EAAS,UAAW,CACzB,MAAMuI,EAAMvI,EAAS,SAAU4iB,EAAM5iB,EAAS,SAC1CwiB,IACEja,EAAI,EAAI8Z,EAAgB,GAAKO,EAAI,EAAI3mB,IAAiBsM,EAAI,EAAI8Z,EAAgB,GAAKO,EAAI,EAAI3mB,MAC7F2mB,EAAI,GAAK,CAAC7qB,KAEV0qB,IACEla,EAAI,EAAI8Z,EAAgB,GAAKO,EAAI,EAAI3mB,IAAiBsM,EAAI,EAAI8Z,EAAgB,GAAKO,EAAI,EAAI3mB,MAC7F2mB,EAAI,GAAK,CAAC7qB,IAEjB,CACL,CACO,SAAS8qB,GAAK7iB,EAAUwW,EAAasM,EAAWC,EAAUC,EAAWphB,EAAO,CAC/EqhB,GAAUjjB,EAAU4B,CAAK,EACzB,MAAMshB,EAAiBljB,EAAS,QAASmjB,EAAgBD,GAAA,MAAAA,EAAgB,QAAUA,EAAe,QAAU,CAACva,GAAWA,GACpHqa,GAAaF,IACb9iB,EAAS,SAAS,GAAMgjB,EAAYphB,EAAM,QAAWqgB,GAAkBa,IAEvEI,GAAA,MAAAA,EAAgB,QAAUJ,IAC1B9iB,EAAS,SAAS,GACbmjB,GAAiBD,EAAe,aAAethB,EAAM,SAAYqgB,GAAkBa,IAE5F,MAAMjhB,EAAQ7B,EAAS,UACvBA,EAAS,SAAS,OAAO6B,CAAK,EAC9B,MAAM9F,EAAWiE,EAAS,SAAS,KAAK8iB,CAAS,EAC7CI,GAAA,MAAAA,EAAgB,QAChBH,EAAW9mB,KACT,CAACinB,EAAe,SAAWnnB,EAAS,GAAKE,IAAeF,EAAS,GAAKgnB,GACnEG,EAAe,SAAWnnB,EAAS,GAAKE,IAAeF,EAAS,GAAK,CAACgnB,KAC3EhnB,EAAS,EAAIonB,EAAgBJ,EACzBD,IACA9iB,EAAS,SAAS,EAAIjE,EAAS,EAAI+mB,IAG3C,MAAMnX,EAAgB3L,EAAS,QAAQ,OAAQojB,GAAmBza,GAAW3I,EAAS,eAAiB2L,EAAc,aACrH5P,EAAS,OAAOqnB,CAAe,EAC/B,KAAM,CAAE,SAAAtpB,CAAU,EAAGkG,EACrBlG,EAAS,MAAMiC,CAAQ,EACnBya,EAAY,UACZ1c,EAAS,GAAK,KAAK,IAAIA,EAAS,EAAI,KAAK,IAAIA,EAAS,CAAC,CAAC,EACxDA,EAAS,GAAK,KAAK,IAAIA,EAAS,EAAI,KAAK,IAAIA,EAAS,CAAC,CAAC,EAEhE,CACO,SAASupB,GAAKrjB,EAAU8iB,EAAW,CACtC,MAAM7a,EAAYjI,EAAS,UAC3B,GAAI,CAACA,EAAS,KACV,OAEJ,MAAMsjB,EAAa,CACf,EAAGtjB,EAAS,KAAK,YAAc0hB,EAAgB,UAAY,KAAK,IAAM,KAAK,IAC3E,EAAG1hB,EAAS,KAAK,YAAc0hB,EAAgB,UAAY,KAAK,IAAM,KAAK,GACnF,EACI1hB,EAAS,SAAS,EAAIA,EAAS,KAAK,OAAO,EAAIA,EAAS,KAAK,OAASsjB,EAAW,EAAEtjB,EAAS,KAAK,KAAK,EACtGA,EAAS,SAAS,EAAIA,EAAS,KAAK,OAAO,EAAIA,EAAS,KAAK,OAASsjB,EAAW,EAAEtjB,EAAS,KAAK,KAAK,EACtGA,EAAS,KAAK,QAAUA,EAAS,KAAK,aACtC,MAAMujB,EAAgB,KAAK,IAAItb,EAAU,OAAO,KAAK,MAAOA,EAAU,OAAO,KAAK,MAAM,EAAGub,EAAcD,EAAgBtpB,GACrH+F,EAAS,KAAK,OAASwjB,GACvBxjB,EAAS,KAAK,OAASwjB,EACvBxjB,EAAS,KAAK,cAAgB,CAAC2I,IAE1B3I,EAAS,KAAK,OAASkiB,KAC5BliB,EAAS,KAAK,OAASkiB,GACvBliB,EAAS,KAAK,cAAgB,CAAC2I,IAEnC3I,EAAS,KAAK,OAAS8iB,EAAYX,IAAcxZ,GAAW3I,EAAS,KAAK,OAASujB,EACvF,CACO,SAASN,GAAUjjB,EAAU4B,EAAO,OACvC,MAAM+V,EAAmB3X,EAAS,QAASkY,EAAcP,EAAiB,KAAK,KAC/E,GAAI,CAD+FO,EAAY,OAE3G,OAEJ,GAAIlY,EAAS,cAAgBA,EAAS,UAAW,CAC7CA,EAAS,cAAgB4B,EAAM,MAC/B,MACH,CACD,MAAM6hB,GAAO5oB,EAAAmF,EAAS,gBAAT,YAAAnF,EAAwB,SAASmF,EAAU4B,GACpD6hB,GACAzjB,EAAS,SAAS,MAAMyjB,CAAI,EAE5BvL,EAAY,QACZlY,EAAS,SAAS,EAAIhI,EAAMgI,EAAS,SAAS,EAAG,CAAC2I,GAAUA,EAAQ,EACpE3I,EAAS,SAAS,EAAIhI,EAAMgI,EAAS,SAAS,EAAG,CAAC2I,GAAUA,EAAQ,GAExE3I,EAAS,cAAgBA,EAAS,SACtC,CACO,SAAS0jB,GAAwB1jB,EAAU,CAC9C,OAAOA,EAAS,KAAK,QAAUA,EAAS,KAAK,OAAS2I,EAC1D,CACO,SAASgb,GAAS3jB,EAAU,CAC/B,MAAMiI,EAAYjI,EAAS,UAAWU,EAAUV,EAAS,QAAS4jB,EAAcljB,EAAQ,KAAK,KAC7F,GAAI,CAACkjB,EAAY,OACb,OAEJ,MAAMC,EAAUD,EAAY,UAAY,CAAE,EAAG,GAAI,EAAG,EAAI,EAAEzB,EAAa,IAAM2B,EAAa,CACtF,EAAGD,EAAQ,EAAI1B,EAAala,EAAU,OAAO,KAAK,MAClD,EAAG4b,EAAQ,EAAI1B,EAAala,EAAU,OAAO,KAAK,MACrD,EAAEM,EAAMvI,EAAS,YAAa,EAAE+jB,EAAWtqB,EAAY8O,EAAKub,CAAU,EAAGE,EAAmB9qB,EAAc0qB,EAAY,YAAY,EACnI5jB,EAAS,OAAO,iBAAmBgkB,EAAmB/b,EAAU,OAAO,WACvE,MAAMhM,EAAc,EACpB+D,EAAS,KAAO,CACZ,OAAQ8jB,EACR,UAAW9jB,EAAS,SAAS,GAAK/D,EAAcylB,EAAgB,UAAYA,EAAgB,iBAC5F,MAAO1hB,EAAS,SAAS,MACzB,OAAQ+jB,EACR,aAAc/jB,EAAS,OAAO,gBACtC,CACA,CC5HA,MAAMikB,GAAa,EAAGC,GAAoB,EAAGC,GAAqB,EAC3D,MAAMC,EAAU,CACnB,KAAKpkB,EAAU,CACX,MAAMU,EAAUV,EAAS,QAASkjB,EAAiBxiB,EAAQ,KAAK,QAChEV,EAAS,QAAU,CACf,OAAQkjB,EAAe,OACvB,aAAchqB,EAAcgqB,EAAe,YAAY,EACvD,QAASA,EAAe,OACpC,EACQS,GAAS3jB,CAAQ,CACpB,CACD,UAAUA,EAAU,CAChB,MAAO,CAACA,EAAS,WAAaA,EAAS,QAAQ,KAAK,MACvD,CACD,KAAKA,EAAU4B,EAAO,SAClB,MAAMyiB,EAAkBrkB,EAAS,QAASwW,EAAc6N,EAAgB,KACxE,GAAI,CAAC7N,EAAY,OACb,OAEJ,MAAMvO,EAAYjI,EAAS,UAAWW,EAAUsH,EAAU,OAAO,YACjEpN,EAAAmF,EAAS,QAAO,YAAhBnF,EAAgB,UAAc3B,EAAcsd,EAAY,KAAK,EAAI7V,IACjE7F,EAAAkF,EAAS,QAAO,YAAhBlF,EAAgB,UAAc5B,EAAc8G,EAAS,QAAQ,KAAK,KAAK,EAAIW,GAC3E,MAAM2jB,EAAaZ,GAAwB1jB,CAAQ,EAAGukB,EAAYvkB,EAAS,OAAO,UAAYiI,EAAU,OAAO,aAAc+a,EAAYhjB,EAAS,OAAO,UAAWwkB,EAAUzrB,GAAYsrB,EAAgB,KAAK,KAAK,EAAI1jB,EAASwZ,EAAa3D,EAAY,KAAOxW,EAAS,YAAcwkB,EAAUN,GAAmBO,EAAc7iB,EAAM,QAAUuiB,GAAoBrB,EAAayB,EAAYpK,EAAamK,EAAaG,EAAeR,GAAYlB,EAAW/iB,EAAS,OAAO,UAAYiI,EAAU,OAAO,SACzeuO,EAAY,KAAK,OACjB6M,GAAKrjB,EAAU8iB,CAAS,EAGxBD,GAAK7iB,EAAUwW,EAAasM,EAAWC,EAAUC,EAAWphB,CAAK,EAErEwgB,GAAcpiB,CAAQ,CACzB,CACL,CChCO,eAAe0kB,GAAcxU,EAAQgQ,EAAU,GAAM,CACxD,MAAMhQ,EAAO,SAAS,OAAQ,IACnB,QAAQ,QAAQ,IAAIkU,EAAW,EACvClE,CAAO,CACd,CCLA,MAAM1oB,GAAS,EAAGC,GAAW,KAAK,GAAKD,GAAQmtB,GAAW,EAAGzuB,GAAS,CAAE,EAAG,EAAG,EAAG,CAAC,EAC3E,SAAS0uB,GAAWhqB,EAAM,CAC7B,KAAM,CAAE,QAAA2M,EAAS,SAAAvH,EAAU,OAAApC,CAAM,EAAKhD,EACjCoF,EAAS,cACVA,EAAS,YAAc,CAAE,IAAK2kB,GAAU,IAAKltB,KAEjD,MAAMshB,EAAc/Y,EAAS,YAC7BuH,EAAQ,IAAIrR,GAAO,EAAGA,GAAO,EAAG0H,EAAQmb,EAAY,IAAKA,EAAY,IAAK,EAAK,CACnF,CCNA,MAAM8L,GAAQ,GAAIC,GAAW,IAAKH,GAAW,EACtC,MAAMI,EAAa,CACtB,aAAc,CACV,KAAK,WAAa,CAAC,QAAQ,CAC9B,CACD,KAAKnqB,EAAM,CACPgqB,GAAWhqB,CAAI,CAClB,CACD,eAAgB,CACZ,OAAOiqB,EACV,CACD,aAAa5c,EAAWjI,EAAU,CAC9B,MAAM6V,EAAY7V,EAAS,UAAWvJ,GAAQof,GAAA,YAAAA,EAAW,QAAS,CAC9D,IAAKiP,GACL,IAAKH,EACjB,EACQ3kB,EAAS,YAAehK,GAASS,CAAK,EAKhC,CAAE,IAAKiD,GAASjD,EAAM,GAAG,EAAG,IAAKiD,GAASjD,EAAM,GAAG,GAJnD,CACE,IAAKkuB,GACL,IAAKjrB,GAASjD,CAAK,CACtB,CAER,CACL,CCxBO,eAAeuuB,GAAgB9U,EAAQgQ,EAAU,GAAM,CAC1D,MAAMhQ,EAAO,SAAS,IAAI6U,GAAgB7E,CAAO,CACrD,CCFO,MAAM+E,EAAa,CACtB,YAAYhd,EAAW,CACnB,KAAK,UAAYA,CACpB,CACD,KAAKjI,EAAU,CACX,MAAMgG,EAAW7C,GAAgBnD,EAAS,QAAQ,MAAOA,EAAS,GAAIA,EAAS,QAAQ,gBAAgB,EACnGgG,IACAhG,EAAS,MAAQuG,GAAuBP,EAAUhG,EAAS,QAAQ,MAAM,UAAW,KAAK,UAAU,OAAO,YAAY,EAE7H,CACD,UAAUA,EAAU,CAChB,KAAM,CAAE,EAAGklB,EAAY,EAAGC,EAAY,EAAGC,CAAU,EAAKplB,EAAS,QAAQ,MAAM,UAAW,CAAE,MAAA+C,CAAK,EAAK/C,EACtG,MAAQ,CAACA,EAAS,WACd,CAACA,EAAS,YACR+C,GAAA,YAAAA,EAAO,EAAE,SAAU,QAAamiB,EAAW,SACxCniB,GAAA,YAAAA,EAAO,EAAE,SAAU,QAAaoiB,EAAW,SAC3CpiB,GAAA,YAAAA,EAAO,EAAE,SAAU,QAAaqiB,EAAW,OACvD,CACD,OAAOplB,EAAU4B,EAAO,CACpBuF,GAAYnH,EAAS,MAAO4B,CAAK,CACpC,CACL,CCrBO,eAAeyjB,GAAiBnV,EAAQgQ,EAAU,GAAM,CAC3D,MAAMhQ,EAAO,mBAAmB,QAASjI,GAC9B,QAAQ,QAAQ,IAAIgd,GAAahd,CAAS,CAAC,EACnDiY,CAAO,CACd,CCJO,MAAMoF,EAAe,CACxB,YAAYrd,EAAW,CACnB,KAAK,UAAYA,CACpB,CACD,KAAKjI,EAAU,CACX,MAAMulB,EAAiBvlB,EAAS,QAAQ,QAASW,EAAU,EAC3DX,EAAS,QAAUS,GAAkC8kB,EAAgB5kB,CAAO,EAC5E,MAAM6kB,EAAmBD,EAAe,UACpCC,EAAiB,SACjBxlB,EAAS,QAAQ,SACZ9G,EAAcssB,EAAiB,KAAK,EAAIhwB,GAAsB,KAAK,UAAU,OAAO,aACpFgwB,EAAiB,OAClBxlB,EAAS,QAAQ,UAAYjI,KAGxC,CACD,UAAUiI,EAAU,CAEhB,MAAQ,CAACA,EAAS,WACd,CAACA,EAAS,UACV,CAAC,CAACA,EAAS,SACXA,EAAS,QAAQ,UACfA,EAAS,QAAQ,UAAY,IAAS,IAClCA,EAAS,QAAQ,UAAY,GAAQ,IAClCA,EAAS,QAAQ,OAAS,IAASA,EAAS,QAAQ,UAAY,GAChF,CACD,MAAMA,EAAU,CACRA,EAAS,UACTA,EAAS,QAAQ,KAAO,EACxBA,EAAS,QAAQ,MAAQ,EAEhC,CACD,OAAOA,EAAU4B,EAAO,CAChB,CAAC,KAAK,UAAU5B,CAAQ,GAAK,CAACA,EAAS,SAG3C0B,GAAgB1B,EAAUA,EAAS,QAAS,GAAMA,EAAS,QAAQ,QAAQ,UAAU,QAAS4B,CAAK,CACtG,CACL,CCtCO,eAAe6jB,GAAmBvV,EAAQgQ,EAAU,GAAM,CAC7D,MAAMhQ,EAAO,mBAAmB,UAAWjI,GAChC,QAAQ,QAAQ,IAAIqd,GAAerd,CAAS,CAAC,EACrDiY,CAAO,CACd,CCJA,MAAMjkB,GAAc,EAAGypB,GAAY,EAC5B,SAASC,GAAiB/qB,EAAM,CACnC,GAAKA,EAAK,UAAY2X,EAAQ,QAAU3X,EAAK,UAAY2X,EAAQ,OAC5D3X,EAAK,YAAcQ,EAAiB,MAAQR,EAAK,YAAcQ,EAAiB,MACjF,OAEAR,EAAK,OAAO,MAAQ8qB,IAAa9qB,EAAK,YAAcQ,EAAiB,KACrER,EAAK,SAAS,SAAS,EAAIA,EAAK,KAAOA,EAAK,OAAO,EAE9CA,EAAK,OAAO,KAAOA,EAAK,WAAW,OAASA,EAAK,YAAcQ,EAAiB,QACrFR,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,MAAQA,EAAK,KAAOA,EAAK,OAAO,GAE/E,MAAMmB,EAAWnB,EAAK,SAAS,SAAS,EACxC,IAAIgrB,EAAU,GACd,GAAKhrB,EAAK,YAAcQ,EAAiB,OACrCR,EAAK,OAAO,OAASA,EAAK,WAAW,OACrCmB,EAAWE,IACVrB,EAAK,YAAcQ,EAAiB,MAAQR,EAAK,OAAO,MAAQ8qB,IAAa3pB,EAAWE,GAAc,CACvG,MAAM4pB,EAAc3sB,EAAc0B,EAAK,SAAS,QAAQ,OAAO,WAAW,KAAK,EAC/EA,EAAK,SAAS,SAAS,GAAK,CAACirB,EAC7BD,EAAU,EACb,CACD,GAAI,CAACA,EACD,OAEJ,MAAME,EAASlrB,EAAK,OAAO,EAAIA,EAAK,KAChCA,EAAK,OAAO,OAASA,EAAK,WAAW,OAASA,EAAK,YAAcQ,EAAiB,MAClFR,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,MAAQkrB,EAE9ClrB,EAAK,OAAO,MAAQ8qB,IAAa9qB,EAAK,YAAcQ,EAAiB,OAC1ER,EAAK,SAAS,SAAS,EAAIkrB,GAE3BlrB,EAAK,UAAY2X,EAAQ,OACzB3X,EAAK,SAAS,SAEtB,CACO,SAASmrB,GAAenrB,EAAM,CACjC,GAAKA,EAAK,UAAY2X,EAAQ,QAAU3X,EAAK,UAAY2X,EAAQ,OAC5D3X,EAAK,YAAcQ,EAAiB,QAAUR,EAAK,YAAcQ,EAAiB,IACnF,OAEAR,EAAK,OAAO,OAAS8qB,IAAa9qB,EAAK,YAAcQ,EAAiB,IACtER,EAAK,SAAS,SAAS,EAAIA,EAAK,KAAOA,EAAK,OAAO,EAE9CA,EAAK,OAAO,IAAMA,EAAK,WAAW,QAAUA,EAAK,YAAcQ,EAAiB,SACrFR,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,OAASA,EAAK,KAAOA,EAAK,OAAO,GAEhF,MAAMmB,EAAWnB,EAAK,SAAS,SAAS,EACxC,IAAIgrB,EAAU,GACd,GAAKhrB,EAAK,YAAcQ,EAAiB,QACrCR,EAAK,OAAO,QAAUA,EAAK,WAAW,QACtCmB,EAAWE,IACVrB,EAAK,YAAcQ,EAAiB,KAAOR,EAAK,OAAO,KAAO8qB,IAAa3pB,EAAWE,GAAc,CACrG,MAAM4pB,EAAc3sB,EAAc0B,EAAK,SAAS,QAAQ,OAAO,SAAS,KAAK,EAC7EA,EAAK,SAAS,SAAS,GAAK,CAACirB,EAC7BD,EAAU,EACb,CACD,GAAI,CAACA,EACD,OAEJ,MAAME,EAASlrB,EAAK,OAAO,EAAIA,EAAK,KAChCA,EAAK,OAAO,QAAUA,EAAK,WAAW,QAAUA,EAAK,YAAcQ,EAAiB,OACpFR,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,OAASkrB,EAE/ClrB,EAAK,OAAO,KAAO8qB,IAAa9qB,EAAK,YAAcQ,EAAiB,MACzER,EAAK,SAAS,SAAS,EAAIkrB,GAE3BlrB,EAAK,UAAY2X,EAAQ,OACzB3X,EAAK,SAAS,SAEtB,CCrEO,MAAMorB,EAAc,CACvB,YAAY/d,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CACTsK,EAAQ,OACRA,EAAQ,KACpB,CACK,CACD,OAAOvS,EAAUnG,EAAW+H,EAAO0U,EAAS,CACxC,GAAI,CAAC,KAAK,MAAM,SAASA,CAAO,EAC5B,OAEJ,MAAMrO,EAAY,KAAK,UACvB,IAAImG,EAAU,GACd,SAAW,CAAG,CAAA9E,CAAM,IAAKrB,EAAU,QAI/B,GAHIqB,EAAO,iBAAmB,SAC1B8E,EAAU9E,EAAO,eAAetJ,EAAU4B,EAAO/H,CAAS,GAE1DuU,EACA,MAGR,GAAIA,EACA,OAEJ,MAAM7F,EAAMvI,EAAS,YAAa,EAAErC,EAASqC,EAAS,OAAQtC,EAAOsC,EAAS,UAAS,EAAIjC,EAASD,GAAgByK,EAAK7K,CAAI,EAAGwD,EAAa+G,EAAU,OAAO,KAC9J0d,GAAiB,CAAE,SAAA3lB,EAAU,QAAAsW,EAAS,UAAAzc,EAAW,OAAAkE,EAAQ,WAAAmD,EAAY,OAAAvD,EAAQ,KAAAD,CAAI,CAAE,EACnFqoB,GAAe,CAAE,SAAA/lB,EAAU,QAAAsW,EAAS,UAAAzc,EAAW,OAAAkE,EAAQ,WAAAmD,EAAY,OAAAvD,EAAQ,KAAAD,CAAI,CAAE,CACpF,CACL,CC9BA,MAAMzB,GAAc,EACb,MAAMgqB,EAAe,CACxB,YAAYhe,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CAACsK,EAAQ,OAAO,CAChC,CACD,OAAOvS,EAAUnG,EAAWqsB,EAAQ5P,EAAS,CACzC,GAAI,CAAC,KAAK,MAAM,SAASA,CAAO,EAC5B,OAEJ,MAAMrO,EAAY,KAAK,UACvB,OAAQjI,EAAS,QAAO,CACpB,KAAKmV,GAAgB,OACrB,KAAKA,GAAgB,QACjB,GAAI3X,GAAcwC,EAAS,SAAUiI,EAAU,OAAO,KAAM/Q,EAAO,OAAQ8I,EAAS,UAAW,EAAEnG,CAAS,EACtG,OAEJ,MACJ,KAAKsb,GAAgB,OAAQ,CACzB,KAAM,CAAE,GAAA5b,EAAI,GAAAC,CAAE,EAAKJ,EAAa4G,EAAS,SAAUA,EAAS,UAAU,EAAG,CAAE,EAAGmmB,EAAI,EAAGC,CAAI,EAAGpmB,EAAS,SACrG,GAAKmmB,EAAKlqB,IAAe1C,EAAKyG,EAAS,WAAW,QAC7ComB,EAAKnqB,IAAezC,EAAKwG,EAAS,WAAW,QAC7CmmB,GAAMlqB,IAAe1C,EAAK,CAACyG,EAAS,WAAW,QAC/ComB,GAAMnqB,IAAezC,EAAK,CAACwG,EAAS,WAAW,OAChD,OAEJ,KACH,CACJ,CACDiI,EAAU,UAAU,OAAOjI,EAAU,OAAW,EAAI,CACvD,CACL,CC/BA,MAAM/D,GAAc,EACb,MAAMoqB,EAAY,CACrB,YAAYpe,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CAACsK,EAAQ,IAAI,CAC7B,CACD,OAAOvS,EAAUnG,EAAW+H,EAAO0U,EAAS,CAIxC,GAHI,CAAC,KAAK,MAAM,SAASA,CAAO,KAG3BtW,EAAS,QAAQ,KAAK,SAAS,aAC/BnG,IAAcuB,EAAiB,MAAQvB,IAAcuB,EAAiB,UACtE4E,EAAS,QAAQ,KAAK,SAAS,WAC3BnG,IAAcuB,EAAiB,KAAOvB,IAAcuB,EAAiB,UAC1E,OAEJ,MAAM8nB,EAAiBljB,EAAS,QAAQ,KAAK,QAASiI,EAAY,KAAK,UAAW/G,EAAa+G,EAAU,OAAO,KAAMqe,EAAUtmB,EAAS,YACzI,GAAKkjB,EAAe,OAWf,CACD,MAAMppB,EAAWkG,EAAS,UACrB,CAACkjB,EAAe,SACjBppB,EAAS,EAAIoH,EAAW,OAASolB,GACjCzsB,IAAcuB,EAAiB,QAC9B8nB,EAAe,SAAWppB,EAAS,EAAI,CAACwsB,GAAWzsB,IAAcuB,EAAiB,MACnF6M,EAAU,UAAU,OAAOjI,CAAQ,CAE1C,KAnB2B,CACxB,GAAKA,EAAS,SAAS,EAAI/D,IAAe+D,EAAS,SAAS,GAAKkB,EAAW,OAASolB,GAChFtmB,EAAS,SAAS,EAAI/D,IAAe+D,EAAS,SAAS,GAAK,CAACsmB,GAC7DtmB,EAAS,SAAS,EAAI/D,IAAe+D,EAAS,SAAS,GAAKkB,EAAW,MAAQolB,GAC/EtmB,EAAS,SAAS,EAAI/D,IAAe+D,EAAS,SAAS,GAAK,CAACsmB,EAC9D,OAEC9oB,GAAcwC,EAAS,SAAUiI,EAAU,OAAO,KAAM/Q,EAAO,OAAQovB,EAASzsB,CAAS,GAC1FoO,EAAU,UAAU,OAAOjI,CAAQ,CAE1C,CAUJ,CACL,CCtCA,MAAM/D,GAAc,EAAGsqB,GAAc,EAC9B,MAAMC,EAAW,CACpB,YAAYve,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CAACsK,EAAQ,GAAG,CAC5B,CACD,OAAOvS,EAAUnG,EAAW+H,EAAO0U,EAAS,CACxC,GAAI,CAAC,KAAK,MAAM,SAASA,CAAO,EAC5B,OAEJ,MAAMrO,EAAY,KAAK,UACvB,OAAQjI,EAAS,QAAO,CACpB,KAAKmV,GAAgB,OAAQ,CACzB,KAAM,CAAE,EAAGgR,EAAI,EAAGC,CAAI,EAAGpmB,EAAS,SAC5BymB,EAAUvvB,EAAO,OACvBuvB,EAAQ,OAASzmB,EAAS,WAAW,OACrCymB,EAAQ,MAAQzmB,EAAS,SAAS,MAAQ,KAAK,GAC/CymB,EAAQ,MAAMvvB,EAAO,OAAO8I,EAAS,UAAU,CAAC,EAChD,KAAM,CAAE,GAAAzG,EAAI,GAAAC,CAAI,EAAGJ,EAAa4G,EAAS,SAAUymB,CAAO,EAC1D,GAAKN,GAAMlqB,IAAe1C,GAAMgtB,IAC3BH,GAAMnqB,IAAezC,GAAM+sB,IAC3BJ,GAAMlqB,IAAe1C,GAAMgtB,IAC3BH,GAAMnqB,IAAezC,GAAM+sB,GAC5B,OAEJvmB,EAAS,SAAS,EAAI,KAAK,MAAMnH,EAAc,CAC3C,IAAK,EACL,IAAKoP,EAAU,OAAO,KAAK,KAC9B,CAAA,CAAC,EACFjI,EAAS,SAAS,EAAI,KAAK,MAAMnH,EAAc,CAC3C,IAAK,EACL,IAAKoP,EAAU,OAAO,KAAK,MAC9B,CAAA,CAAC,EACF,KAAM,CAAE,GAAIye,EAAO,GAAIC,CAAK,EAAKvtB,EAAa4G,EAAS,SAAUA,EAAS,UAAU,EACpFA,EAAS,UAAY,KAAK,MAAM,CAAC2mB,EAAO,CAACD,CAAK,EAC9C1mB,EAAS,SAAS,MAAQA,EAAS,UACnC,KACH,CACD,QAAS,CACL,GAAIxC,GAAcwC,EAAS,SAAUiI,EAAU,OAAO,KAAM/Q,EAAO,OAAQ8I,EAAS,UAAW,EAAEnG,CAAS,EACtG,OAEJ,OAAQmG,EAAS,QAAO,CACpB,KAAKmV,GAAgB,QAAS,CAC1BnV,EAAS,SAAS,EACd,KAAK,MAAMnH,EAAc,CACrB,IAAK,CAACmH,EAAS,WAAW,OAC1B,IAAKA,EAAS,WAAW,MAC5B,CAAA,CAAC,EAAIA,EAAS,WAAW,EAC9BA,EAAS,SAAS,EACd,KAAK,MAAMnH,EAAc,CACrB,IAAK,CAACmH,EAAS,WAAW,OAC1B,IAAKA,EAAS,WAAW,MAC5B,CAAA,CAAC,EAAIA,EAAS,WAAW,EAC9B,KAAM,CAAE,GAAAzG,EAAI,GAAAC,GAAOJ,EAAa4G,EAAS,SAAUA,EAAS,UAAU,EAClEA,EAAS,WAAW,SACpBA,EAAS,UAAY,KAAK,MAAMxG,EAAID,CAAE,EACtCyG,EAAS,SAAS,MAAQA,EAAS,WAEvC,KACH,CACD,KAAKmV,GAAgB,OAAQ,CACzB,MAAMyR,EAAO5mB,EAAS,QAAQ,KAAK,KAAMkB,EAAa+G,EAAU,OAAO,KAAM4e,EAAS,CAClF,OAAQ3lB,EAAW,OAASlB,EAAS,YAAcA,EAAS,OAAO,EACnE,KAAM,CAACA,EAAS,UAAW,EAAGA,EAAS,OAAO,EAC9C,MAAOkB,EAAW,MAAQlB,EAAS,YAAcA,EAAS,OAAO,EACjE,IAAK,CAACA,EAAS,UAAW,EAAGA,EAAS,OAAO,CACzE,EAA2B8mB,EAAY9mB,EAAS,YAAa+mB,EAAajpB,GAAgBkC,EAAS,SAAU8mB,CAAS,EAC1FjtB,IAAcuB,EAAiB,OAC/B2rB,EAAW,KAAO7lB,EAAW,MAAQlB,EAAS,OAAO,GACrDA,EAAS,SAAS,EAAI6mB,EAAO,KAC7B7mB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,EAC1C4mB,IACD5mB,EAAS,SAAS,EAAIjI,EAAS,EAAKmJ,EAAW,OAC/ClB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,IAG9CnG,IAAcuB,EAAiB,MAAQ2rB,EAAW,MAAQ,CAAC/mB,EAAS,OAAO,IAChFA,EAAS,SAAS,EAAI6mB,EAAO,MAC7B7mB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,EAC1C4mB,IACD5mB,EAAS,SAAS,EAAIjI,EAAS,EAAKmJ,EAAW,OAC/ClB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,IAGnDnG,IAAcuB,EAAiB,QAC/B2rB,EAAW,IAAM7lB,EAAW,OAASlB,EAAS,OAAO,GAChD4mB,IACD5mB,EAAS,SAAS,EAAIjI,EAAS,EAAKmJ,EAAW,MAC/ClB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAEnDA,EAAS,SAAS,EAAI6mB,EAAO,IAC7B7mB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAE1CnG,IAAcuB,EAAiB,KAAO2rB,EAAW,OAAS,CAAC/mB,EAAS,OAAO,IAC3E4mB,IACD5mB,EAAS,SAAS,EAAIjI,EAAS,EAAKmJ,EAAW,MAC/ClB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAEnDA,EAAS,SAAS,EAAI6mB,EAAO,OAC7B7mB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAEnD,KACH,CACJ,CACD,KACH,CACJ,CACJ,CACL,CCzGA,MAAMgnB,GAAe,CAACrU,EAAU2D,IACpB3D,EAAS,UAAY2D,GACzB3D,EAAS,SAAW2D,GACpB3D,EAAS,OAAS2D,GAClB3D,EAAS,QAAU2D,GACnB3D,EAAS,MAAQ2D,EAElB,MAAM2Q,EAAmB,CAC5B,YAAYhf,EAAW,CACnB,KAAK,eAAiB,CAACjI,EAAU4B,EAAO0U,EAASzc,IAAc,CAC3D,UAAWuQ,KAAW,KAAK,SACvBA,EAAQ,OAAOpK,EAAUnG,EAAW+H,EAAO0U,CAAO,CAElE,EACQ,KAAK,UAAYrO,EACjB,KAAK,SAAW,EACnB,CACD,KAAKjI,EAAU,CACX,KAAK,SAAW,GAChB,MAAM2S,EAAW3S,EAAS,QAAQ,KAAK,SACnCgnB,GAAarU,EAAUJ,EAAQ,MAAM,EACrC,KAAK,SAAS,KAAK,IAAIyT,GAAc,KAAK,SAAS,CAAC,EAE/CgB,GAAarU,EAAUJ,EAAQ,GAAG,EACvC,KAAK,SAAS,KAAK,IAAIiU,GAAW,KAAK,SAAS,CAAC,EAE5CQ,GAAarU,EAAUJ,EAAQ,OAAO,EAC3C,KAAK,SAAS,KAAK,IAAI0T,GAAe,KAAK,SAAS,CAAC,EAEhDe,GAAarU,EAAUJ,EAAQ,IAAI,GACxC,KAAK,SAAS,KAAK,IAAI8T,GAAY,KAAK,SAAS,CAAC,CAEzD,CACD,UAAUrmB,EAAU,CAChB,MAAO,CAACA,EAAS,WAAa,CAACA,EAAS,QAC3C,CACD,OAAOA,EAAU4B,EAAO,CACpB,MAAM+Q,EAAW3S,EAAS,QAAQ,KAAK,SACvC,KAAK,eAAeA,EAAU4B,EAAO+Q,EAAS,QAAUA,EAAS,QAASvX,EAAiB,MAAM,EACjG,KAAK,eAAe4E,EAAU4B,EAAO+Q,EAAS,MAAQA,EAAS,QAASvX,EAAiB,IAAI,EAC7F,KAAK,eAAe4E,EAAU4B,EAAO+Q,EAAS,OAASA,EAAS,QAASvX,EAAiB,KAAK,EAC/F,KAAK,eAAe4E,EAAU4B,EAAO+Q,EAAS,KAAOA,EAAS,QAASvX,EAAiB,GAAG,CAC9F,CACL,CC/CO,eAAe8rB,GAAoBhX,EAAQgQ,EAAU,GAAM,CAC9D,MAAMhQ,EAAO,mBAAmB,WAAYjI,GACjC,QAAQ,QAAQ,IAAIgf,GAAmBhf,CAAS,CAAC,EACzDiY,CAAO,CACd,CCJA,MAAMiH,GAAW,EACV,MAAMC,EAAY,CACrB,KAAKpnB,EAAU,CACX,MAAMiI,EAAYjI,EAAS,UAAWqnB,EAAcrnB,EAAS,QAAQ,KAAMsnB,EAAgBD,EAAY,UACnGC,EAAc,SACdtnB,EAAS,KAAK,UACRA,EAAS,OAAO,oBAAsBiI,EAAU,OAAO,oBAAsBzS,GAC3EyS,EAAU,OAAO,aACpBqf,EAAc,OACftnB,EAAS,KAAK,UAAYjI,KAGrC,CACD,UAAUiI,EAAU,CAChB,MAAQ,CAACA,EAAS,WACd,CAACA,EAAS,UACVA,EAAS,KAAK,UACZA,EAAS,KAAK,UAAYmnB,KAAaA,KACnCnnB,EAAS,KAAK,UAAYmnB,IAAYA,KACnCnnB,EAAS,KAAK,OAASmnB,KAAannB,EAAS,KAAK,UAAYmnB,IAC9E,CACD,MAAMnnB,EAAU,CACZA,EAAS,KAAK,MAAQmnB,EACzB,CACD,OAAOnnB,EAAU4B,EAAO,CACf,KAAK,UAAU5B,CAAQ,GAG5B0B,GAAgB1B,EAAUA,EAAS,KAAM,GAAMA,EAAS,QAAQ,KAAK,UAAU,QAAS4B,CAAK,CAChG,CACL,CC9BO,eAAe2lB,GAAgBrX,EAAQgQ,EAAU,GAAM,CAC1D,MAAMhQ,EAAO,mBAAmB,OAAQ,IAC7B,QAAQ,QAAQ,IAAIkX,EAAa,EACzClH,CAAO,CACd,CCCO,eAAesH,GAAUtX,EAAQgQ,EAAU,GAAM,CACpD,MAAMwE,GAAcxU,EAAQ,EAAK,EACjC,MAAM8U,GAAgB9U,EAAQ,EAAK,EACnC,MAAMmV,GAAiBnV,EAAQ,EAAK,EACpC,MAAMuV,GAAmBvV,EAAQ,EAAK,EACtC,MAAMgX,GAAoBhX,EAAQ,EAAK,EACvC,MAAMqX,GAAgBrX,EAAQ,EAAK,EACnC,MAAMA,EAAO,QAAQgQ,CAAO,CAChC,CCbO,eAAeuH,IAAuB,CACzC/vB,GAAUkqB,GAAW,WAAY9pB,GAASA,GAAS,CAAC,EACpDJ,GAAUkqB,GAAW,YAAa9pB,GAAS,GAAK,EAAIA,IAAU,CAAC,EAC/DJ,GAAUkqB,GAAW,cAAe9pB,GAAUA,EAAQ,GAAM,EAAIA,GAAS,EAAI,GAAK,GAAKA,EAAQ,IAAM,EAAI,CAAE,EAC3G,MAAM,QAAQ,SAClB,CCNO,SAAS4vB,GAAU9sB,EAAM,CAC5B,KAAM,CAAE,QAAA2M,EAAS,SAAAvH,EAAU,OAAApC,EAAQ,QAAAuH,GAAYvK,EAAM+sB,EAAY3nB,EAAS,UAAWxI,EAAS,EAAGue,EAAWnY,EAASpG,EAAQowB,EAAgBrgB,EAAQ,YAChJogB,IAGLpgB,EAAQ,YAAcpC,EACtBoC,EAAQ,UAAUogB,EAAW,CAAC/pB,EAAQ,CAACA,EAAQmY,EAAUA,CAAQ,EACjExO,EAAQ,YAAcqgB,EAC1B,CCNA,MAAMC,GAAc,+FACb,MAAMC,EAAY,CACrB,aAAc,CACV,KAAK,WAAa,CAAC,OAAO,EAC1B,KAAK,gBAAkB,IAAI,GAC9B,CACD,SAAU,CACN,SAAW,CAACzpB,EAAKspB,CAAS,IAAK,KAAK,gBAC5BA,aAAqB,cACrBA,GAAA,MAAAA,EAAW,QACX,KAAK,gBAAgB,OAAOtpB,CAAG,EAG1C,CACD,KAAKzD,EAAM,CACP8sB,GAAU9sB,CAAI,CACjB,CACD,MAAM,KAAKqN,EAAW,CAClB,MAAMvH,EAAUuH,EAAU,cAAe,CAAE,WAAA8f,CAAU,EAAK,KAC1D,GAAI,CAACA,EAAW,KAAKxrB,GAAKQ,EAAUR,EAAGmE,EAAQ,UAAU,MAAM,IAAI,CAAC,EAChE,OAEJ,MAAMsnB,EAAW,CAAC/qB,GAAS4qB,EAAW,CAAC,EAAGjS,EAAemS,EACpD,IAAIxrB,GAAKmE,EAAQ,UAAU,MAAM,QAAQnE,CAAC,CAAC,EAC3C,KAAKA,GAAK,CAAC,CAACA,CAAC,EACdqZ,GACAvZ,EAA0BuZ,EAActC,GAAS,CACzCA,EAAM,MACN0U,EAAS,KAAK/qB,GAASqW,EAAM,IAAI,CAAC,CAEtD,CAAa,EAEL,MAAM,QAAQ,IAAI0U,CAAQ,CAC7B,CACD,gBAAgBhoB,EAAU,CACtB,OAAOA,EAAS,SACnB,CACD,aAAaiI,EAAWjI,EAAU,CAC9B,MAAkB6V,EAAY7V,EAAS,UACvC,GAAI,EAAC6V,GAAA,MAAAA,EAAW,OACZ,OAEJ,MAAMoS,EAAQznB,GAAyBqV,EAAU,MAAO7V,EAAS,eAAe,EAAG9C,EAAO2Y,EAAU,MAAQgS,GAC5G,GAAI,CAACI,EACD,OAEJ,MAAM5pB,EAAM,GAAG4pB,CAAK,IAAI/qB,CAAI,GAAIgrB,EAAe,KAAK,gBAAgB,IAAI7pB,CAAG,EAC3E,GAAI6pB,EAAc,CACdloB,EAAS,UAAYkoB,EACrB,MACH,CACD,MAAMhnB,EAAanI,GAAYiH,EAAS,KAAK,KAAK,EAAI,EACtD,IAAI2nB,EACJ,MAAMnD,EAAUzrB,GAAYiH,EAAS,KAAK,KAAK,EAC/C,GAAI,OAAO,gBAAoB,IAAa,CACxC,MAAM+J,EAAS,IAAI,gBAAgB7I,EAAYA,CAAU,EAAGqG,EAAUwC,EAAO,WAAW,IAAI,EAC5F,GAAI,CAACxC,EACD,OAEJA,EAAQ,KAAO,OAAOid,EAAU,CAAM,MAAMtnB,CAAI,GAChDqK,EAAQ,aAAe,SACvBA,EAAQ,UAAY,SACpBA,EAAQ,SAAS0gB,EAAOzD,EAASA,CAAO,EACxCmD,EAAY5d,EAAO,uBACtB,KACI,CACD,MAAMA,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQ7I,EACf6I,EAAO,OAAS7I,EAChB,MAAMqG,EAAUwC,EAAO,WAAW,IAAI,EACtC,GAAI,CAACxC,EACD,OAEJA,EAAQ,KAAO,OAAOid,EAAU,CAAM,MAAMtnB,CAAI,GAChDqK,EAAQ,aAAe,SACvBA,EAAQ,UAAY,SACpBA,EAAQ,SAAS0gB,EAAOzD,EAASA,CAAO,EACxCmD,EAAY5d,CACf,CACD,KAAK,gBAAgB,IAAI1L,EAAKspB,CAAS,EACvC3nB,EAAS,UAAY2nB,CACxB,CACL,CCnFO,eAAeQ,GAAejY,EAAQgQ,EAAU,GAAM,CACzD,MAAMhQ,EAAO,SAAS,IAAI4X,GAAe5H,CAAO,CACpD,CCFA,MAAMkI,GAAY,EAAGzf,GAAW,EAAG0f,GAAY,EAC/C,SAASC,GAAergB,EAAWnO,EAAUyuB,EAAeC,EAAMC,EAAS,CACvE,MAAMC,EAAiBzgB,EAAU,cAAc,cAAc,MAAM,QACnE,GAAI,CAACygB,EACD,OAEJ,MAAM/rB,EAAQsL,EAAU,UAAU,SAAS,MAAMugB,EAAMC,CAAO,EAC9D,UAAWzoB,KAAYrD,EAAO,CAC1B,KAAM,CAAE,GAAApD,EAAI,GAAAC,EAAI,SAAAuqB,CAAU,EAAG3qB,EAAa4G,EAAS,SAAUlG,CAAQ,EAAGiC,EAAW2sB,EAAe,MAAQA,EAAe,OAAQC,EAAgB3wB,EAAMH,GAAU6wB,EAAe,MAAM,EAAE/f,GAAWob,EAAWwE,CAAa,EAAIxsB,EAAUqsB,GAAWM,EAAe,QAAQ,EAAGE,EAAU1xB,EAAO,OAAQ6sB,EAAuBxqB,EAAKwqB,EAAY4E,EAA7B5sB,EAA6CgoB,EAAuBvqB,EAAKuqB,EAAY4E,EAA7B5sB,CAA0C,EACpZiE,EAAS,SAAS,QAAQ4oB,CAAO,CACpC,CACL,CACO,SAASC,GAAa5gB,EAAW6gB,EAAW,CAC1C7gB,EAAU,UACXA,EAAU,QAAU,CAAE,UAAW,CAAE,CAAA,GAEvC,KAAM,CAAE,QAAA8gB,CAAS,EAAG9gB,EAUpB,GATK8gB,EAAQ,SACJA,EAAQ,QACTA,EAAQ,MAAQ,GAEpBA,EAAQ,QACJA,EAAQ,QAAU9gB,EAAU,UAAU,QACtC8gB,EAAQ,OAAS,KAGrBA,EAAQ,SAAU,CAClB,MAAM5b,EAAWlF,EAAU,cAAc,MAAM,cAAesgB,EAAgBtgB,EAAU,OAAO,oBAC/F,GAAI,CAACsgB,GAAiBA,EAAgBF,IAAa,CAAClb,EAChD,OAEJmb,GAAergB,EAAWkF,EAAUob,EAAe,IAAI1P,EAAO1L,EAAS,EAAGA,EAAS,EAAGob,CAAa,EAAItpB,GAAM6pB,EAAU7pB,CAAC,CAAC,CAC5H,MACQ8pB,EAAQ,WAAa,KAC1BA,EAAQ,UAAY,GAE5B,CACO,SAASC,GAAa/gB,EAAW6gB,EAAW,CAC/C,MAAM3b,EAAWlF,EAAU,cAAc,MAAM,SAAUsgB,EAAgBtgB,EAAU,OAAO,oBACtF,CAACsgB,GAAiBA,EAAgBF,IAAa,CAAClb,GAGpDmb,GAAergB,EAAWkF,EAAUob,EAAe,IAAI1P,EAAO1L,EAAS,EAAGA,EAAS,EAAGob,CAAa,EAAItpB,GAAM6pB,EAAU7pB,CAAC,CAAC,CAC7H,CC3CO,MAAMgqB,EAAQ,CACjB,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,SAAW,GAChB,KAAK,OAASrH,GAAW,YACzB,KAAK,OAAS,EACd,KAAK,SAAW,GAChB,KAAK,MAAQ,CAChB,CACD,KAAKhnB,EAAM,CACFA,IAGDA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEzB,CACL,CC9BA,MAAMsuB,GAAc,iBACb,cAAwB1H,EAAuB,CAClD,YAAYtR,EAAQjI,EAAW,CAC3B,MAAMA,CAAS,EACf,KAAK,QAAUiI,EACVjI,EAAU,UACXA,EAAU,QAAU,CAAE,UAAW,CAAE,CAAA,GAEvC,KAAK,gBAAmBxJ,GAAS,CAC7B,MAAMiC,EAAU,KAAK,UAAU,cAAeqoB,EAAUroB,EAAQ,cAAc,MAAM,QACpF,GAAI,GAACqoB,GAAWtqB,IAASyqB,IAGzB,CAAKjhB,EAAU,UACXA,EAAU,QAAU,CAAE,UAAW,CAAE,CAAA,GAEvCA,EAAU,QAAQ,SAAW,GAC7BA,EAAU,QAAQ,MAAQ,EAC1B,UAAWjI,KAAYiI,EAAU,QAAQ,UAChC,KAAK,UAAUjI,CAAQ,GAG5BA,EAAS,SAAS,MAAMA,EAAS,eAAe,EAEpDiI,EAAU,QAAQ,UAAY,GAC9BA,EAAU,QAAQ,OAAS,GAC3B,WAAW,IAAM,CACTA,EAAU,YAGTA,EAAU,UACXA,EAAU,QAAU,CAAE,UAAW,CAAE,CAAA,GAEvCA,EAAU,QAAQ,SAAW,GAC7C,EAAe8gB,EAAQ,SAAWrzB,CAAqB,EACvD,CACK,CACD,OAAQ,CACP,CACD,MAAO,CACH,MAAMuS,EAAY,KAAK,UAAW8gB,EAAU9gB,EAAU,cAAc,cAAc,MAAM,QACnF8gB,IAGL9gB,EAAU,OAAO,oBAAsB8gB,EAAQ,SAAW9gB,EAAU,OAAO,WAC9E,CACD,UAAW,CACP,MAAMA,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekhB,EAAkBlhB,EAAU,cAAc,SAAWjT,GAAgBo0B,EAAS1oB,EAAQ,cAAc,OAAQ,CAAE,OAAQ2oB,EAAc,KAAMC,CAAS,EAAKF,EAAO,QAAS,CAAE,OAAQG,EAAc,KAAMC,CAAS,EAAKJ,EAAO,QAC5RD,GAAmBE,GAAgBtsB,EAAUmsB,GAAaI,CAAS,EACnEN,GAAa,KAAK,UAAW/pB,GAAK,KAAK,UAAUA,CAAC,CAAC,EAE9CsqB,GAAgBxsB,EAAUmsB,GAAaM,CAAS,GACrDX,GAAa,KAAK,UAAW5pB,GAAK,KAAK,UAAUA,CAAC,CAAC,CAE1D,CACD,UAAUe,EAAU,CAChB,MAAMiI,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekG,EAAQlG,EAAU,cAAc,MAAOmhB,IAAUppB,GAAA,YAAAA,EAAU,gBAAiBU,EAAQ,eAAe,OACxK,IAAK,CAACyN,EAAM,UAAY,CAACib,EAAO,QAAQ,UAAY,CAACjb,EAAM,eAAiB,CAACib,EAAO,QAAQ,QACxF,MAAO,GAEX,MAAME,EAAYF,EAAO,QAAQ,KAAMI,EAAYJ,EAAO,QAAQ,KAClE,OAAOrsB,EAAUmsB,GAAaI,CAAS,GAAKvsB,EAAUmsB,GAAaM,CAAS,CAC/E,CACD,gBAAgB9oB,KAAYvC,EAAS,CAC5BuC,EAAQ,UACTA,EAAQ,QAAU,IAAIuoB,IAE1B,UAAWryB,KAAUuH,EACjBuC,EAAQ,QAAQ,KAAK9J,GAAA,YAAAA,EAAQ,OAAO,CAE3C,CACD,OAAQ,CACP,CACL,EC3EO,eAAe6yB,GAA+BvZ,EAAQgQ,EAAU,GAAM,CACzE,MAAMhQ,EAAO,cAAc,kBAAmBjI,GACnC,QAAQ,QAAQ,IAAIyhB,GAAUxZ,EAAQjI,CAAS,CAAC,EACxDiY,CAAO,CACd,CCJA,MAAM/pB,GAAY,EAAG8D,GAAO,GAAK0vB,GAAS,KAAK,GAAK1vB,GAAMzC,GAAS,EAAGoyB,GAAkB,GAAIvB,GAAY,EACxG,SAASwB,GAAc5hB,EAAWnO,EAAU8D,EAAQ4qB,EAAMM,EAAW,CACjE,MAAMnsB,EAAQsL,EAAU,UAAU,SAAS,MAAMugB,EAAMM,CAAS,EAChE,UAAW9oB,KAAYrD,EACf6rB,aAAgB3P,EAChB3Z,GAAaF,GAA6BgB,CAAQ,EAAG,CACjD,SAAAlG,EACA,OAAA8D,EACA,KAAMA,GAAUzH,GAAYwzB,GAC5B,SAAUzyB,EAAO,OACjB,OAAQA,EAAO,MAC/B,CAAa,EAEIsxB,aAAgBtP,IACrBnZ,GAAWC,EAAUlC,GAAgBhE,EAAU8D,CAAM,CAAC,CAGlE,CACA,SAASksB,GAAqB7hB,EAAW3L,EAAUuC,EAAKkrB,EAAU,CAC9D,MAAMptB,EAAQ,SAAS,iBAAiBL,CAAQ,EAC3CK,EAAM,QAGXA,EAAM,QAAQ4D,GAAQ,CAClB,MAAMypB,EAAOzpB,EAAMI,EAAUsH,EAAU,OAAO,WAAYM,EAAM,CAC5D,GAAIyhB,EAAK,WAAaA,EAAK,YAAc/vB,IAAQ0G,EACjD,GAAIqpB,EAAK,UAAYA,EAAK,aAAe/vB,IAAQ0G,CACpD,EAAE/C,EAASosB,EAAK,YAAc/vB,GAAO0G,EAASspB,EAAYL,GAAkBjpB,EAAS6nB,EAAO3pB,EAAI,OAAS4Q,GAAQ,OAC5G,IAAIoJ,EAAOtQ,EAAI,EAAGA,EAAI,EAAG3K,EAASqsB,CAAS,EAC3C,IAAI/Q,GAAU8Q,EAAK,WAAarpB,EAAUspB,EAAWD,EAAK,UAAYrpB,EAAUspB,EAAWD,EAAK,YAAcrpB,EAAUspB,EAAYzyB,GAAQwyB,EAAK,aAAerpB,EAAUspB,EAAYzyB,EAAM,EAClMuyB,EAASxhB,EAAK3K,EAAQ4qB,CAAI,CAClC,CAAK,CACL,CACO,SAAS0B,GAAUjiB,EAAWvJ,EAAMyrB,EAAYrB,EAAW,CAC9DlqB,GAAeurB,EAAYzrB,EAAM,CAACpC,EAAUuC,IAAQirB,GAAqB7hB,EAAW3L,EAAUuC,EAAK,CAAC0J,EAAK3K,EAAQ4qB,IAASqB,GAAc5hB,EAAWM,EAAK3K,EAAQ4qB,EAAMM,CAAS,CAAC,CAAC,CACrL,CACO,SAASsB,GAAYniB,EAAW6gB,EAAW,CAC9C,MAAMnoB,EAAUsH,EAAU,OAAO,WAAYgiB,EAAYL,GAAkBjpB,EAASwM,EAAWlF,EAAU,cAAc,MAAM,SAAUrK,EAASqK,EAAU,OAAO,mBAC7J,CAACrK,GAAUA,EAASyqB,IAAa,CAAClb,GAGtC0c,GAAc5hB,EAAWkF,EAAUvP,EAAQ,IAAIib,EAAO1L,EAAS,EAAGA,EAAS,EAAGvP,EAASqsB,CAAS,EAAGnB,CAAS,CAChH,CC3CO,MAAMuB,EAAO,CAChB,aAAc,CACV,KAAK,SAAW,GACnB,CACD,KAAKzvB,EAAM,CACFA,GAGDA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,SAE5B,CACL,CCTA,MAAMuvB,GAAa,SACZ,MAAMG,WAAgB9I,EAAuB,CAChD,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,CAClB,CACD,OAAQ,CACP,CACD,MAAO,CACH,MAAMA,EAAY,KAAK,UAAWsiB,EAAStiB,EAAU,cAAc,cAAc,MAAM,OAClFsiB,IAGLtiB,EAAU,OAAO,mBAAqBsiB,EAAO,SAAWtiB,EAAU,OAAO,WAC5E,CACD,UAAW,CACP,MAAMA,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAemhB,EAAS1oB,EAAQ,cAAc,OAAQyoB,EAAkBlhB,EAAU,cAAc,SAAWjT,GAAgBq0B,EAAeD,EAAO,QAAQ,OAAQE,EAAYF,EAAO,QAAQ,KAAM1qB,EAAO0qB,EAAO,MAClQD,GAAmBE,GAAgBtsB,EAAUotB,GAAYb,CAAS,EAClEc,GAAY,KAAK,UAAWnrB,GAAK,KAAK,UAAUA,CAAC,CAAC,EAGlDirB,GAAU,KAAK,UAAWxrB,EAAMyrB,GAAYlrB,GAAK,KAAK,UAAUA,CAAC,CAAC,CAEzE,CACD,UAAUe,EAAU,CAChB,MAAMiI,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekG,EAAQlG,EAAU,cAAc,MAAOmhB,IAAUppB,GAAA,YAAAA,EAAU,gBAAiBU,EAAQ,eAAe,OAAQhC,EAAO0qB,EAAO,MAC9L,MAAS,CAAC,CAACjb,EAAM,UAAYib,EAAO,QAAQ,QAAUrsB,EAAUotB,GAAYf,EAAO,QAAQ,IAAI,GAC3F5qB,GAAiB2rB,GAAYzrB,CAAI,CACxC,CACD,gBAAgBgC,KAAYvC,EAAS,CAC5BuC,EAAQ,SACTA,EAAQ,OAAS,IAAI2pB,IAEzB,UAAWzzB,KAAUuH,EACjBuC,EAAQ,OAAO,KAAK9J,GAAA,YAAAA,EAAQ,MAAM,CAEzC,CACD,OAAQ,CACP,CACL,CCxCO,eAAe4zB,GAA8Bta,EAAQgQ,EAAU,GAAM,CACxE,MAAMhQ,EAAO,cAAc,iBAAkBjI,GAClC,QAAQ,QAAQ,IAAIqiB,GAAQriB,CAAS,CAAC,EAC9CiY,CAAO,CACd,CCJO,MAAMuK,EAAW,CACpB,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,SAAW,GAChB,KAAK,IAAM,EACd,CACD,KAAK7vB,EAAM,CACP,GAAKA,EAeL,IAZIA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,MAAQ,SACb,KAAK,IAAMA,EAAK,KAEhBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,QAAU,OAAW,CAC1B,MAAMkL,EAAc7P,GAAQ,KAAK,KAAK,EAAI,OAAY,KAAK,MAC3D,KAAK,MAAQoG,EAA0BzB,EAAK,MAAOmI,GACxCoM,EAAa,OAAOrJ,EAAa/C,CAAK,CAChD,CACJ,CACGnI,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CChCO,MAAM8vB,WAAkBD,EAAW,CACtC,aAAc,CACV,QACA,KAAK,UAAY,EACpB,CACD,KAAK7vB,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,GAGDA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,UAE7B,CACL,CCZO,MAAM+vB,WAAeF,EAAW,CACnC,KAAK7vB,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,IAGL,KAAK,KAAOyB,EAA0BzB,EAAK,KAAMiE,GAAO,CACpD,MAAMmR,EAAM,IAAI0a,GAChB,OAAA1a,EAAI,KAAKnR,CAAG,EACLmR,CACnB,CAAS,EACJ,CACL,CCfO,IAAI4a,IACV,SAAUA,EAAmB,CAC1BA,EAAkB,MAAW,QAC7BA,EAAkB,QAAa,UAC/BA,EAAkB,KAAU,MAChC,GAAGA,KAAsBA,GAAoB,CAAA,EAAG,ECJzC,SAASC,GAAqBC,EAAeC,EAAWC,EAAc3O,EAAO,CAChF,GAAI0O,GAAaC,EAAc,CAC3B,MAAMlzB,EAAQgzB,GAAiBC,EAAYC,GAAgB3O,EAC3D,OAAOrkB,EAAMF,EAAOgzB,EAAeC,CAAS,CAC/C,SACQA,EAAYC,EAAc,CAC/B,MAAMlzB,EAAQgzB,GAAiBE,EAAeD,GAAa1O,EAC3D,OAAOrkB,EAAMF,EAAOizB,EAAWD,CAAa,CAC/C,CACL,CCNA,MAAMG,GAAa,SAAU1E,GAAc,EAAG2E,GAAmB,EAAG1zB,GAAS,EAAGuU,GAAiB,EAAGof,GAAc,EAAGC,GAAqB,EAAGC,GAAW,EAAGpxB,GAAO,GAAKiiB,GAAe,EAC/K,MAAMoP,WAAgB9J,EAAuB,CAChD,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,EACf,KAAK,aAAe,IAAM,OACtB,MAAMA,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAesjB,EAAgBtjB,EAAU,cAAc,MAAM,cAAeujB,EAAgB9qB,EAAQ,cAAc,MAAM,OAC9K,GAAI,CAAC8qB,GAAiB,CAACD,EACnB,OAECtjB,EAAU,SACXA,EAAU,OAAS,IAEvB,MAAM8b,EAAW9b,EAAU,OAAO,mBAClC,GAAI,CAAC8b,GAAYA,EAAWwC,GACxB,OAEJ,MAAM5pB,EAAQsL,EAAU,UAAU,SAAS,YAAYsjB,EAAexH,EAAU9kB,GAAK,KAAK,UAAUA,CAAC,CAAC,EAAG,CAAE,OAAAwsB,CAAQ,EAAGxjB,EACtH,UAAWjI,KAAYrD,EAAO,CAC1B,GAAI,CAAC8uB,EAAO,SACR,SAEJzrB,EAAS,OAAO,QAAU,CAACyrB,EAAO,YAClC,MAAMljB,EAAMvI,EAAS,YAAa,EAAE0rB,EAAYjyB,EAAY8O,EAAKgjB,CAAa,EAAGI,GAAa,IAAI,KAAI,EAAG,WAAa1jB,EAAU,cAAc,MAAM,WAAaijB,KAC7Jx1B,EACAi2B,EAAYH,EAAc,WAC1BC,EAAO,YAAc,IAErBE,EAAYH,EAAc,SAAWh0B,KACrCi0B,EAAO,SAAW,GAClBA,EAAO,YAAc,IAEzB,MAAMG,EAAW,CACb,UAAW,CACP,SAAU3jB,EAAU,OAAO,eAC3B,MAAOjI,EAAS,OAAO,MAC1B,EACD,aAAc,CACV,SAAUjH,GAAYiH,EAAS,QAAQ,KAAK,KAAK,EAAIiI,EAAU,OAAO,WACtE,MAAOjI,EAAS,KAAK,KACxB,EACD,KAAM4qB,GAAkB,IAC5C,EACgB,KAAK,SAAS5qB,EAAU0rB,EAAWC,EAAWC,CAAQ,EACtD,MAAMC,EAAc,CAChB,UAAW,CACP,SAAUL,EAAc,QACxB,MAAOxrB,EAAS,OAAO,OAC1B,EACD,aAAc,CACV,SAAUjH,GAAYiH,EAAS,QAAQ,QAAQ,KAAK,EACpD,QAAOnF,EAAAmF,EAAS,UAAT,YAAAnF,EAAkB,QAASkR,EACrC,EACD,KAAM6e,GAAkB,OAC5C,EACgB,KAAK,SAAS5qB,EAAU0rB,EAAWC,EAAWE,CAAW,EACrD,CAACJ,EAAO,aAAeC,GAAa3H,EACpC,KAAK,kBAAkB/jB,EAAU0rB,CAAS,EAG1C,OAAO1rB,EAAS,OAAO,KAE9B,CACb,EACQ,KAAK,aAAe,IAAM,CACtB,MAAMiI,EAAY,KAAK,UAAWkF,EAAWlF,EAAU,cAAc,MAAM,SAAU8b,EAAW9b,EAAU,OAAO,mBACjH,GAAI,CAAC8b,GAAYA,EAAWwC,IAAe,CAACpZ,EACxC,OAEJ,MAAMxQ,EAAQsL,EAAU,UAAU,SAAS,YAAYkF,EAAU4W,EAAU9kB,GAAK,KAAK,UAAUA,CAAC,CAAC,EACjG,UAAWe,KAAYrD,EAAO,CAC1BqD,EAAS,OAAO,QAAU,GAC1B,MAAMuI,EAAMvI,EAAS,YAAa,EAAE8rB,EAAgBryB,EAAY8O,EAAK4E,CAAQ,EAAGkP,EAAQ8O,GAAcW,EAAgB/H,EAClH+H,GAAiB/H,EACb1H,GAASgP,IAAYpjB,EAAU,cAAc,SAAWjT,KACxD,KAAK,iBAAiBgL,EAAUqc,CAAK,EACrC,KAAK,oBAAoBrc,EAAUqc,CAAK,EACxC,KAAK,kBAAkBrc,EAAUqc,CAAK,GAI1C,KAAK,MAAMrc,CAAQ,EAEnBiI,EAAU,cAAc,SAAWnT,IACnC,KAAK,MAAMkL,CAAQ,CAE1B,CACb,EACQ,KAAK,kBAAoB,CAACA,EAAUqc,EAAO0P,IAAc,CACrD,MAAMrrB,EAAU,KAAK,UAAU,cAAe8qB,EAAgBO,GAAarrB,EAAQ,cAAc,MAAM,OACvG,GAAK8qB,EAGL,IAAI,CAACxrB,EAAS,OAAO,WAAY,CAC7B,MAAMgsB,EAAYR,EAAc,MAChC,GAAI,CAACQ,EACD,OAEJ,MAAMC,EAAczrB,GAAyBwrB,CAAS,EACtDhsB,EAAS,OAAO,WAAamD,GAAgB8oB,CAAW,CAC3D,CACD,GAAKjsB,EAAS,OAAO,WAGrB,GAAIwrB,EAAc,IAAK,CACnBxrB,EAAS,OAAO,MAAQ,OACxB,MAAMksB,EAASlsB,EAAS,eACxBA,EAAS,OAAO,MAAQksB,EAClB7oB,GAASgC,GAAS6mB,EAAQlsB,EAAS,OAAO,WAAYmrB,GAAc9O,EAAOA,CAAK,CAAC,EACjFrc,EAAS,OAAO,UACzB,MAEGA,EAAS,OAAO,MAAQA,EAAS,OAAO,WAExD,EACQ,KAAK,oBAAsB,CAACA,EAAUqc,EAAO0P,IAAc,SACvD,MAAM9jB,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekkB,GAAcJ,GAAA,YAAAA,EAAW,YAAWlxB,EAAA6F,EAAQ,cAAc,MAAM,SAA5B,YAAA7F,EAAoC,SAC7I,GAAI,CAACsxB,EACD,OAEJ,MAAMC,EAAapsB,EAAS,QAAQ,QAAQ,MAAOqsB,IAAWvxB,EAAAkF,EAAS,UAAT,YAAAlF,EAAkB,QAASiR,GAAgB5G,EAAU0lB,GAAqBwB,EAAUF,EAAapzB,GAAYqzB,CAAU,EAAG/P,CAAK,EACzLlX,IAAY,SACZnF,EAAS,OAAO,QAAUmF,EAE1C,EACQ,KAAK,iBAAmB,CAACnF,EAAUqc,EAAO0P,IAAc,CACpD,MAAM9jB,EAAY,KAAK,UAAWqkB,EAAWP,GAAA,MAAAA,EAAW,KAAOA,EAAU,KAAO9jB,EAAU,OAAO,WAAaA,EAAU,OAAO,eAC/H,GAAIqkB,IAAa,OACb,OAEJ,MAAMC,EAAUxzB,GAAYiH,EAAS,QAAQ,KAAK,KAAK,EAAIiI,EAAU,OAAO,WAAYukB,EAAQxsB,EAAS,KAAK,MAAOtC,EAAOmtB,GAAqB2B,EAAOF,EAAUC,EAASlQ,CAAK,EAC5K3e,IAAS,SACTsC,EAAS,OAAO,OAAStC,EAEzC,EACQ,KAAK,SAAW,CAACsC,EAAU0rB,EAAWC,EAAW/wB,IAAS,CACtD,MAAMqN,EAAY,KAAK,UAAWwkB,EAAc7xB,EAAK,UAAU,SAAU8F,EAAUuH,EAAU,cAAeujB,EAAgB9qB,EAAQ,cAAc,MAAM,OACxJ,GAAI,CAAC8qB,GAAiBiB,IAAgB,OAClC,OAEJ,MAAMC,EAAiBlB,EAAc,SAAUmB,EAAiB1kB,EAAU,OAAO,mBAAoB2kB,EAAiBhyB,EAAK,aAAa,SAAUiyB,EAAajyB,EAAK,UAAU,MAAOkyB,EAAOlyB,EAAK,aAAa,OAASwwB,GAAoB3hB,EAAO7O,EAAK,KACvP,GAAI,GAAC+xB,GAAkBA,EAAiBpG,IAAekG,IAAgBG,GAMvE,GAHK3kB,EAAU,SACXA,EAAU,OAAS,IAEnBA,EAAU,OAAO,YACb4kB,IACIpjB,IAASmhB,GAAkB,MAC3B,OAAO5qB,EAAS,OAAO,OAEvByJ,IAASmhB,GAAkB,SAC3B,OAAO5qB,EAAS,OAAO,iBAK3B0rB,GAAaiB,GAEb,IADYE,GAAcC,KACdL,EAAa,CACrB,MAAM30B,EAAQg1B,EAAQnB,GAAamB,EAAOL,GAAgBC,EACtDjjB,IAASmhB,GAAkB,OAC3B5qB,EAAS,OAAO,OAASlI,GAEzB2R,IAASmhB,GAAkB,UAC3B5qB,EAAS,OAAO,QAAUlI,EAEjC,OAGG2R,IAASmhB,GAAkB,MAC3B,OAAO5qB,EAAS,OAAO,OAEvByJ,IAASmhB,GAAkB,SAC3B,OAAO5qB,EAAS,OAAO,OAI/C,EACQ,KAAK,qBAAuB,CAAC4B,EAAOtF,EAAUuC,IAAQ,CAClD,MAAMoJ,EAAY,KAAK,UAAW7L,EAAY,SAAS,iBAAiBE,CAAQ,EAAGmvB,EAASxjB,EAAU,cAAc,cAAc,MAAM,OACpI,CAACwjB,GAAU,CAACrvB,EAAU,QAG1BA,EAAU,QAAQmE,GAAQ,CACtB,MAAMypB,EAAOzpB,EAAMI,EAAUsH,EAAU,OAAO,WAAYM,EAAM,CAC5D,GAAIyhB,EAAK,WAAaA,EAAK,YAAc/vB,IAAQ0G,EACjD,GAAIqpB,EAAK,UAAYA,EAAK,aAAe/vB,IAAQ0G,CACrE,EAAmBosB,EAAgB/C,EAAK,YAAc/vB,GAAO0G,EAAS6nB,EAAO3pB,EAAI,OAAS4Q,GAAQ,OAC5E,IAAIoJ,EAAOtQ,EAAI,EAAGA,EAAI,EAAGwkB,CAAa,EACtC,IAAI7T,GAAU8Q,EAAK,WAAarpB,EAASqpB,EAAK,UAAYrpB,EAASqpB,EAAK,YAAcrpB,EAASqpB,EAAK,aAAerpB,CAAO,EAAGhE,EAAQsL,EAAU,UAAU,SAAS,MAAMugB,EAAM,GAAK,KAAK,UAAU,CAAC,CAAC,EAC1M,UAAWxoB,KAAYrD,EAAO,CAC1B,GAAI,CAAC6rB,EAAK,SAASxoB,EAAS,YAAa,CAAA,EACrC,SAEJA,EAAS,OAAO,QAAU,GAC1B,MAAMtB,EAAO+sB,EAAO,KAAMM,EAAYjtB,GAAQJ,EAAMsrB,CAAI,GACpD,CAAChqB,EAAS,OAAO,KAAOA,EAAS,OAAO,MAAQgqB,KAChD,KAAK,MAAMhqB,EAAU4B,EAAO,EAAI,EAChC5B,EAAS,OAAO,IAAMgqB,GAE1B,KAAK,iBAAiBhqB,EAAUkc,GAAc6P,CAAS,EACvD,KAAK,oBAAoB/rB,EAAUkc,GAAc6P,CAAS,EAC1D,KAAK,kBAAkB/rB,EAAUkc,GAAc6P,CAAS,CAC3D,CACjB,CAAa,CACb,EACa9jB,EAAU,SACXA,EAAU,OAAS,IAEvB,KAAK,gBAAmBxJ,GAAS,CACzBA,IAASwsB,KAGRhjB,EAAU,SACXA,EAAU,OAAS,IAEvBA,EAAU,OAAO,SAAW,GACxC,CACK,CACD,MAAMjI,EAAU4B,EAAOmc,EAAO,CACtB/d,EAAS,OAAO,SAAW,CAAC+d,IAGhC,OAAO/d,EAAS,OAAO,IACvB,OAAOA,EAAS,OAAO,QACvB,OAAOA,EAAS,OAAO,OACvB,OAAOA,EAAS,OAAO,MAC1B,CACD,MAAO,CACH,MAAMiI,EAAY,KAAK,UAAWwjB,EAASxjB,EAAU,cAAc,cAAc,MAAM,OAClFwjB,IAGLxjB,EAAU,OAAO,mBAAqBwjB,EAAO,SAAWxjB,EAAU,OAAO,WACrEwjB,EAAO,OAAS,SAChBxjB,EAAU,OAAO,eAAiBwjB,EAAO,KAAOxjB,EAAU,OAAO,YAExE,CACD,SAASrG,EAAO,CACZ,MAAMlB,EAAU,KAAK,UAAU,cAAe0oB,EAAS1oB,EAAQ,cAAc,OAAQssB,EAAU5D,EAAO,QAAShc,EAAUgc,EAAO,QAASC,EAAe2D,EAAQ,OAAQ1D,EAAY0D,EAAQ,KAAMzD,EAAenc,EAAQ,OAAQoc,EAAYpc,EAAQ,KAAM1O,EAAO0qB,EAAO,MACrQC,GAAgBtsB,EAAUkuB,GAAY3B,CAAS,EAC/C,KAAK,aAAY,EAEZC,GAAgBxsB,EAAUkuB,GAAYzB,CAAS,EACpD,KAAK,aAAY,EAGjB5qB,GAAeqsB,GAAYvsB,EAAM,CAACpC,EAAUuC,IAAQ,KAAK,qBAAqB+C,EAAOtF,EAAUuC,CAAG,CAAC,CAE1G,CACD,UAAUmB,EAAU,CAChB,MAAMiI,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekG,EAAQlG,EAAU,cAAc,MAAOmhB,IAAUppB,GAAA,YAAAA,EAAU,gBAAiBU,EAAQ,eAAe,OAAQ,CAAE,QAAA0M,EAAS,MAAA2C,EAAO,QAAAid,GAAY5D,EAAQ2C,EAAYvtB,GAAiBysB,GAAYlb,CAAK,EACpQ,OAAMgc,GAAciB,EAAQ,QAAY7e,EAAM,UAAcf,EAAQ,QAAUe,EAAM,cAG7EpR,EAAUkuB,GAAY+B,EAAQ,IAAI,GAAKjwB,EAAUkuB,GAAY7d,EAAQ,IAAI,GAAK2e,EAF1E,EAGd,CACD,gBAAgBrrB,KAAYvC,EAAS,CAC5BuC,EAAQ,SACTA,EAAQ,OAAS,IAAIiqB,IAEzB,UAAW/zB,KAAUuH,EACjBuC,EAAQ,OAAO,KAAK9J,GAAA,YAAAA,EAAQ,MAAM,CAEzC,CACD,MAAMoJ,EAAU,CACZA,EAAS,OAAO,QAAU,EAC7B,CACL,CChRO,eAAeitB,GAA8B/c,EAAQgQ,EAAU,GAAM,CACxE,MAAMhQ,EAAO,cAAc,iBAAkBjI,GAClC,QAAQ,QAAQ,IAAIqjB,GAAQrjB,CAAS,CAAC,EAC9CiY,CAAO,CACd,CCLO,MAAMgN,EAAa,CACtB,aAAc,CACV,KAAK,QAAU,EAClB,CACD,KAAKtyB,EAAM,CACFA,GAGDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,QAE3B,CACL,CCXO,MAAMuyB,EAAQ,CACjB,aAAc,CACV,KAAK,SAAW,GAChB,KAAK,MAAQ,IAAID,GACjB,KAAK,OAAS,EACjB,CACD,KAAKtyB,EAAM,CACFA,IAGDA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAEzB,KAAK,MAAM,KAAKA,EAAK,KAAK,EACtBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CClBA,MAAMwyB,GAAc,EAAGC,GAAc,EAAGC,GAAoB,EACrD,SAASC,GAAShmB,EAASpI,EAAIC,EAAI+F,EAAS,CAC/C,MAAMqoB,EAAW,KAAK,MAAMpuB,EAAG,UAAW,EAAGD,EAAG,UAAW,CAAA,EAAGmG,EAASnG,EAAG,aAAY,EAAIoG,EAASnG,EAAG,eACtG,GAAI,CAACkG,GAAU,CAACC,EACZ,OAEJ,MAAMkoB,EAAYtuB,EAAG,YAAW,EAAIuuB,EAAUtuB,EAAG,cAAeuuB,EAAStoB,GAASC,EAAQC,EAAQpG,EAAG,UAAW,EAAEC,EAAG,UAAW,CAAA,EAAGwuB,EAAOrmB,EAAQ,qBAAqBkmB,EAAU,EAAGA,EAAU,EAAGC,EAAQ,EAAGA,EAAQ,CAAC,EACrN,OAAAE,EAAK,aAAaR,GAAahoB,GAAgBE,EAAQH,CAAO,CAAC,EAC/DyoB,EAAK,aAAa51B,EAAMw1B,EAAUJ,GAAaC,EAAW,EAAGnoB,GAAgByoB,EAAQxoB,CAAO,CAAC,EAC7FyoB,EAAK,aAAaP,GAAajoB,GAAgBG,EAAQJ,CAAO,CAAC,EACxDyoB,CACX,CACO,SAASC,GAAgBtmB,EAASwL,EAAO+a,EAAWtmB,EAAOC,EAAK,CACnEH,GAASC,EAASC,EAAOC,CAAG,EAC5BF,EAAQ,UAAYwL,EACpBxL,EAAQ,YAAcumB,EACtBvmB,EAAQ,OAAM,CAClB,CACO,SAASumB,GAAU7lB,EAAWoC,EAAKlL,EAAIC,EAAI,CAC9C,MAAMsB,EAAUuH,EAAU,cAAe8lB,EAAiBrtB,EAAQ,cAAc,MAAM,QACtF,GAAKqtB,EAGL,OAAOR,GAASljB,EAAKlL,EAAIC,EAAI2uB,EAAe,MAAM,OAAO,CAC7D,CACO,SAASC,GAAe/lB,EAAW9I,EAAIC,EAAI,CAC9C6I,EAAU,OAAO,KAAKoC,GAAO,CACzB,MAAM4jB,EAAKH,GAAU7lB,EAAWoC,EAAKlL,EAAIC,CAAE,EAC3C,GAAI,CAAC6uB,EACD,OAEJ,MAAM1uB,EAAOJ,EAAG,YAAW,EAAIK,EAAOJ,EAAG,cACzCyuB,GAAgBxjB,EAAKlL,EAAG,OAAO,YAAcmuB,GAAmBW,EAAI1uB,EAAMC,CAAI,CACtF,CAAK,CACL,CChCA,MAAM0uB,GAAc,UAAW3H,GAAc,EACtC,MAAM4H,WAAkB3M,EAAuB,CAClD,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,CAClB,CACD,OAAQ,CACP,CACD,MAAO,CACH,MAAMA,EAAY,KAAK,UAAWmmB,EAAUnmB,EAAU,cAAc,cAAc,MAAM,QACnFmmB,IAGLnmB,EAAU,OAAO,oBAAsBmmB,EAAQ,SAAWnmB,EAAU,OAAO,WAC3EA,EAAU,OAAO,kBAAoBmmB,EAAQ,OAASnmB,EAAU,OAAO,WAC1E,CACD,UAAW,CACP,MAAMA,EAAY,KAAK,UACvB,GAD4CA,EAAU,cAC1C,cAAc,OAAO,QAAQ,QAAUA,EAAU,cAAc,SAAW,cAAe,CACjG,MAAMkF,EAAWlF,EAAU,cAAc,MAAM,SAAU,CAAE,oBAAAomB,EAAqB,kBAAAC,CAAiB,EAAKrmB,EAAU,OAChH,GAAI,CAAComB,GACDA,EAAsB9H,IACtB,CAAC+H,GACDA,EAAoB/H,IACpB,CAACpZ,EACD,OAEJ,MAAM4W,EAAW,KAAK,IAAIuK,CAAiB,EAAG3xB,EAAQsL,EAAU,UAAU,SAAS,YAAYkF,EAAU4W,EAAU9kB,GAAK,KAAK,UAAUA,CAAC,CAAC,EACzItC,EAAM,QAAQ,CAACwC,EAAIwa,IAAM,CACrB,MAAMpa,EAAOJ,EAAG,YAAW,EAAIovB,EAAc,EAC7C,UAAWnvB,KAAMzC,EAAM,MAAMgd,EAAI4U,CAAW,EAAG,CAC3C,MAAM/uB,EAAOJ,EAAG,YAAW,EAAIovB,EAAU,KAAK,IAAIH,CAAmB,EAAGI,EAAQ,KAAK,IAAIlvB,EAAK,EAAIC,EAAK,CAAC,EAAGkvB,EAAQ,KAAK,IAAInvB,EAAK,EAAIC,EAAK,CAAC,EACvIivB,EAAQD,GAAWE,EAAQF,GAC3BR,GAAe/lB,EAAW9I,EAAIC,CAAE,CAEvC,CACjB,CAAa,CACJ,CACJ,CACD,UAAUY,EAAU,CAChB,MAAMiI,EAAY,KAAK,UAAWkG,EAAQlG,EAAU,cAAc,MAAOmhB,IAAUppB,GAAA,YAAAA,EAAU,gBAAiBiI,EAAU,cAAc,eAAe,OACrJ,OAAMmhB,EAAO,QAAQ,QAAUjb,EAAM,SAG9BpR,EAAUmxB,GAAa9E,EAAO,QAAQ,IAAI,EAFtC,EAGd,CACD,gBAAgB1oB,KAAYvC,EAAS,CAC5BuC,EAAQ,UACTA,EAAQ,QAAU,IAAIysB,IAE1B,UAAWv2B,KAAUuH,EACjBuC,EAAQ,QAAQ,KAAK9J,GAAA,YAAAA,EAAQ,OAAO,CAE3C,CACD,OAAQ,CACP,CACL,CCzDO,eAAe+3B,GAA+Bze,EAAQgQ,EAAU,GAAM,CACzE,MAAMhQ,EAAO,cAAc,kBAAmBjI,GACnC,QAAQ,QAAQ,IAAIkmB,GAAUlmB,CAAS,CAAC,EAChDiY,CAAO,CACd,CCJO,MAAM0O,EAAU,CACnB,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,QAAU,GACf,KAAK,QAAU,CAClB,CACD,KAAKh0B,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,QAAU,SACf,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,GAEvDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE3B,CACL,CCvBO,MAAMi0B,EAAK,CACd,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,MAAQ,IAAID,EACpB,CACD,KAAKh0B,EAAM,CACFA,IAGDA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAEzB,KAAK,MAAM,KAAKA,EAAK,KAAK,EAC7B,CACL,CCdA,MAAMk0B,GAAe,EACd,SAASC,GAAaxnB,EAASwL,EAAOvL,EAAOC,EAAKunB,EAAW7pB,EAAS,CACzEmC,GAASC,EAASC,EAAOC,CAAG,EAC5BF,EAAQ,YAAcrC,GAAgB8pB,EAAW7pB,CAAO,EACxDoC,EAAQ,UAAYwL,EACpBxL,EAAQ,OAAM,CAClB,CACO,SAAS0nB,GAAShnB,EAAWjI,EAAUkvB,EAAW/pB,EAASgI,EAAU,CACxElF,EAAU,OAAO,KAAKoC,GAAO,CACzB,MAAM8kB,EAAWnvB,EAAS,cAC1B+uB,GAAa1kB,EAAKrK,EAAS,OAAO,YAAc8uB,GAAcK,EAAUhiB,EAAU+hB,EAAW/pB,CAAO,CAC5G,CAAK,CACL,CCVA,MAAMiqB,GAAW,OAAQ7I,GAAc,EAAG8I,GAAa,EAChD,MAAMC,WAAgB9N,EAAuB,CAChD,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,CAClB,CACD,OAAQ,CACP,CACD,MAAO,CACH,MAAMA,EAAY,KAAK,UAAWsnB,EAAOtnB,EAAU,cAAc,cAAc,MAAM,KAChFsnB,IAGLtnB,EAAU,OAAO,iBAAmBsnB,EAAK,SAAWtnB,EAAU,OAAO,WACxE,CACD,UAAW,OACP,MAAMA,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAeiG,EAAgBxN,EAAQ,cAC7F,GAAI,CAACwN,EAAc,MAAM,MACrB,CAACA,EAAc,OAAO,QAAQ,QAC9BjG,EAAU,cAAc,SAAWjT,GACnC,OAEJ,MAAMmY,EAAWlF,EAAU,cAAc,MAAM,SAC/C,GAAI,CAACkF,EACD,OAEJ,MAAM4W,EAAW9b,EAAU,OAAO,iBAClC,GAAI,CAAC8b,GAAYA,EAAWwC,GACxB,OAEJ,MAAM5pB,EAAQsL,EAAU,UAAU,SAAS,YAAYkF,EAAU4W,EAAU9kB,GAAK,KAAK,UAAUA,CAAC,CAAC,EACjG,UAAWe,KAAYrD,EAAO,CAC1B,MAAM4L,EAAMvI,EAAS,YAAa,EAAE8rB,EAAgBryB,EAAY8O,EAAK4E,CAAQ,EAC7E,GAAI2e,EAAgB/H,EAChB,SAEJ,MAAMyL,EAAkBthB,EAAc,MAAM,KAAK,MAAOuhB,EAAcD,EAAgB,QAASE,EAAcD,EAAe3D,EAAgB2D,EAAe1L,EAC3J,GAAI2L,GAAeL,GACf,SAEJ,MAAMnpB,EAAWspB,EAAgB,SAAS30B,EAAAmF,EAAS,QAAQ,QAAjB,YAAAnF,EAAwB,OAClE,GAAI,CAACoN,EAAU,UAAU,eAAiB/B,EAAU,CAChD,MAAMypB,EAAezhB,EAAc,MAAM,KAAK,MAC9CjG,EAAU,UAAU,cAAgBhC,GAAmBC,EAAUypB,EAAa,MAAOA,EAAa,OAAO,CAC5G,CACD,MAAMX,EAAYppB,GAAa5F,EAAU,OAAWiI,EAAU,UAAU,aAAa,EAChF+mB,GAGLC,GAAShnB,EAAWjI,EAAUgvB,EAAWU,EAAaviB,CAAQ,CACjE,CACJ,CACD,UAAUnN,EAAU,CAChB,MAAMiI,EAAY,KAAK,UAAWkG,EAAQlG,EAAU,cAAc,MAAOmhB,IAAUppB,GAAA,YAAAA,EAAU,gBAAiBiI,EAAU,cAAc,eAAe,OACrJ,OAAOmhB,EAAO,QAAQ,QAAU,CAAC,CAACjb,EAAM,UAAYpR,EAAUqyB,GAAUhG,EAAO,QAAQ,IAAI,CAC9F,CACD,gBAAgB1oB,KAAYvC,EAAS,CAC5BuC,EAAQ,OACTA,EAAQ,KAAO,IAAImuB,IAEvB,UAAWj4B,KAAUuH,EACjBuC,EAAQ,KAAK,KAAK9J,GAAA,YAAAA,EAAQ,IAAI,CAErC,CACD,OAAQ,CACP,CACL,CCnEO,eAAeg5B,GAA4B1f,EAAQgQ,EAAU,GAAM,CACtE,MAAMhQ,EAAO,cAAc,eAAgBjI,GAChC,QAAQ,QAAQ,IAAIqnB,GAAQrnB,CAAS,CAAC,EAC9CiY,CAAO,CACd,CCJA,MAAM2P,GAAY,QACX,MAAMC,WAAetO,EAAuB,CAC/C,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,EACf,KAAK,gBAAmBxJ,GAAS,CAC7B,GAAIA,IAASoxB,GACT,OAEJ,MAAM5nB,EAAY,KAAK,UACnBA,EAAU,gBACVA,EAAU,MAAK,EAGfA,EAAU,KAAI,CAE9B,CACK,CACD,OAAQ,CACP,CACD,MAAO,CACN,CACD,UAAW,CACV,CACD,WAAY,CACR,MAAO,EACV,CACD,OAAQ,CACP,CACL,CC5BO,eAAe8nB,GAA6B7f,EAAQgQ,EAAU,GAAM,CACvE,MAAMhQ,EAAO,cAAc,gBAAiBjI,GACjC,QAAQ,QAAQ,IAAI6nB,GAAO7nB,CAAS,CAAC,EAC7CiY,CAAO,CACd,CCJO,MAAM8P,EAAK,CACd,aAAc,CACV,KAAK,QAAU,GACf,KAAK,OAAS,GACd,KAAK,SAAW,CACnB,CACD,KAAKp1B,EAAM,CACP,GAAI,CAACA,EACD,OAEAA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,OAAO,IAAI2B,GAAKA,CAAC,GAEnC,KAAK,OAAO,SACb,KAAK,QAAU,IAEnB,MAAMqf,EAAWhhB,EAAK,SAClBghB,IAAa,SACb,KAAK,SAAWziB,EAAcyiB,CAAQ,EAE7C,CACL,CCvBA,MAAMqU,GAAW,OAAQC,GAAc,EAChC,MAAMC,WAAe3O,EAAuB,CAC/C,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,EACf,KAAK,gBAAmBxJ,GAAS,CAC7B,GAAIA,IAASwxB,GACT,OAEJ,MAAMhoB,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAemoB,EAAc1vB,EAAQ,cAAc,MAAM,KAC/G,GAAI,CAAC0vB,EACD,OAEJ,MAAMxU,EAAW1iB,EAAck3B,EAAY,QAAQ,EACnD,GAAIxU,GAAYsU,GACZ,OAEJ,MAAMtc,EAAQvW,GAAc,CAAC,OAAW,GAAG+yB,EAAY,MAAM,CAAC,EAAG3U,EAAe7H,IAAU,OAAY3L,EAAU,cAAc,UAAU,OAAO2L,CAAK,EAAI,OACnJ3L,EAAU,UAAU,KAAK2T,EAAU3T,EAAU,cAAc,MAAOwT,EAAc7H,CAAK,CACtG,CACK,CACD,OAAQ,CACP,CACD,MAAO,CACN,CACD,UAAW,CACV,CACD,WAAY,CACR,MAAO,EACV,CACD,gBAAgBlT,KAAYvC,EAAS,CAC5BuC,EAAQ,OACTA,EAAQ,KAAO,IAAIsvB,IAEvB,UAAWp5B,KAAUuH,EACjBuC,EAAQ,KAAK,KAAK9J,GAAA,YAAAA,EAAQ,IAAI,CAErC,CACD,OAAQ,CACP,CACL,CCxCO,eAAey5B,GAA4BngB,EAAQgQ,EAAU,GAAM,CACtE,MAAMhQ,EAAO,cAAc,eAAgBjI,GAChC,QAAQ,QAAQ,IAAIkoB,GAAOloB,CAAS,CAAC,EAC7CiY,CAAO,CACd,CCJO,MAAMoQ,EAAO,CAChB,aAAc,CACV,KAAK,SAAW,CACnB,CACD,KAAK11B,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,MAAMghB,EAAWhhB,EAAK,SAClBghB,IAAa,SACb,KAAK,SAAWziB,EAAcyiB,CAAQ,EAE7C,CACL,CCZA,MAAM2U,GAAa,SACZ,MAAMC,WAAgBhP,EAAuB,CAChD,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,EACf,KAAK,gBAAmBxJ,GAAS,CAC7B,MAAMwJ,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cACtD,GAAI,CAACvH,EAAQ,cAAc,MAAM,QAAUjC,IAAS8xB,GAChD,OAEJ,MAAME,EAAWv3B,EAAcwH,EAAQ,cAAc,MAAM,OAAO,QAAQ,EAC1EuH,EAAU,UAAU,eAAewoB,CAAQ,CACvD,CACK,CACD,OAAQ,CACP,CACD,MAAO,CACN,CACD,UAAW,CACV,CACD,WAAY,CACR,MAAO,EACV,CACD,gBAAgB/vB,KAAYvC,EAAS,CAC5BuC,EAAQ,SACTA,EAAQ,OAAS,IAAI4vB,IAEzB,UAAW15B,KAAUuH,EACjBuC,EAAQ,OAAO,KAAK9J,GAAA,YAAAA,EAAQ,MAAM,CAEzC,CACD,OAAQ,CACP,CACL,CCjCO,eAAe85B,GAA8BxgB,EAAQgQ,EAAU,GAAM,CACxE,MAAMhQ,EAAO,cAAc,iBAAkBjI,GAClC,QAAQ,QAAQ,IAAIuoB,GAAQvoB,CAAS,CAAC,EAC9CiY,CAAO,CACd,CCJO,MAAMyQ,EAAY,CACrB,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,SAAW,GAChB,KAAK,OAAS,IACd,KAAK,MAAQ,EACb,KAAK,SAAW,GAChB,KAAK,OAAS/O,GAAW,WAC5B,CACD,KAAKhnB,EAAM,CACFA,IAGDA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAE5B,CACL,CChCO,MAAMg2B,WAAmBD,EAAY,CACxC,aAAc,CACV,QACA,KAAK,UAAY,EACpB,CACD,KAAK/1B,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,GAGDA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,UAE7B,CACL,CCZO,MAAMi2B,WAAgBF,EAAY,CACrC,KAAK/1B,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,IAGL,KAAK,KAAOyB,EAA0BzB,EAAK,KAAMiE,GAAO,CACpD,MAAMmR,EAAM,IAAI4gB,GAChB,OAAA5gB,EAAI,KAAKnR,CAAG,EACLmR,CACnB,CAAS,EACJ,CACL,CCbA,MAAM8gB,GAAc,UAAWvK,GAAc,EAAGwK,GAAsB,EAAGC,GAAqB,EAAGC,GAAc,EAAG5I,GAAY,EAAG6I,GAAW,EAAGC,GAAe,EAAGl3B,GAAO,GACjK,MAAMm3B,WAAiB5P,EAAuB,CACjD,YAAYtR,EAAQjI,EAAW,CAC3B,MAAMA,CAAS,EACf,KAAK,cAAgB,IAAM,CACvB,MAAMA,EAAY,KAAK,UAAWopB,EAAiBppB,EAAU,cAAc,cAAc,MAAM,QAC/F,GAAI,CAACopB,EACD,OAEJ,MAAMC,EAAUrpB,EAAU,SAAW,CAAE,UAAW,CAAE,CAAA,EAUpD,GATKqpB,EAAQ,SACJA,EAAQ,QACTA,EAAQ,MAAQ,GAEpBA,EAAQ,QACJA,EAAQ,QAAUrpB,EAAU,UAAU,QACtCqpB,EAAQ,OAAS,KAGrBA,EAAQ,SAAU,CAClB,MAAMC,EAAkBtpB,EAAU,OAAO,oBACzC,GAAI,CAACspB,GAAmBA,EAAkBhL,GACtC,OAEJ,MAAMwG,EAAgB,KAAK,IAAIwE,EAAkBR,GAAqBC,EAAkB,EAAGzF,EAAgBtjB,EAAU,cAAc,MAAM,cACzI,GAAIsjB,IAAkB,OAClB,OAEJ,MAAMtkB,EAAQ,IAAI4R,EAAO0S,EAAc,EAAGA,EAAc,EAAGwB,CAAa,EAAGpwB,EAAQsL,EAAU,UAAU,SAAS,MAAMhB,EAAOhI,GAAK,KAAK,UAAUA,CAAC,CAAC,EACnJ,UAAWe,KAAYrD,EAAO,CAC1B,KAAM,CAAE,GAAApD,EAAI,GAAAC,EAAI,SAAAuqB,CAAQ,EAAK3qB,EAAamyB,EAAevrB,EAAS,QAAQ,EAAGgiB,EAAI+B,GAAYkN,GAAal1B,EAAWs1B,EAAe,MAAOtT,EAAS,CAACgP,EAAgBhxB,EAAYimB,EACjL,GAAIA,GAAK+K,EAAe,CACpBuE,EAAQ,UAAU,KAAKtxB,CAAQ,EAC/B,MAAMwxB,EAAOt6B,EAAO,OAAOqC,EAAIC,CAAE,EACjCg4B,EAAK,OAASzT,EACd/d,EAAS,SAAS,MAAMwxB,CAAI,CAC/B,CACJ,CACJ,SACQF,EAAQ,WAAa,GAAO,CACjC,UAAWtxB,KAAYsxB,EAAQ,UAC3BtxB,EAAS,SAAS,MAAMA,EAAS,eAAe,EAEpDsxB,EAAQ,UAAY,EACvB,CACb,EACQ,KAAK,cAAgB,IAAM,CACvB,MAAMrpB,EAAY,KAAK,UAAWkF,EAAWlF,EAAU,cAAc,MAAM,SAAU8kB,EAAgB9kB,EAAU,OAAO,oBAClH,CAAC8kB,GAAiBA,EAAgB1E,IAAa,CAAClb,GAGpD,KAAK,gBAAgBA,EAAU4f,EAAe,IAAIlU,EAAO1L,EAAS,EAAGA,EAAS,EAAG4f,CAAa,CAAC,CAC3G,EACQ,KAAK,gBAAkB,CAACjzB,EAAUizB,EAAevE,EAAMiJ,IAAe,CAClE,MAAMxpB,EAAY,KAAK,UAAWtL,EAAQsL,EAAU,UAAU,SAAS,MAAMugB,EAAMvpB,GAAK,KAAK,UAAUA,CAAC,CAAC,EAAGoyB,EAAiBppB,EAAU,cAAc,cAAc,MAAM,QACzK,GAAI,CAACopB,EACD,OAEJ,KAAM,CAAE,OAAAz5B,EAAQ,MAAA85B,EAAO,OAAA11B,EAAQ,SAAA+mB,CAAQ,EAAKsO,EAAgBM,EAAa95B,GAAUD,CAAM,EAAGmE,IAAY01B,GAAA,YAAAA,EAAY,QAASC,GAAS11B,EACtI,UAAWgE,KAAYrD,EAAO,CAC1B,KAAM,CAAE,GAAApD,EAAI,GAAAC,EAAI,SAAAuqB,CAAU,EAAG3qB,EAAa4G,EAAS,SAAUlG,CAAQ,EAAG83B,EAAgB55B,EAAM25B,EAAWR,GAAepN,EAAWgJ,CAAa,EAAIhxB,EAAUm1B,GAAUnO,CAAQ,EAAG6F,EAAU1xB,EAAO,OAAQ6sB,EAAuBxqB,EAAKwqB,EAAY6N,EAA7B71B,EAA6CgoB,EAAuBvqB,EAAKuqB,EAAY6N,EAA7B71B,CAA0C,EACzTiE,EAAS,SAAS,MAAM4oB,CAAO,CAClC,CACb,EACQ,KAAK,uBAAyB,CAACtsB,EAAUuC,IAAQ,CAC7C,MAAMoJ,EAAY,KAAK,UAAWqpB,EAAUrpB,EAAU,cAAc,cAAc,MAAM,QACxF,GAAI,CAACqpB,EACD,OAEJ,MAAM30B,EAAQ,SAAS,iBAAiBL,CAAQ,EAC3CK,EAAM,QAGXA,EAAM,QAAQ4D,GAAQ,CAClB,MAAMypB,EAAOzpB,EAAMI,EAAUsH,EAAU,OAAO,WAAYM,EAAM,CAC5D,GAAIyhB,EAAK,WAAaA,EAAK,YAAc/vB,IAAQ0G,EACjD,GAAIqpB,EAAK,UAAYA,EAAK,aAAe/vB,IAAQ0G,CACrE,EAAmBosB,EAAgB/C,EAAK,YAAc/vB,GAAO0G,EAAS6nB,EAAO3pB,EAAI,OAAS4Q,GAAQ,OAC5E,IAAIoJ,EAAOtQ,EAAI,EAAGA,EAAI,EAAGwkB,CAAa,EACtC,IAAI7T,GAAU8Q,EAAK,WAAarpB,EAASqpB,EAAK,UAAYrpB,EAASqpB,EAAK,YAAcrpB,EAASqpB,EAAK,aAAerpB,CAAO,EAAGjC,EAAO4yB,EAAQ,KAAMG,EAAa3yB,GAAQJ,EAAMsrB,CAAI,EACvL,KAAK,gBAAgBzhB,EAAKwkB,EAAevE,EAAMiJ,CAAU,CACzE,CAAa,CACb,EACQ,KAAK,QAAUvhB,EACVjI,EAAU,UACXA,EAAU,QAAU,CAAE,UAAW,CAAE,CAAA,GAEvC,KAAK,gBAAmBxJ,GAAS,CAC7B,MAAMiC,EAAU,KAAK,UAAU,cAAemxB,EAAcnxB,EAAQ,cAAc,MAAM,QACxF,GAAI,CAACmxB,GAAepzB,IAASqyB,GACzB,OAEC7oB,EAAU,UACXA,EAAU,QAAU,CAAE,UAAW,CAAE,CAAA,GAEvC,MAAMqpB,EAAUrpB,EAAU,QAC1BqpB,EAAQ,SAAW,GACnBA,EAAQ,MAAQ,EAChB,UAAWtxB,KAAYiI,EAAU,QAAQ,UAChC,KAAK,UAAUjI,CAAQ,GAG5BA,EAAS,SAAS,MAAMA,EAAS,eAAe,EAEpDsxB,EAAQ,UAAY,GACpBA,EAAQ,OAAS,GACjB,WAAW,IAAM,CACTrpB,EAAU,YAGdqpB,EAAQ,SAAW,GACnC,EAAeO,EAAY,SAAWn8B,CAAqB,CAC3D,CACK,CACD,OAAQ,CACP,CACD,MAAO,CACH,MAAMuS,EAAY,KAAK,UAAWqpB,EAAUrpB,EAAU,cAAc,cAAc,MAAM,QACnFqpB,IAGLrpB,EAAU,OAAO,oBAAsBqpB,EAAQ,SAAWrpB,EAAU,OAAO,WAC9E,CACD,UAAW,CACP,MAAMA,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekhB,EAAkBlhB,EAAU,cAAc,SAAWjT,GAAgBo0B,EAAS1oB,EAAQ,cAAc,OAAQoxB,EAAQ1I,EAAO,QAASC,EAAeyI,EAAM,OAAQxI,EAAYwI,EAAM,KAAMC,EAAQ3I,EAAO,QAASG,EAAewI,EAAM,OAAQvI,EAAYuI,EAAM,KAAMrzB,EAAO0qB,EAAO,MACrVD,GAAmBE,GAAgBtsB,EAAU+zB,GAAaxH,CAAS,EACnE,KAAK,cAAa,EAEbC,GAAgBxsB,EAAU+zB,GAAatH,CAAS,EACrD,KAAK,cAAa,EAGlB5qB,GAAekyB,GAAapyB,EAAM,CAACpC,EAAUuC,IAAQ,KAAK,uBAAuBvC,EAAUuC,CAAG,CAAC,CAEtG,CACD,UAAUmB,EAAU,CAChB,MAAMiI,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekG,EAAQlG,EAAU,cAAc,MAAOmhB,IAAUppB,GAAA,YAAAA,EAAU,gBAAiBU,EAAQ,eAAe,OAAQhC,EAAO0qB,EAAO,MAAO0I,EAAQ1I,EAAO,QAAS2I,EAAQ3I,EAAO,QAASqI,EAAajzB,GAAiBsyB,GAAapyB,CAAI,EACpS,GAAI,EAAE+yB,GAAeK,EAAM,QAAY3jB,EAAM,UAAc4jB,EAAM,QAAU5jB,EAAM,eAC7E,MAAO,GAEX,MAAMmb,EAAYwI,EAAM,KAAMtI,EAAYuI,EAAM,KAChD,OAAOh1B,EAAU+zB,GAAaxH,CAAS,GAAKvsB,EAAU+zB,GAAatH,CAAS,GAAKiI,CACpF,CACD,gBAAgB/wB,KAAYvC,EAAS,CAC5BuC,EAAQ,UACTA,EAAQ,QAAU,IAAImwB,IAE1B,UAAWj6B,KAAUuH,EACjBuC,EAAQ,QAAQ,KAAK9J,GAAA,YAAAA,EAAQ,OAAO,CAE3C,CACD,OAAQ,CACP,CACL,CC1JO,eAAeo7B,GAA+B9hB,EAAQgQ,EAAU,GAAM,CACzE,MAAMhQ,EAAO,cAAc,kBAAmBjI,GACnC,QAAQ,QAAQ,IAAImpB,GAASlhB,EAAQjI,CAAS,CAAC,EACvDiY,CAAO,CACd,CCLO,MAAM+R,EAAK,CACd,aAAc,CACV,KAAK,OAAS,EACd,KAAK,OAAS,GACjB,CACD,KAAKr3B,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CCdA,MAAMs3B,GAAW,OAAQ7J,GAAY,EAC9B,MAAM8J,WAAe3Q,EAAuB,CAC/C,YAAYvZ,EAAW,CACnB,MAAMA,CAAS,CAClB,CACD,MAAMjI,EAAU4B,EAAOmc,EAAO,CACtB/d,EAAS,KAAK,SAAW,CAAC+d,IAG9B/d,EAAS,KAAK,OAAS,EAC1B,CACD,MAAO,CACH,MAAMiI,EAAY,KAAK,UAAWmqB,EAAOnqB,EAAU,cAAc,cAAc,MAAM,KAChFmqB,IAGLnqB,EAAU,OAAO,eAAiBmqB,EAAK,OAASnqB,EAAU,OAAO,WACpE,CACD,UAAW,CACV,CACD,UAAUjI,EAAU,CAChB,MAAMiI,EAAY,KAAK,UAAWkG,EAAQlG,EAAU,cAAc,MAAOmhB,IAAUppB,GAAA,YAAAA,EAAU,gBAAiBiI,EAAU,cAAc,eAAe,OACrJ,OAAOmhB,EAAO,QAAQ,QAAU,CAAC,CAACjb,EAAM,UAAYpR,EAAUm1B,GAAU9I,EAAO,QAAQ,IAAI,CAC9F,CACD,gBAAgB1oB,KAAYvC,EAAS,CAC5BuC,EAAQ,OACTA,EAAQ,KAAO,IAAIuxB,IAEvB,UAAWr7B,KAAUuH,EACjBuC,EAAQ,KAAK,KAAK9J,GAAA,YAAAA,EAAQ,IAAI,CAErC,CACD,MAAMoJ,EAAU,CACZA,EAAS,KAAK,QAAU,GACxB,MAAMiI,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAekF,EAAWlF,EAAU,cAAc,MAAM,SAAUrK,EAASqK,EAAU,OAAO,eAAgBoqB,EAAc3xB,EAAQ,cAAc,MAAM,KAC5M,GAAI,CAAC2xB,GAAe,CAACz0B,GAAUA,EAASyqB,IAAa,CAAClb,EAClD,OAEJ,MAAMmlB,EAActyB,EAAS,YAAW,EAAIiZ,EAAOxf,EAAY0T,EAAUmlB,CAAW,EAAGC,EAAkBtZ,EAAOrb,EAAQ0mB,EAAa+N,EAAY,OAAQ,CAAE,KAAAD,CAAM,EAAGpyB,EAChKiZ,EAAOrb,IAGXw0B,EAAK,QAAU,GACfA,EAAK,OAASG,EAAkBjO,EACnC,CACL,CC9CO,eAAekO,GAA4BtiB,EAAQgQ,EAAU,GAAM,CACtE,MAAMhQ,EAAO,cAAc,eAAgBjI,GAChC,QAAQ,QAAQ,IAAIkqB,GAAOlqB,CAAS,CAAC,EAC7CiY,CAAO,CACd,CCJA,MAAMuS,GAAc,EAAG1mB,GAAiB,EAClC2mB,GAAoB,uGAC1B,SAASC,GAAgBC,EAAY7vB,EAAOoC,EAAS,CACjD,KAAM,CAAE,QAAA0tB,CAAS,EAAGD,EACpB,GAAI,CAACC,EACD,MAAO,GAEX,MAAMC,EAAa1tB,GAAgBrC,EAAOoC,CAAO,EACjD,GAAI0tB,EAAQ,SAAS,MAAM,EACvB,OAAOA,EAAQ,QAAQH,GAAmB,IAAMI,CAAU,EAE9D,MAAMC,EAAeF,EAAQ,QAAQ,GAAG,EACxC,MAAO,GAAGA,EAAQ,UAAUJ,GAAaM,CAAY,CAAC,UAAUD,CAAU,IAAID,EAAQ,UAAUE,CAAY,CAAC,EACjH,CACO,eAAeC,GAAUlrB,EAAO,CACnC,OAAO,IAAI,QAASiD,GAAY,CAC5BjD,EAAM,QAAU,GAChB,MAAMmD,EAAM,IAAI,MAChBnD,EAAM,QAAUmD,EAChBA,EAAI,iBAAiB,OAAQ,IAAM,CAC/BnD,EAAM,QAAU,GAChBiD,GACZ,CAAS,EACDE,EAAI,iBAAiB,QAAS,IAAM,CAChCnD,EAAM,QAAU,OAChBA,EAAM,MAAQ,GACdA,EAAM,QAAU,GAChBtM,GAAW,EAAC,MAAM,GAAGjG,CAAW,mBAAmBuS,EAAM,MAAM,EAAE,EACjEiD,GACZ,CAAS,EACDE,EAAI,IAAMnD,EAAM,MACxB,CAAK,CACL,CACO,eAAemrB,GAAiBnrB,EAAO,CAC1C,GAAIA,EAAM,OAAS,MAAO,CACtB,MAAMkrB,GAAUlrB,CAAK,EACrB,MACH,CACDA,EAAM,QAAU,GAChB,MAAMyX,EAAW,MAAM,MAAMzX,EAAM,MAAM,EACpCyX,EAAS,GAKVzX,EAAM,QAAU,MAAMyX,EAAS,KAAI,GAJnC/jB,GAAS,EAAG,MAAM,GAAGjG,CAAW,kBAAkB,EAClDuS,EAAM,MAAQ,IAKlBA,EAAM,QAAU,EACpB,CACO,SAASorB,GAAkBprB,EAAOqrB,EAAWpwB,EAAO/C,EAAU,OACjE,MAAMozB,EAAiBT,GAAgB7qB,EAAO/E,IAAOlI,EAAAmF,EAAS,UAAT,YAAAnF,EAAkB,QAASkR,EAAc,EAAGsnB,EAAW,CACxG,MAAAtwB,EACA,IAAKowB,EAAU,IACf,KAAM,CACF,GAAGrrB,EACH,QAASsrB,CACZ,EACD,OAAQ,GACR,MAAOD,EAAU,MAAQA,EAAU,OACnC,aAAcA,EAAU,aACxB,OAAQA,EAAU,GAC1B,EACI,OAAO,IAAI,QAAQpoB,GAAW,CAC1B,MAAMuoB,EAAM,IAAI,KAAK,CAACF,CAAc,EAAG,CAAE,KAAM,eAAiB,CAAA,EAAGG,EAAS,KAAO,OAAO,KAAO,OAAO,WAAa,OAAQjU,EAAMiU,EAAO,gBAAgBD,CAAG,EAAGroB,EAAM,IAAI,MAC1KA,EAAI,iBAAiB,OAAQ,IAAM,CAC/BooB,EAAS,OAAS,GAClBA,EAAS,QAAUpoB,EACnBF,EAAQsoB,CAAQ,EAChBE,EAAO,gBAAgBjU,CAAG,CACtC,CAAS,EACD,MAAMkU,EAAe,SAAY,CAC7BD,EAAO,gBAAgBjU,CAAG,EAC1B,MAAMmU,EAAO,CACT,GAAG3rB,EACH,MAAO,GACP,QAAS,EACzB,EACY,MAAMkrB,GAAUS,CAAI,EACpBJ,EAAS,OAAS,GAClBA,EAAS,QAAUI,EAAK,QACxB1oB,EAAQsoB,CAAQ,CAC5B,EACQpoB,EAAI,iBAAiB,QAAS,IAAM,KAAKuoB,EAAc,CAAA,EACvDvoB,EAAI,IAAMqU,CAClB,CAAK,CACL,CCtFO,MAAMoU,GAAmB,CAAC,EAAG,EAAG,EAAG,CAAC,EAC9BC,GAAiB,CAAC,EAAG,EAAG,EAAG,CAAC,ECDlC,MAAMC,EAAW,CACpB,YAAYC,EAAO,CACf,KAAK,IAAM,EACX,KAAK,KAAO,IAAI,kBAAkBA,CAAK,CAC1C,CACD,UAAUC,EAAO,CACb,MAAMC,EAAQ,KAAK,KAAK,MAAM,KAAK,IAAK,KAAK,IAAMD,CAAK,EACxD,YAAK,KAAOC,EAAM,OACXA,EAAM,OAAO,CAACC,EAAKC,IAASD,EAAM,OAAO,aAAaC,CAAI,EAAG,EAAE,CACzE,CACD,UAAW,CACP,OAAO,KAAK,KAAK,KAAK,KAAK,CAC9B,CACD,cAAe,CAEX,YAAK,KAAO,EACL,KAAK,KAAK,KAAK,IAAM,CAAS,GAAK,KAAK,KAAK,KAAK,IAAM,CAAQ,GAAK,EAC/E,CACD,eAAgB,CACZ,IAAIC,EAAc,GAAIx2B,EAAO,EAC7B,MAAMy2B,EAAW,EAAGC,EAAY,EAChC,EAAG,CACC12B,EAAO,KAAK,KAAK,KAAK,KAAK,EAC3B,QAASo2B,EAAQp2B,EAAM,EAAEo2B,GAASK,EAAUD,GAAe,OAAO,aAAa,KAAK,KAAK,KAAK,KAAK,CAAC,EAAG,CAEnH,OAAiBx2B,IAAS02B,GAClB,OAAOF,CACV,CACD,kBAAmB,CACf,IAAIx2B,EAAO,KAAK,KAAK,KAAK,GAAG,EAAG22B,EAAM,EACtC,MAAMD,EAAY,EAAGE,EAAY,EACjC,QAAS32B,EAAS,EAAGD,IAAS02B,EAAWz2B,GAAUD,EAAO42B,EAAW52B,EAAO,KAAK,KAAK,KAAK,IAAMC,CAAM,EACnG02B,GAAO32B,EAEX,MAAM62B,EAAY,IAAI,WAAWF,CAAG,EACpC32B,EAAO,KAAK,KAAK,KAAK,KAAK,EAC3B,QAASic,EAAI,EAAGjc,IAAS02B,EAAW12B,EAAO,KAAK,KAAK,KAAK,KAAK,EAC3D,QAASo2B,EAAQp2B,EAAM,EAAEo2B,GAASM,EAAWG,EAAU5a,GAAG,EAAI,KAAK,KAAK,KAAK,KAAK,EAAG,CAGzF,OAAO4a,CACV,CACD,eAAgB,CACZ,UAAWD,EAAY,EAAGE,EAAS,EAAG,KAAK,KAAK,KAAK,GAAG,IAAMA,EAAQ,KAAK,KAAO,KAAK,KAAK,KAAK,GAAG,EAAIF,EAAW,CAEnH,KAAK,KACR,CACL,CC/CO,IAAIG,IACV,SAAUA,EAAgB,CACvBA,EAAeA,EAAe,QAAa,CAAC,EAAI,UAChDA,EAAeA,EAAe,QAAa,CAAC,EAAI,UAChDA,EAAeA,EAAe,kBAAuB,CAAC,EAAI,oBAC1DA,EAAeA,EAAe,gBAAqB,CAAC,EAAI,kBACxDA,EAAeA,EAAe,WAAgB,CAAC,EAAI,aACnDA,EAAeA,EAAe,WAAgB,CAAC,EAAI,aACnDA,EAAeA,EAAe,WAAgB,CAAC,EAAI,aACnDA,EAAeA,EAAe,WAAgB,CAAC,EAAI,YACvD,GAAGA,KAAmBA,GAAiB,CAAA,EAAG,ECVnC,IAAIC,IACV,SAAUA,EAAgB,CACvBA,EAAeA,EAAe,UAAe,EAAE,EAAI,YACnDA,EAAeA,EAAe,qBAA0B,GAAG,EAAI,uBAC/DA,EAAeA,EAAe,yBAA8B,GAAG,EAAI,2BACnEA,EAAeA,EAAe,mBAAwB,CAAC,EAAI,qBAC3DA,EAAeA,EAAe,iBAAsB,GAAG,EAAI,mBAC3DA,EAAeA,EAAe,MAAW,EAAE,EAAI,QAC/CA,EAAeA,EAAe,UAAe,EAAE,EAAI,WACvD,GAAGA,KAAmBA,GAAiB,CAAA,EAAG,ECJ1C,MAAMx+B,EAAS,CACX,EAAG,EACH,EAAG,CACP,EAAGy+B,GAAe,EAAG16B,GAAO,GAAK26B,GAAc,EAAGC,GAAa,EAAGC,GAAmB,EACrF,SAASC,GAAgBC,EAAYlB,EAAO,CACxC,MAAMmB,EAAS,CAAA,EACf,QAAStb,EAAI,EAAGA,EAAIma,EAAOna,IACvBsb,EAAO,KAAK,CACR,EAAGD,EAAW,KAAKA,EAAW,GAAG,EACjC,EAAGA,EAAW,KAAKA,EAAW,IAAM,CAAC,EACrC,EAAGA,EAAW,KAAKA,EAAW,IAAM,CAAC,CACjD,CAAS,EACDA,EAAW,KAAO,EAEtB,OAAOC,CACX,CACA,SAASC,GAAoBF,EAAYG,EAAKC,EAAeC,EAAsB,CAC/E,OAAQL,EAAW,SAAU,EAAA,CACzB,KAAKN,GAAe,yBAA0B,CAC1C,MAAMzW,EAAQkX,EAAI,OAAOC,EAAc,EAAK,CAAC,EAC7CJ,EAAW,MACX,MAAMM,EAAaN,EAAW,WAC9B/W,EAAM,YAAcqX,EAAa,OAAU,EAC3CrX,EAAM,gBAAkBqX,EAAa,MAAU,EAC/CrX,EAAM,oBAAsBqX,EAAa,KAAO,EAChD,MAAMC,GAAoBD,EAAa,KAAO,EAC9CrX,EAAM,UAAY+W,EAAW,aAAY,EAAK,GAC9C,MAAMQ,EAAoBR,EAAW,WACjCO,GACAF,EAAqBG,CAAiB,EAE1CR,EAAW,MACX,KACH,CACD,KAAKN,GAAe,qBAAsB,CACtCM,EAAW,MACX,MAAMS,EAAuB,CACzB,WAAYT,EAAW,UAAU,CAAC,EAClC,mBAAoBA,EAAW,UAAU,CAAC,EAC1C,KAAMA,EAAW,iBAAkB,CACnD,EACYG,EAAI,sBAAsB,KAAKM,CAAoB,EACnD,KACH,CACD,KAAKf,GAAe,iBAAkB,CAClCS,EAAI,SAAS,KAAK,CAACC,EAAc,EAAK,EAAGJ,EAAW,cAAe,CAAA,CAAC,EACpE,KACH,CACD,KAAKN,GAAe,mBAAoB,CACpC,GAAIS,EAAI,iBAAiB,SAAW,EAChC,MAAM,IAAI,UAAU,iDAAiD,EAEzEH,EAAW,MACXG,EAAI,OAAOC,EAAc,EAAK,CAAC,EAAE,cAAgB,CAC7C,KAAMJ,EAAW,aAAc,EAC/B,IAAKA,EAAW,aAAc,EAC9B,MAAOA,EAAW,aAAc,EAChC,OAAQA,EAAW,aAAc,EACjC,SAAU,CACN,MAAOA,EAAW,aAAc,EAChC,OAAQA,EAAW,aAAc,CACpC,EACD,gBAAiBA,EAAW,SAAU,EACtC,gBAAiBA,EAAW,SAAU,EACtC,KAAMA,EAAW,cAAe,CAChD,EACY,KACH,CACD,QACIA,EAAW,cAAa,EACxB,KACP,CACL,CACA,eAAeU,GAAgBV,EAAYG,EAAKQ,EAAUP,EAAeC,EAAsBO,EAAkB,CAC7G,MAAM3X,EAAQkX,EAAI,OAAOC,EAAc,EAAI,CAAC,EAC5CnX,EAAM,KAAO+W,EAAW,eACxB/W,EAAM,IAAM+W,EAAW,eACvB/W,EAAM,MAAQ+W,EAAW,eACzB/W,EAAM,OAAS+W,EAAW,eAC1B,MAAMM,EAAaN,EAAW,SAAU,EAAEa,GAAuBP,EAAa,OAAU,IAAMQ,GAAkBR,EAAa,MAAU,GACvIrX,EAAM,UAAYqX,EAAa,MAAU,GACzCrX,EAAM,UAAYqX,EAAa,MAAU,EACzC,MAAMS,EAAkB,IAAOT,EAAa,GAAK,EAC7CO,IACA5X,EAAM,gBAAkB8W,GAAgBC,EAAYe,CAAe,GAEvE,MAAMC,EAAY14B,GAAU,CACxB,KAAM,CAAE,EAAAxE,EAAG,EAAA0J,EAAG,EAAAC,CAAG,GAAIozB,EAAsB5X,EAAM,gBAAkBkX,EAAI,kBAAkB73B,CAAK,EAC9F,OAAIA,IAAU+3B,EAAqB,IAAI,EAC5B,CAAE,EAAAv8B,EAAG,EAAA0J,EAAG,EAAAC,EAAG,EAAG,GAAG,EAErB,CAAE,EAAA3J,EAAG,EAAA0J,EAAG,EAAAC,EAAG,EAAGkzB,EAAW,CAAC,GAAG78B,EAAI0J,EAAIC,GAAK,GAAK,CAAC,CAC/D,EACUqF,GAAS,IAAM,CACjB,GAAI,CACA,OAAO,IAAI,UAAUmW,EAAM,MAAOA,EAAM,OAAQ,CAAE,WAAY,MAAM,CAAE,CACzE,OACMgY,EAAO,CACV,GAAIA,aAAiB,cAAgBA,EAAM,OAAS,iBAChD,OAAO,KAEX,MAAMA,CACT,CACT,KACI,GAAInuB,GAAS,KACT,MAAM,IAAI,UAAU,4BAA4B,EAEpD,MAAMouB,EAAclB,EAAW,SAAQ,EAAI7B,EAAY6B,EAAW,mBAAoBmB,EAAY,GAAKD,EACjGE,EAAW,CAAC7tB,EAAK8rB,IAAQ,CAC3B,MAAMgC,EAAU9tB,IAAQ,EAAG+tB,EAAS/tB,EAAM,EAC1C,OAAU4qB,EAAUkD,CAAO,GAAKlD,EAAUkD,EAAU,CAAC,GAAK,IAAMlD,EAAUkD,EAAU,CAAC,GAAK,KACnF,GAAKhC,GAAO,GAAMiC,KACrBA,CACZ,EACI,GAAIR,EAAgB,CAChB,QAASS,EAAO,EAAG74B,EAAOw4B,EAAc,EAAG3tB,EAAM,EAAGiuB,EAAM,CAAC,CAAC,CAAC,CAAC,EAAGC,EAAO,EAAGA,EAAO,EAAGA,IACjF,GAAI/C,GAAiB+C,CAAI,EAAIxY,EAAM,OAAQ,CACvC,IAAIyY,EAAW,EAAGC,EAAY,EAAGC,EAAO,GACxC,KAAO,CAACA,GAAM,CACV,MAAMC,EAAON,EAGb,GAFAA,EAAOH,EAAS7tB,EAAK7K,CAAI,EACzB6K,GAAO7K,EAAO,EACV64B,IAASJ,EAAW,CACpBz4B,EAAOw4B,EAAc,EACrBM,EAAI,OAASL,EAAY,EACzB,QAASxc,EAAI,EAAGA,EAAI6c,EAAI,OAAQ7c,IAC5B6c,EAAI7c,CAAC,EAAIA,EAAIwc,EAAY,CAACxc,CAAC,EAAI,EAEtC,KACI,CACG4c,GAAQC,EAAI,OACZA,EAAI,KAAKA,EAAIK,CAAI,EAAE,OAAOL,EAAIK,CAAI,EAAE,CAAC,CAAC,CAAC,EAElCA,IAASV,GACdK,EAAI,KAAKA,EAAIK,CAAI,EAAE,OAAOL,EAAID,CAAI,EAAE,CAAC,CAAC,CAAC,EAE3C,UAAWh2B,KAAQi2B,EAAID,CAAI,EAAG,CAC1B,KAAM,CAAE,EAAAz9B,EAAG,EAAA0J,GAAG,EAAAC,GAAG,EAAAC,GAAMszB,EAASz1B,CAAI,EACpCuH,EAAM,KAAK,IAAI,CAAChP,EAAG0J,GAAGC,GAAGC,CAAC,EAAGgxB,GAAiB+C,CAAI,EAAIxY,EAAM,MACxD0V,GAAe8C,CAAI,EAAIE,EACtBD,GAAYzY,EAAM,MAAQ,EAAG,EAClCyY,GAAY,CACf,CACGF,EAAI,SAAW,GAAK94B,GAAQA,EAAO,IACnCA,GAEP,CACGg5B,IAAazY,EAAM,MAAQ,GAAK0Y,EAAY,KAC5CA,IACIjD,GAAiB+C,CAAI,EAAI9C,GAAe8C,CAAI,EAAIE,GAAa1Y,EAAM,SACnE2Y,EAAO,IAGlB,CACJ,CAGL3Y,EAAM,MAAQnW,EACdmW,EAAM,OAAS,MAAM,kBAAkBnW,CAAK,CAC/C,KACI,CACD,IAAIyuB,EAAO,EAAG74B,EAAOw4B,EAAc,EAAG3tB,EAAM,EAAGmuB,EAAW,GAAIE,EAAO,GACrE,MAAMJ,EAAM,CAAC,CAAC,CAAC,CAAC,EAChB,KAAO,CAACI,GAAM,CACV,MAAMC,EAAON,EAGb,GAFAA,EAAOH,EAAS7tB,EAAK7K,CAAI,EACzB6K,GAAO7K,EACH64B,IAASJ,EAAW,CACpBz4B,EAAOw4B,EAAc,EACrBM,EAAI,OAASL,EAAY,EACzB,QAASxc,EAAI,EAAGA,EAAI6c,EAAI,OAAQ7c,IAC5B6c,EAAI7c,CAAC,EAAIA,EAAIwc,EAAY,CAACxc,CAAC,EAAI,EAEtC,KACI,CACD,GAAI4c,IAASJ,EAAY,EAAG,CACxBS,EAAO,GACP,KACH,CACGL,GAAQC,EAAI,OACZA,EAAI,KAAKA,EAAIK,CAAI,EAAE,OAAOL,EAAIK,CAAI,EAAE,CAAC,CAAC,CAAC,EAElCA,IAASV,GACdK,EAAI,KAAKA,EAAIK,CAAI,EAAE,OAAOL,EAAID,CAAI,EAAE,CAAC,CAAC,CAAC,EAE3C,UAAWh2B,KAAQi2B,EAAID,CAAI,EAAG,CAC1B,KAAM,CAAE,EAAAz9B,EAAG,EAAA0J,EAAG,EAAAC,EAAG,EAAAC,IAAMszB,EAASz1B,CAAI,EACpCuH,EAAM,KAAK,IAAI,CAAChP,EAAG0J,EAAGC,EAAGC,EAAC,EAAIg0B,GAAY,EAC7C,CACGF,EAAI,QAAU,GAAK94B,GAAQA,EAAO,IAClCA,GAEP,CACJ,CACDugB,EAAM,MAAQnW,EACdmW,EAAM,OAAS,MAAM,kBAAkBnW,CAAK,CAE/C,CACL,CACA,eAAegvB,GAAW9B,EAAYG,EAAKQ,EAAUP,EAAeC,EAAsBO,EAAkB,CACxG,OAAQZ,EAAW,SAAU,EAAA,CACzB,KAAKN,GAAe,UAChB,MAAO,GACX,KAAKA,GAAe,MAChB,MAAMgB,GAAgBV,EAAYG,EAAKQ,EAAUP,EAAeC,CAAsC,EACtG,MACJ,KAAKX,GAAe,UAChBQ,GAAoBF,EAAYG,EAAKC,EAAeC,CAAoB,EACxE,MACJ,QACI,MAAM,IAAI,UAAU,uBAAuB,CAClD,CACD,MAAO,EACX,CACO,SAAS0B,GAAiB5B,EAAK,CAClC,UAAW6B,KAAa7B,EAAI,sBACxB,GAAI6B,EAAU,WAAaA,EAAU,qBAAuB,cAG5D,OAAOA,EAAU,KAAK,CAAC,GAAKA,EAAU,KAAK,CAAC,GAAK,GAErD,MAAO,IACX,CACO,eAAeC,GAAUC,EAAQtB,EAAkBD,EAAU,CAC3DA,IACDA,EAAW,IACf,MAAMj6B,EAAM,MAAM,MAAMw7B,CAAM,EAC9B,GAAI,CAACx7B,EAAI,IAAMA,EAAI,SAAW,IAC1B,MAAM,IAAI,UAAU,gBAAgB,EAExC,MAAMy7B,EAAS,MAAMz7B,EAAI,cACnBy5B,EAAM,CACR,MAAO,EACP,OAAQ,EACR,UAAW,EACX,SAAU,EACV,iBAAkB,EAClB,OAAQ,CAAE,EACV,SAAU,GACV,iBAAkB,CAAE,EACpB,gBAAiB,IAAI,UAAU,EAAG,EAAG,CAAE,WAAY,OAAQ,EAC3D,SAAU,CAAE,EACZ,sBAAuB,CAAE,CACjC,EAAOH,EAAa,IAAIpB,GAAW,IAAI,kBAAkBuD,CAAM,CAAC,EAC5D,GAAInC,EAAW,UAAU,CAAC,IAAM,SAC5B,MAAM,IAAI,MAAM,0BAA0B,EAE9CG,EAAI,MAAQH,EAAW,eACvBG,EAAI,OAASH,EAAW,eACxB,MAAMM,EAAaN,EAAW,SAAU,EAAEoC,GAAwB9B,EAAa,OAAU,IACzFH,EAAI,UAAYG,EAAa,OAAU,EACvCH,EAAI,UAAYG,EAAa,KAAO,EACpC,MAAM+B,EAAmB,IAAO/B,EAAa,GAAK,EAAIgC,EAAuBtC,EAAW,WACxFG,EAAI,iBAAmBH,EAAW,WAC9BG,EAAI,mBAAqB,IACzBA,EAAI,kBAAoBA,EAAI,iBAAmB,IAAO,IAEtDiC,IACAjC,EAAI,iBAAmBJ,GAAgBC,EAAYqC,CAAgB,GAEvE,MAAME,GAAmB,IAAM,CAC3B,GAAI,CACA,OAAO,IAAI,UAAUpC,EAAI,MAAOA,EAAI,OAAQ,CAAE,WAAY,MAAM,CAAE,CACrE,OACMc,EAAO,CACV,GAAIA,aAAiB,cAAgBA,EAAM,OAAS,iBAChD,OAAO,KAEX,MAAMA,CACT,CACT,KACI,GAAIsB,GAAmB,KACnB,MAAM,IAAI,MAAM,4BAA4B,EAEhD,KAAM,CAAE,EAAAz+B,EAAG,EAAA0J,EAAG,EAAAC,CAAG,EAAG0yB,EAAI,iBAAiBmC,CAAoB,EAC7DC,EAAgB,KAAK,IAAIH,EAAuB,CAACt+B,EAAG0J,EAAGC,EAAG,GAAG,EAAI,CAAC,EAAG,EAAG,EAAG,CAAC,CAAC,EAC7E,QAASkX,EAAI,EAAGA,EAAI4d,EAAgB,KAAK,OAAQ5d,GAAK,EAClD4d,EAAgB,KAAK,WAAW5d,EAAG,EAAGA,CAAC,EAE3Cwb,EAAI,gBAAkBoC,EACtB,IAAIC,EAAa,GAAIC,EAAsB,GAAMjC,EAAoB,GACrE,MAAMkC,EAAiBpD,IACfA,IACAmD,EAAsB,IAEnBD,GAELnC,EAAwBzrB,IACtBA,GAAY,OACZ4rB,EAAoB5rB,GAEjB4rB,GAEX,GAAI,CACA,GACQiC,IACAtC,EAAI,OAAO,KAAK,CACZ,KAAM,EACN,IAAK,EACL,MAAO,EACP,OAAQ,EACR,eAAgBV,GAAe,QAC/B,MAAO,IAAI,UAAU,EAAG,EAAG,CAAE,WAAY,OAAQ,EACjD,cAAe,KACf,mBAAoB,GACpB,UAAW,EACX,SAAU,GACV,gBAAiB,CAAE,EACnB,SAAU,EACV,WAAY,CAChC,CAAiB,EACD+C,IACAhC,EAAoB,GACpBiC,EAAsB,UAErB,CAAE,MAAMX,GAAW9B,EAAYG,EAAKQ,EAAU+B,EAAerC,EAAsBO,CAAgB,GAC5GT,EAAI,OAAO,SACX,UAAWlX,KAASkX,EAAI,OAAQ,CAC5B,GAAIlX,EAAM,oBAAsBA,EAAM,YAAc,EAAG,CACnDkX,EAAI,UAAY,IAChB,KACH,CACDA,EAAI,WAAalX,EAAM,SAC1B,CACD,OAAOkX,CACV,OACMc,EAAO,CACV,MAAIA,aAAiB,UACX,IAAI,MAAM,6BAA6BuB,CAAU,KAAKvB,EAAM,OAAO,GAAG,EAE1EA,CACT,CACL,CACO,SAAS0B,GAAQ/8B,EAAM,CAC1B,KAAM,CAAE,QAAA2M,EAAS,OAAA3J,EAAQ,SAAAoC,EAAU,MAAA4B,CAAO,EAAGhH,EAAMkN,EAAQ9H,EAAS,MACpE,GAAI,EAAC8H,GAAA,MAAAA,EAAO,UAAW,CAACA,EAAM,IAC1B,OAEJ,MAAM8vB,EAAkB,IAAI,gBAAgB9vB,EAAM,QAAQ,MAAOA,EAAM,QAAQ,MAAM,EAAG+vB,EAAmBD,EAAgB,WAAW,IAAI,EAC1I,GAAI,CAACC,EACD,MAAM,IAAI,MAAM,2CAA2C,EAE/DA,EAAiB,sBAAwB,MACzCA,EAAiB,sBAAwB,GACzCA,EAAiB,UAAU3hC,EAAO,EAAGA,EAAO,EAAG0hC,EAAgB,MAAOA,EAAgB,MAAM,EACxF53B,EAAS,eAAiB,SAC1BA,EAAS,aAAe8H,EAAM,cAAgBgtB,IAElD,IAAI0C,EAAax3B,EAAS,UAAY20B,GACtC,MAAMpsB,EAAM,CAAE,EAAG,CAACT,EAAM,QAAQ,MAAQ7N,GAAM,EAAG,CAAC6N,EAAM,QAAQ,OAAS7N,IAAQgkB,EAAQnW,EAAM,QAAQ,OAAO0vB,CAAU,EAIxH,GAHIx3B,EAAS,UAAY,SACrBA,EAAS,QAAU40B,IAEnB,EAAC3W,EAAM,OAIX,QADA1W,EAAQ,MAAM3J,EAASkK,EAAM,QAAQ,MAAOlK,EAASkK,EAAM,QAAQ,MAAM,EACjEmW,EAAM,eAAc,CACxB,KAAKwW,GAAe,WACpB,KAAKA,GAAe,WACpB,KAAKA,GAAe,WACpB,KAAKA,GAAe,WACpB,KAAKA,GAAe,QAChBoD,EAAiB,UAAU5Z,EAAM,OAAQA,EAAM,KAAMA,EAAM,GAAG,EAC9D1W,EAAQ,UAAUqwB,EAAiBrvB,EAAI,EAAGA,EAAI,CAAC,EAC/CsvB,EAAiB,UAAU3hC,EAAO,EAAGA,EAAO,EAAG0hC,EAAgB,MAAOA,EAAgB,MAAM,EAC5F,MACJ,KAAKnD,GAAe,QAChBoD,EAAiB,UAAU5Z,EAAM,OAAQA,EAAM,KAAMA,EAAM,GAAG,EAC9D1W,EAAQ,UAAUqwB,EAAiBrvB,EAAI,EAAGA,EAAI,CAAC,EAC/C,MACJ,KAAKksB,GAAe,kBAChBoD,EAAiB,UAAU5Z,EAAM,OAAQA,EAAM,KAAMA,EAAM,GAAG,EAC9D1W,EAAQ,UAAUqwB,EAAiBrvB,EAAI,EAAGA,EAAI,CAAC,EAC/CsvB,EAAiB,UAAU3hC,EAAO,EAAGA,EAAO,EAAG0hC,EAAgB,MAAOA,EAAgB,MAAM,EACvF9vB,EAAM,QAAQ,iBAAiB,OAIhC+vB,EAAiB,aAAa/vB,EAAM,QAAQ,gBAAiBS,EAAI,EAAGA,EAAI,CAAC,EAHzEsvB,EAAiB,aAAa/vB,EAAM,QAAQ,OAAO+sB,EAAU,EAAE,MAAOtsB,EAAI,EAAI0V,EAAM,KAAM1V,EAAI,EAAI0V,EAAM,GAAG,EAK/G,MACJ,KAAKwW,GAAe,gBAChB,CACI,MAAMqD,EAAoBD,EAAiB,aAAa3hC,EAAO,EAAGA,EAAO,EAAG0hC,EAAgB,MAAOA,EAAgB,MAAM,EACzHC,EAAiB,UAAU5Z,EAAM,OAAQA,EAAM,KAAMA,EAAM,GAAG,EAC9D1W,EAAQ,UAAUqwB,EAAiBrvB,EAAI,EAAGA,EAAI,CAAC,EAC/CsvB,EAAiB,UAAU3hC,EAAO,EAAGA,EAAO,EAAG0hC,EAAgB,MAAOA,EAAgB,MAAM,EAC5FC,EAAiB,aAAaC,EAAmB5hC,EAAO,EAAGA,EAAO,CAAC,CACtE,CACD,KACP,CAED,GADA8J,EAAS,SAAW4B,EAAM,MACtB5B,EAAS,QAAUie,EAAM,UAAW,CAEpC,GADAje,EAAS,SAAWie,EAAM,UACtB,EAAEuZ,GAAc1vB,EAAM,QAAQ,OAAO,OAAQ,CAC7C,GAAI,EAAE9H,EAAS,cAAgB80B,GAC3B,OAEJ0C,EAAa3C,GACbgD,EAAiB,UAAU3hC,EAAO,EAAGA,EAAO,EAAG0hC,EAAgB,MAAOA,EAAgB,MAAM,CAC/F,CACD53B,EAAS,SAAWw3B,CACvB,CACDjwB,EAAQ,MAAMO,EAAM,QAAQ,MAAQlK,EAAQkK,EAAM,QAAQ,OAASlK,CAAM,EAC7E,CACO,eAAem6B,GAAajwB,EAAO,CACtC,GAAIA,EAAM,OAAS,MAAO,CACtB,MAAMkrB,GAAUlrB,CAAK,EACrB,MACH,CACDA,EAAM,QAAU,GAChB,GAAI,CACAA,EAAM,QAAU,MAAMmvB,GAAUnvB,EAAM,MAAM,EAC5CA,EAAM,aAAeivB,GAAiBjvB,EAAM,OAAO,GAAKgtB,GACnDhtB,EAAM,eACPA,EAAM,aAAe,IAE5B,MACK,CACFA,EAAM,MAAQ,EACjB,CACDA,EAAM,QAAU,EACpB,CCzaA,MAAMtQ,GAAS,EAAG0pB,GAAe,EAAG2D,GAAQ,GAAI3I,GAAe,EACxD,MAAM8b,EAAY,CACrB,YAAY9nB,EAAQ,CAChB,KAAK,WAAa,CAAC,QAAS,QAAQ,EACpC,KAAK,eAAiB,MAAO0iB,GAAe,CACxC,GAAI,CAAC,KAAK,QAAQ,UACd,MAAM,IAAI,MAAM,GAAGr9B,CAAW,8BAA8B,EAEhE,MAAM,KAAK,QAAQ,UAAU,CACzB,IAAKq9B,EAAW,IAChB,KAAMA,EAAW,KACjB,aAAcA,EAAW,cAAgB,GACzC,IAAKA,EAAW,GAChC,CAAa,CACb,EACQ,KAAK,QAAU1iB,CAClB,CACD,SAASpI,EAAO,CACP,KAAK,QAAQ,SACd,KAAK,QAAQ,OAAS,IAE1B,KAAK,QAAQ,OAAO,KAAKA,CAAK,CACjC,CACD,KAAKlN,EAAM,CACP,KAAM,CAAE,QAAA2M,EAAS,OAAA3J,EAAQ,SAAAoC,EAAU,QAAAmF,CAAO,EAAKvK,EAAMkN,EAAQ9H,EAAS,MAAO7D,EAAU2L,GAAA,YAAAA,EAAO,QAC9F,GAAKA,EAIL,IADAP,EAAQ,YAAcpC,EAClB2C,EAAM,KAAOA,EAAM,QACnB6vB,GAAQ/8B,CAAI,UAEPuB,EAAS,CACd,MAAMkgB,EAAQvU,EAAM,MAAOS,EAAM,CAC7B,EAAG,CAAC3K,EACJ,EAAG,CAACA,CACpB,EAAemY,EAAWnY,EAASpG,GACvB+P,EAAQ,UAAUpL,EAASoM,EAAI,EAAGA,EAAI,EAAGwN,EAAUA,EAAWsG,CAAK,CACtE,CACD9U,EAAQ,YAAc2Z,GACzB,CACD,eAAgB,CACZ,OAAO2D,EACV,CACD,MAAM,KAAK5c,EAAW,CAClB,MAAMvH,EAAUuH,EAAU,cAC1B,GAAI,GAACvH,EAAQ,SAAW,CAAC,KAAK,QAAQ,WAGtC,UAAWyyB,KAAazyB,EAAQ,QAC5B,MAAM,KAAK,QAAQ,UAAUyyB,CAAS,CAE7C,CACD,UAAUnzB,EAAU,CAChB,GAAIA,EAAS,QAAU,SAAWA,EAAS,QAAU,SACjD,OAEC,KAAK,QAAQ,SACd,KAAK,QAAQ,OAAS,IAE1B,MAAMmzB,EAAYnzB,EAAS,UAC3B,GAAI,CAACmzB,EACD,OAEU,KAAK,QAAQ,OAAO,KAAM52B,GAAMA,EAAE,OAAS42B,EAAU,MAAQ52B,EAAE,SAAW42B,EAAU,GAAG,GAE5F,KAAK,eAAeA,CAAS,EAAE,KAAK,IAAM,CAC3C,KAAK,UAAUnzB,CAAQ,CACvC,CAAa,CAER,CACD,aAAaiI,EAAWjI,EAAU,CAC9B,GAAIA,EAAS,QAAU,SAAWA,EAAS,QAAU,SACjD,OAEC,KAAK,QAAQ,SACd,KAAK,QAAQ,OAAS,IAE1B,MAAMi4B,EAAS,KAAK,QAAQ,OAAQ9E,EAAYnzB,EAAS,UACzD,GAAI,CAACmzB,EACD,OAEJ,MAAMpwB,EAAQ/C,EAAS,aAAY,EAAI8H,EAAQmwB,EAAO,KAAM17B,GAAMA,EAAE,OAAS42B,EAAU,MAAQ52B,EAAE,SAAW42B,EAAU,GAAG,EACzH,GAAI,CAACrrB,EACD,OAEJ,MAAMowB,EAAe/E,EAAU,cAAgBrrB,EAAM,aACrD,GAAIA,EAAM,QAAS,CACf,WAAW,IAAM,CACb,KAAK,aAAaG,EAAWjI,CAAQ,CACrD,CAAa,EACD,MACH,EACK,SAAY,CACd,IAAIqzB,EACAvrB,EAAM,SAAW/E,EACjBswB,EAAW,MAAMH,GAAkBprB,EAAOqrB,EAAWpwB,EAAO/C,CAAQ,EAGpEqzB,EAAW,CACP,MAAAtwB,EACA,KAAM+E,EACN,QAASA,EAAM,QACf,IAAKA,EAAM,IACX,QAASA,EAAM,QACf,aAAcA,EAAM,aACpB,OAAQ,GACR,MAAOqrB,EAAU,OAASA,EAAU,OAC9BA,EAAU,MAAQA,EAAU,OAC5BrrB,EAAM,OAASoU,GACrB,aAAcgc,EACd,OAAQ/E,EAAU,GACtC,EAEiBE,EAAS,QACVA,EAAS,MAAQ,GAErB,MAAM9oB,EAAO4oB,EAAU,MAAQnzB,EAAS,UAAWm4B,EAAQhF,EAAU,OAASnzB,EAAS,WAAY4yB,EAAa,CAC5G,MAAOS,EACP,KAAA9oB,EACA,MAAA4tB,CAChB,EACYn4B,EAAS,MAAQ4yB,EAAW,MAC5B5yB,EAAS,UAAY4yB,EAAW,KAChC5yB,EAAS,WAAa4yB,EAAW,KAC7C,IACK,CACL,CClIO,MAAMwF,EAAQ,CACjB,aAAc,CACV,KAAK,IAAM,GACX,KAAK,IAAM,EACd,CACD,KAAKx9B,EAAM,CACFA,IAGDA,EAAK,MAAQ,SACb,KAAK,IAAMA,EAAK,KAEhBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,eAAiB,SACtB,KAAK,aAAeA,EAAK,cAEzBA,EAAK,MAAQ,SACb,KAAK,IAAMA,EAAK,KAEhBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEzB,CACL,CC3BO,MAAMy9B,EAAqB,CAC9B,YAAYnoB,EAAQ,CAChB,KAAK,GAAK,iBACV,KAAK,QAAUA,CAClB,CACD,MAAM,WAAY,CACd,aAAM,QAAQ,UACP,EACV,CACD,YAAYxP,EAAS9J,EAAQ,CACzB,GAAI,EAACA,GAAA,MAAAA,EAAQ,SACT,OAEC8J,EAAQ,UACTA,EAAQ,QAAU,IAEtB,MAAM43B,EAAiB53B,EAAQ,QAC/B,UAAWH,KAAQ3J,EAAO,QAAS,CAC/B,MAAM2hC,EAAWD,EAAe,KAAK/7B,GAAKA,EAAE,OAASgE,EAAK,MAAQhE,EAAE,MAAQgE,EAAK,GAAG,EACpF,GAAIg4B,EACAA,EAAS,KAAKh4B,CAAI,MAEjB,CACD,MAAMi4B,EAAU,IAAIJ,GACpBI,EAAQ,KAAKj4B,CAAI,EACjB+3B,EAAe,KAAKE,CAAO,CAC9B,CACJ,CACJ,CACD,aAAc,CACV,MAAO,EACV,CACL,CC5BA,MAAMC,GAAY,EAClB,SAASC,GAAqBxoB,EAAQ,CAC9BA,EAAO,YAGXA,EAAO,UAAY,MAAOtV,GAAS,CAC/B,GAAI,CAACA,EAAK,MAAQ,CAACA,EAAK,IACpB,MAAM,IAAI,MAAM,GAAGrF,CAAW,2BAA2B,EAK7D,GAHK2a,EAAO,SACRA,EAAO,OAAS,IAEhB,CAAAA,EAAO,OAAO,KAAM,GAAM,EAAE,OAAStV,EAAK,MAAQ,EAAE,SAAWA,EAAK,GAAG,EAG3E,GAAI,CACA,MAAMkN,EAAQ,CACV,IAAKlN,EAAK,KAAO,GACjB,KAAMA,EAAK,MAAQA,EAAK,IACxB,OAAQA,EAAK,IACb,KAAMA,EAAK,IAAI,UAAUA,EAAK,IAAI,OAAS69B,EAAS,EACpD,MAAO,GACP,QAAS,GACT,aAAc79B,EAAK,aACnB,MAAOA,EAAK,OAASA,EAAK,OAASA,EAAK,MAAQA,EAAK,OAAS,MAC9E,EACYsV,EAAO,OAAO,KAAKpI,CAAK,EACxB,IAAI6wB,EACA/9B,EAAK,IACL+9B,EAAYZ,GAGZY,EAAY/9B,EAAK,aAAeq4B,GAAmBD,GAEvD,MAAM2F,EAAU7wB,CAAK,CACxB,MACK,CACF,MAAM,IAAI,MAAM,GAAGvS,CAAW,IAAIqF,EAAK,MAAQA,EAAK,GAAG,YAAY,CACtE,CACT,EACA,CACO,eAAeg+B,GAAe1oB,EAAQgQ,EAAU,GAAM,CACzDwY,GAAqBxoB,CAAM,EAC3B,MAAM2oB,EAAY,IAAIR,GAAqBnoB,CAAM,EACjD,MAAMA,EAAO,UAAU2oB,EAAW3Y,CAAO,EACzC,MAAMhQ,EAAO,SAAS,IAAI8nB,GAAY9nB,CAAM,EAAGgQ,CAAO,CAC1D,CClDO,MAAM4Y,WAAkBxnB,EAAgB,CAC3C,aAAc,CACV,QACA,KAAK,KAAO,EACf,CACD,KAAK1W,EAAM,CACFA,IAGL,MAAM,KAAKA,CAAI,EACXA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CCdO,MAAMm+B,WAAqBznB,EAAgB,CAC9C,aAAc,CACV,QACA,KAAK,KAAO,EACf,CACD,KAAK1W,EAAM,CACFA,IAGL,MAAM,KAAKA,CAAI,EACXA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CCbO,MAAMo+B,EAAK,CACd,aAAc,CACV,KAAK,MAAQ,EACb,KAAK,MAAQ,IAAIF,GACjB,KAAK,SAAW,IAAIC,EACvB,CACD,KAAKn+B,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEtB,KAAK,MAAM,KAAKA,EAAK,KAAK,EAC1B,KAAK,SAAS,KAAKA,EAAK,QAAQ,EACnC,CACL,CCjBA,MAAMq+B,GAAS,EAAGC,GAAgB,GAAIC,GAAS,EAAGC,GAAgB,EAC3D,SAASC,GAAWr5B,EAAU4B,EAAOV,EAAY,CACpD,GAAI,CAAClB,EAAS,KACV,OAEJ,MAAMs5B,EAAOt5B,EAAS,KACtB,IAAIu5B,EAAc,GAClB,GAAIv5B,EAAS,SAET,GADAs5B,EAAK,WAAa13B,EAAM,MACpB03B,EAAK,WAAat5B,EAAS,KAAK,MAChCu5B,EAAc,GACdv5B,EAAS,SAAW,GACpBs5B,EAAK,UAAYL,GACjBK,EAAK,KAAOL,OAGZ,QAeR,GAZIK,EAAK,WAAaJ,IAGlBl5B,EAAS,WAGTu5B,EACAD,EAAK,KAAOL,GAGZK,EAAK,MAAQ13B,EAAM,MAEnB03B,EAAK,KAAOA,EAAK,UACjB,OAMJ,GAJAA,EAAK,KAAOL,GACRj5B,EAAS,KAAK,MAAQm5B,IACtBn5B,EAAS,KAAK,QAEdA,EAAS,KAAK,QAAUm5B,GAAQ,CAChCn5B,EAAS,QAAO,EAChB,MACH,CACD,MAAMw5B,EAAargC,EAAcigC,GAAel4B,EAAW,KAAK,EAAGu4B,EAActgC,EAAcigC,GAAel4B,EAAW,KAAK,EAC9HlB,EAAS,SAAS,EAAInH,EAAc2gC,CAAU,EAC9Cx5B,EAAS,SAAS,EAAInH,EAAc4gC,CAAW,EAC/Cz5B,EAAS,SAAW,GACpBs5B,EAAK,UAAYL,GACjBK,EAAK,KAAOL,GACZj5B,EAAS,MAAK,EACd,MAAM05B,EAAc15B,EAAS,QAAQ,KACjC05B,IACAJ,EAAK,MAAQpgC,EAAcwgC,EAAY,MAAM,KAAK,EAAIhkC,EACtD4jC,EAAK,SAAWpgC,EAAcwgC,EAAY,SAAS,KAAK,EAAIhkC,EAEpE,CCpDA,MAAMujC,GAAS,EAAGtwB,GAAW,EAAGuwB,GAAgB,GACzC,MAAMS,EAAY,CACrB,YAAY1xB,EAAW,CACnB,KAAK,UAAYA,CACpB,CACD,KAAKjI,EAAU,CACX,MAAMiI,EAAY,KAAK,UAAW0P,EAAmB3X,EAAS,QAAS05B,EAAc/hB,EAAiB,KACjG+hB,IAGL15B,EAAS,KAAO,CACZ,MAAOiI,EAAU,OAAO,aAChB/O,EAAcwgC,EAAY,MAAM,KAAK,GAAKA,EAAY,MAAM,KAAO/wB,GAAW5Q,EAAS,GACvFkQ,EAAU,OAAO,aACjBvS,EACFujC,GACN,UAAWA,GACX,SAAUhxB,EAAU,OAAO,aACnB/O,EAAcwgC,EAAY,SAAS,KAAK,GAAKA,EAAY,SAAS,KAAO/wB,GAAW5Q,EAAS,GAC7FkQ,EAAU,OAAO,aACjBvS,EACFujC,GACN,KAAMA,GACN,MAAOS,EAAY,KAC/B,EACY15B,EAAS,KAAK,UAAYi5B,KAC1Bj5B,EAAS,KAAK,SAAWk5B,IAEzBl5B,EAAS,KAAK,OAASi5B,KACvBj5B,EAAS,KAAK,MAAQk5B,IAEtBl5B,EAAS,OACTA,EAAS,SAAWA,EAAS,KAAK,MAAQi5B,IAEjD,CACD,UAAUj5B,EAAU,CAChB,MAAO,CAACA,EAAS,SACpB,CACD,YAAYU,KAAYvC,EAAS,CACxBuC,EAAQ,OACTA,EAAQ,KAAO,IAAIs4B,IAEvB,UAAWpiC,KAAUuH,EACjBuC,EAAQ,KAAK,KAAK9J,GAAA,YAAAA,EAAQ,IAAI,CAErC,CACD,OAAOoJ,EAAU4B,EAAO,CAChB,CAAC,KAAK,UAAU5B,CAAQ,GAAK,CAACA,EAAS,MAG3Cq5B,GAAWr5B,EAAU4B,EAAO,KAAK,UAAU,OAAO,IAAI,CACzD,CACL,CCtDO,eAAeg4B,GAAgB1pB,EAAQgQ,EAAU,GAAM,CAC1D,MAAMhQ,EAAO,mBAAmB,OAAQ,MAAOjI,GACpC,QAAQ,QAAQ,IAAI0xB,GAAY1xB,CAAS,CAAC,EAClDiY,CAAO,CACd,CCLO,SAAS5Y,GAAS1M,EAAM,CAC3B,KAAM,CAAE,QAAA2M,EAAS,SAAAvH,EAAU,OAAApC,GAAWhD,EAAMib,EAAY7V,EAAS,UAAW65B,EAAU,EACtFtyB,EAAQ,OAAO,CAAC3J,EAAQi8B,CAAO,EAC/BtyB,EAAQ,OAAO3J,EAAQi8B,CAAO,EAC9BtyB,EAAQ,SAAUsO,GAAA,YAAAA,EAAW,MAAO,MACxC,CCJA,MAAMgP,GAAQ,EACP,MAAMiV,EAAW,CACpB,aAAc,CACV,KAAK,WAAa,CAAC,MAAM,CAC5B,CACD,KAAKl/B,EAAM,CACP0M,GAAS1M,CAAI,CAChB,CACD,eAAgB,CACZ,OAAOiqB,EACV,CACL,CCXO,eAAekV,GAAc7pB,EAAQgQ,EAAU,GAAM,CACxD,MAAMhQ,EAAO,SAAS,IAAI4pB,GAAc5Z,CAAO,CACnD,CCFA,MAAMjmB,GAAO,GACN,MAAM+/B,EAAc,CACvB,MAAO,CACN,CACD,UAAUh6B,EAAU,CAChB,MAAQ,CAACxD,GAAO,GACZ,CAACwD,EAAS,WACVA,EAAS,UAAU,cAAc,cAAc,OAAO,QAAQ,SAAS,MAC9E,CACD,KAAKA,EAAU,CACX,MAAMiI,EAAYjI,EAAS,UAAWU,EAAUuH,EAAU,cAAegyB,EAAkBv5B,EAAQ,cAAc,OAAO,QAAQ,SAChI,GAAIlE,GAAO,GAAI,CAACy9B,EAAgB,OAC5B,OAEJ,MAAMC,EAAgBD,EAAgB,MAAO9sB,EAAWlF,EAAU,cAAc,MAAM,SACtF,GAAI,CAACkF,EACD,OAEJ,MAAMjM,EAAa+G,EAAU,OAAO,KAAMkyB,EAAe,CACrD,EAAGj5B,EAAW,MAAQjH,GACtB,EAAGiH,EAAW,OAASjH,EACnC,EAAWmgC,EAAiBH,EAAgB,OAAQj+B,EAASgE,EAAS,UAAS,EAAKk6B,EAAeG,EAAiB,CACxG,GAAIltB,EAAS,EAAIgtB,EAAa,GAAKn+B,EACnC,GAAImR,EAAS,EAAIgtB,EAAa,GAAKn+B,CAC/C,EAAW,CAAE,OAAA2B,CAAQ,EAAGqC,EAChBrC,EAAO,IAAM08B,EAAe,EAAI18B,EAAO,GAAKy8B,EAC5Cz8B,EAAO,IAAM08B,EAAe,EAAI18B,EAAO,GAAKy8B,CAC/C,CACL,CC5BO,eAAeE,GAAkBpqB,EAAQgQ,EAAU,GAAM,CAC5D,MAAMhQ,EAAO,SAAS,WAAY,IACvB,QAAQ,QAAQ,IAAI8pB,EAAe,EAC3C9Z,CAAO,CACd,CCJA,MAAMyI,GAAgB,IAAMhgB,GAAW,EAChC,MAAM+gB,WAAkBjI,EAAwB,CACnD,YAAYxZ,EAAW,CACnB,MAAMA,CAAS,CAClB,CACD,OAAQ,CACP,CACD,MAAO,CACN,CACD,SAAS9I,EAAI,CACT,MAAM8I,EAAY,KAAK,UACnB9I,EAAG,kBAAoB,SACvBA,EAAG,gBAAkBjG,EAAciG,EAAG,QAAQ,KAAK,QAAQ,QAAQ,EAAI8I,EAAU,OAAO,YAE5F,MAAM8b,EAAW5kB,EAAG,gBAAiBI,EAAOJ,EAAG,YAAa,EAAExC,EAAQsL,EAAU,UAAU,SAAS,YAAY1I,EAAMwkB,CAAQ,EAC7H,UAAW3kB,KAAMzC,EAAO,CACpB,GAAIwC,IAAOC,GAAM,CAACA,EAAG,QAAQ,KAAK,QAAQ,QAAUA,EAAG,WAAaA,EAAG,SACnE,SAEJ,MAAMI,EAAOJ,EAAG,YAAW,EAAI,CAAE,GAAA7F,EAAI,GAAAC,CAAI,EAAGJ,EAAamG,EAAMC,CAAI,EAAG+6B,EAASp7B,EAAG,QAAQ,KAAK,QAAQ,OAAQq7B,EAAKjhC,GAAMghC,EAAO,EAAI5R,IAAgB8R,EAAKjhC,GAAM+gC,EAAO,EAAI5R,IAAgB+R,EAAWt7B,EAAG,KAAK,MAAQD,EAAG,KAAK,MAAOw7B,EAAWhyB,GAAW+xB,EAC3Pv7B,EAAG,SAAS,GAAKq7B,EAAKE,EACtBv7B,EAAG,SAAS,GAAKs7B,EAAKC,EACtBt7B,EAAG,SAAS,GAAKo7B,EAAKG,EACtBv7B,EAAG,SAAS,GAAKq7B,EAAKE,CACzB,CACJ,CACD,UAAU36B,EAAU,CAChB,OAAOA,EAAS,QAAQ,KAAK,QAAQ,MACxC,CACD,OAAQ,CACP,CACL,CC/BO,eAAe46B,GAAgC1qB,EAAQgQ,EAAU,GAAM,CAC1E,MAAMhQ,EAAO,cAAc,mBAAoBjI,GACpC,QAAQ,QAAQ,IAAIyhB,GAAUzhB,CAAS,CAAC,EAChDiY,CAAO,CACd,CCJA,MAAMjmB,GAAO,GAAK4gC,GAAe,GAAIC,GAAkB,EACvD,SAASC,GAAa57B,EAAImE,EAAIlE,EAAI47B,EAAIp5B,EAAOq5B,EAAY,CACrD,MAAMj/B,EAAShE,EAAOmH,EAAG,QAAQ,WAAW,OAAO,MAAQyC,EAAM,OAAUi5B,GAAcC,GAAiBE,CAAE,EAC5G77B,EAAG,KAAK,OAASnD,EAAS/B,GAC1BmF,EAAG,KAAK,OAASpD,EACbg/B,GAAMC,IACN77B,EAAG,KAAK,MAAQ,EAChBA,EAAG,QAAO,EAElB,CACO,SAAS87B,GAAO/7B,EAAIC,EAAIwC,EAAOq5B,EAAY,CAC9C,MAAM33B,EAAKnE,EAAG,UAAS,EAAI67B,EAAK57B,EAAG,YAC/BkE,IAAO,QAAa03B,IAAO,OAC3B77B,EAAG,QAAO,EAELmE,IAAO,QAAa03B,IAAO,OAChC57B,EAAG,QAAO,EAELkE,IAAO,QAAa03B,IAAO,SAC5B13B,GAAM03B,EACND,GAAa57B,EAAImE,EAAIlE,EAAI47B,EAAIp5B,EAAOq5B,CAAU,EAG9CF,GAAa37B,EAAI47B,EAAI77B,EAAImE,EAAI1B,EAAOq5B,CAAU,EAG1D,CC1BA,MAAME,GAAkBl8B,GAAM,CACtBA,EAAE,oBAAsB,SACxBA,EAAE,kBAAoB/F,EAAc+F,EAAE,QAAQ,WAAW,QAAQ,GAEjEA,EAAE,SAAS,OAASA,EAAE,oBACtBA,EAAE,SAAS,OAASA,EAAE,kBAE9B,EACO,SAASsrB,GAAOprB,EAAIC,EAAI,CAC3BF,GAAaF,GAA6BG,CAAE,EAAGH,GAA6BI,CAAE,CAAC,EAC/E+7B,GAAeh8B,CAAE,EACjBg8B,GAAe/7B,CAAE,CACrB,CCZO,SAASg8B,GAAQj8B,EAAIC,EAAI,CACxB,CAACD,EAAG,aAAe,CAACC,EAAG,aACvBmrB,GAAOprB,EAAIC,CAAE,EAEbD,EAAG,cAAgB,QAAaC,EAAG,UAAW,IAAK,OACnDD,EAAG,QAAO,EAELA,EAAG,cAAgB,QAAaC,EAAG,UAAW,IAAK,OACxDA,EAAG,QAAO,EAELD,EAAG,cAAgB,QAAaC,EAAG,UAAW,IAAK,SACxCD,EAAG,UAAW,GAAIC,EAAG,UAAW,EAAGA,EAAKD,GAChD,QAAO,CAEvB,CCXO,SAASk8B,GAAiBl8B,EAAIC,EAAIwC,EAAOq5B,EAAY,CACxD,OAAQ97B,EAAG,QAAQ,WAAW,KAAI,CAC9B,KAAKgS,GAAc,OAAQ,CACvB+pB,GAAO/7B,EAAIC,EAAIwC,EAAOq5B,CAAU,EAChC,KACH,CACD,KAAK9pB,GAAc,OAAQ,CACvBoZ,GAAOprB,EAAIC,CAAE,EACb,KACH,CACD,KAAK+R,GAAc,QAAS,CACxBiqB,GAAQj8B,EAAIC,CAAE,EACd,KACH,CACJ,CACL,CCjBA,MAAM5H,GAAS,EACR,MAAM8jC,WAAiB7Z,EAAwB,CAClD,YAAYxZ,EAAW,CACnB,MAAMA,CAAS,CAClB,CACD,OAAQ,CACP,CACD,MAAO,CACN,CACD,SAAS9I,EAAIyC,EAAO,CAChB,GAAIzC,EAAG,WAAaA,EAAG,SACnB,OAEJ,MAAM8I,EAAY,KAAK,UAAW1I,EAAOJ,EAAG,YAAW,EAAIo8B,EAAUp8B,EAAG,UAAS,EAAIxC,EAAQsL,EAAU,UAAU,SAAS,YAAY1I,EAAMg8B,EAAU/jC,EAAM,EAC5J,UAAW4H,KAAMzC,EAAO,CACpB,GAAIwC,IAAOC,GACP,CAACA,EAAG,QAAQ,WAAW,QACvBD,EAAG,QAAQ,WAAW,OAASC,EAAG,QAAQ,WAAW,MACrDA,EAAG,WACHA,EAAG,SACH,SAEJ,MAAMI,EAAOJ,EAAG,YAAW,EAAIo8B,EAAUp8B,EAAG,YAC5C,GAAI,KAAK,IAAI,KAAK,MAAMG,EAAK,CAAC,EAAI,KAAK,MAAMC,EAAK,CAAC,CAAC,EAAI+7B,EAAUC,EAC9D,SAEJ,MAAMviB,EAAOxf,EAAY8F,EAAMC,CAAI,EAAGi8B,EAAQF,EAAUC,EACpDviB,EAAOwiB,GAGXJ,GAAiBl8B,EAAIC,EAAIwC,EAAOqG,EAAU,OAAO,UAAU,CAC9D,CACJ,CACD,UAAUjI,EAAU,CAChB,OAAOA,EAAS,QAAQ,WAAW,MACtC,CACD,OAAQ,CACP,CACL,CCvCO,eAAe07B,GAAmCxrB,EAAQgQ,EAAU,GAAM,CAC7E,MAAMhQ,EAAO,cAAc,sBAAuBjI,GACvC,QAAQ,QAAQ,IAAIqzB,GAASrzB,CAAS,CAAC,EAC/CiY,CAAO,CACd,CCJA,MAAM1oB,GAAS,EACR,MAAMmkC,WAAmB9iB,CAAO,CACnC,YAAYhiB,EAAGN,EAAGqH,EAAQsD,EAAY,CAClC,MAAMrK,EAAGN,EAAGqH,CAAM,EAClB,KAAK,WAAasD,EAClB,KAAK,WAAa,CAAE,GAAGA,EAC1B,CACD,SAASzD,EAAO,CACZ,KAAM,CAAE,MAAAsV,EAAO,OAAAC,CAAM,EAAK,KAAK,WAAY,CAAE,EAAAnc,EAAG,EAAAN,CAAG,EAAGkH,EACtD,OAAQ,MAAM,SAASA,CAAK,GACxB,MAAM,SAAS,CAAE,EAAG5G,EAAIkc,EAAO,EAAAxc,EAAG,GAClC,MAAM,SAAS,CAAE,EAAGM,EAAIkc,EAAO,EAAGxc,EAAIyc,EAAQ,GAC9C,MAAM,SAAS,CAAE,EAAAnc,EAAG,EAAGN,EAAIyc,CAAM,CAAE,CAC1C,CACD,WAAW/L,EAAO,CACd,GAAI,MAAM,WAAWA,CAAK,EACtB,MAAO,GAEX,MAAM20B,EAAO30B,EAAO40B,EAAS50B,EAAO4f,EAAS,CACzC,EAAG5f,EAAM,SAAS,EAAI,KAAK,WAAW,MACtC,EAAGA,EAAM,SAAS,EAAI,KAAK,WAAW,MAClD,EACQ,GAAI40B,EAAO,SAAW,OAAW,CAC7B,MAAMC,EAAe,IAAIjjB,EAAOgO,EAAO,EAAGA,EAAO,EAAGgV,EAAO,OAASrkC,EAAM,EAC1E,OAAO,MAAM,WAAWskC,CAAY,CACvC,SACQF,EAAK,OAAS,OAAW,CAC9B,MAAMG,EAAS,IAAI7iB,GAAU2N,EAAO,EAAGA,EAAO,EAAG+U,EAAK,KAAK,MAAQpkC,GAAQokC,EAAK,KAAK,OAASpkC,EAAM,EACpG,OAAO,MAAM,WAAWukC,CAAM,CACjC,CACD,MAAO,EACV,CACL,CChCO,MAAMC,EAAY,CACrB,aAAc,CACV,KAAK,KAAO,EACZ,KAAK,MAAQ,IAAI7sB,EACjB,KAAK,MAAM,MAAQ,OACnB,KAAK,OAAS,EACjB,CACD,KAAKvU,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,EACnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE1B,CACL,CCnBO,MAAMqhC,EAAc,CACvB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,UAAY,CACpB,CACD,KAAKrhC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,GAEvDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE3B,CACL,CCpBO,MAAMshC,EAAM,CACf,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,MAAQ,IAAI/sB,EACjB,KAAK,MAAM,MAAQ,OACnB,KAAK,QAAU,GACf,KAAK,SAAW,IAChB,KAAK,OAAS,GACd,KAAK,UAAY,EACjB,KAAK,QAAU,EACf,KAAK,OAAS,IAAI6sB,GAClB,KAAK,UAAY,IAAIC,GACrB,KAAK,MAAQ,EACb,KAAK,KAAO,EACf,CACD,KAAKrhC,EAAM,CACFA,IAGDA,EAAK,KAAO,SACZ,KAAK,GAAKA,EAAK,IAEfA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEtB,KAAK,MAAQuU,EAAa,OAAO,KAAK,MAAOvU,EAAK,KAAK,EACnDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAExB,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,UAAU,KAAKA,EAAK,SAAS,EAC9BA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CClDA,MAAMq2B,GAAc,EAAGkL,GAAgB,EAAGjmC,GAAS,CAC/C,EAAG,EACH,EAAG,CACP,EAAGqwB,GAAc,EACjB,SAAS6V,GAAgB78B,EAAMC,EAAM68B,EAAan7B,EAAY0lB,EAAM,CAChE,KAAM,CAAE,GAAArtB,EAAI,GAAAC,EAAI,SAAAuqB,CAAU,EAAG3qB,EAAamG,EAAMC,CAAI,EACpD,GAAI,CAAConB,GAAQ7C,GAAYsY,EACrB,OAAOtY,EAEX,MAAMuY,EAAW,CACb,EAAG,KAAK,IAAI/iC,CAAE,EACd,EAAG,KAAK,IAAIC,CAAE,CACjB,EAAE+iC,EAAgB,CACf,EAAG,KAAK,IAAID,EAAS,EAAGp7B,EAAW,MAAQo7B,EAAS,CAAC,EACrD,EAAG,KAAK,IAAIA,EAAS,EAAGp7B,EAAW,OAASo7B,EAAS,CAAC,CAC9D,EACI,OAAO,KAAK,KAAKC,EAAc,GAAKtL,GAAcsL,EAAc,GAAKtL,EAAW,CACpF,CACO,MAAMuL,WAAe/a,EAAwB,CAChD,YAAYxZ,EAAW,CACnB,MAAMA,CAAS,EACf,KAAK,UAAY9I,GAAM,CACnB,GAAI,CAACA,EAAG,QAAQ,MACZ,OAEJ,MAAM8I,EAAY,KAAK,cAAe0nB,EAAexwB,EAAG,QAAQ,MAChE,IAAI0G,EAAY8pB,EAAa,KAAO,OAC9B1nB,EAAU,UAAU,WACpBA,EAAU,UAAU,YAAY,IAAI0nB,EAAa,EAAE,EACzD,GAAI9pB,EACA,OAEJ,MAAMK,EAAWypB,EAAa,MAC9B9pB,EAAYI,GAAmBC,EAAUypB,EAAa,MAAOA,EAAa,OAAO,EAC7EA,EAAa,KAAO,OACpB1nB,EAAU,UAAU,WAAapC,EAGjCoC,EAAU,UAAU,YAAY,IAAI0nB,EAAa,GAAI9pB,CAAS,CAE9E,EACQ,KAAK,cAAgBoC,CACxB,CACD,OAAQ,CACP,CACD,MAAO,CACH,KAAK,cAAc,UAAU,WAAa,OAC1C,KAAK,cAAc,UAAU,YAAc,IAAI,GAClD,CACD,SAAS9I,EAAI,CACT,GAAI,CAACA,EAAG,QAAQ,MACZ,OAEJA,EAAG,MAAQ,GACX,MAAMI,EAAOJ,EAAG,YAAW,EAAI8I,EAAY,KAAK,UAAW/G,EAAa+G,EAAU,OAAO,KACzF,GAAI1I,EAAK,EAAIrJ,GAAO,GAAKqJ,EAAK,EAAIrJ,GAAO,GAAKqJ,EAAK,EAAI2B,EAAW,OAAS3B,EAAK,EAAI2B,EAAW,OAC3F,OAEJ,MAAMu7B,EAAWt9B,EAAG,QAAQ,MAAOitB,EAAaqQ,EAAS,QAASJ,EAAcl9B,EAAG,OAAO,eAAiBonB,GAAaK,EAAO6V,EAAS,KACxI,IAAIx1B,EACA2f,EACA3f,EAAQ,IAAI00B,GAAWp8B,EAAK,EAAGA,EAAK,EAAG88B,EAAan7B,CAAU,EAG9D+F,EAAQ,IAAI4R,EAAOtZ,EAAK,EAAGA,EAAK,EAAG88B,CAAW,EAElD,MAAM1/B,EAAQsL,EAAU,UAAU,SAAS,MAAMhB,CAAK,EACtD,UAAW7H,KAAMzC,EAAO,CACpB,MAAM+/B,EAAWt9B,EAAG,QAAQ,MAC5B,GAAID,IAAOC,GACP,EAACs9B,GAAA,MAAAA,EAAU,SACXD,EAAS,KAAOC,EAAS,IACzBt9B,EAAG,UACHA,EAAG,WACH,CAACA,EAAG,OACJD,EAAG,MAAM,KAAK5C,GAAKA,EAAE,cAAgB6C,CAAE,GACvCA,EAAG,MAAM,KAAK7C,GAAKA,EAAE,cAAgB4C,CAAE,EACvC,SAEJ,MAAMK,EAAOJ,EAAG,cAChB,GAAII,EAAK,EAAItJ,GAAO,GAAKsJ,EAAK,EAAItJ,GAAO,GAAKsJ,EAAK,EAAI0B,EAAW,OAAS1B,EAAK,EAAI0B,EAAW,OAC3F,SAEJ,MAAM6iB,EAAWqY,GAAgB78B,EAAMC,EAAM68B,EAAan7B,EAAY0lB,GAAQ8V,EAAS,IAAI,EAC3F,GAAI3Y,EAAWsY,EACX,SAEJ,MAAM3M,GAAeyM,GAAgBpY,EAAWsY,GAAejQ,EAC/D,KAAK,UAAUjtB,CAAE,EACjBA,EAAG,MAAM,KAAK,CACV,YAAaC,EACb,QAASswB,CACzB,CAAa,CACJ,CACJ,CACD,UAAU1vB,EAAU,OAChB,MAAO,CAAC,GAACnF,EAAAmF,EAAS,QAAQ,QAAjB,MAAAnF,EAAwB,OACpC,CACD,qBAAqB6F,KAAYvC,EAAS,CACjCuC,EAAQ,QACTA,EAAQ,MAAQ,IAAIw7B,IAExB,UAAWtlC,KAAUuH,EACjBuC,EAAQ,MAAM,KAAK9J,GAAA,YAAAA,EAAQ,KAAK,CAEvC,CACD,OAAQ,CACP,CACL,CC9GO,eAAe+lC,GAAqBzsB,EAAQgQ,EAAU,GAAM,CAC/D,MAAMhQ,EAAO,cAAc,iBAAkB,MAAOjI,GACzC,QAAQ,QAAQ,IAAIu0B,GAAOv0B,CAAS,CAAC,EAC7CiY,CAAO,CACd,CCJO,SAAS0c,GAAar1B,EAASpI,EAAIC,EAAIy9B,EAAI,CAC9Ct1B,EAAQ,UAAS,EACjBA,EAAQ,OAAOpI,EAAG,EAAGA,EAAG,CAAC,EACzBoI,EAAQ,OAAOnI,EAAG,EAAGA,EAAG,CAAC,EACzBmI,EAAQ,OAAOs1B,EAAG,EAAGA,EAAG,CAAC,EACzBt1B,EAAQ,UAAS,CACrB,CACO,SAASu1B,GAAatc,EAAQ,CACjC,IAAIuc,EAAQ,GACZ,KAAM,CAAE,MAAAv1B,EAAO,IAAAC,EAAK,YAAA+U,EAAa,QAAAjV,EAAS,WAAArG,EAAY,MAAA6R,EAAO,eAAA5K,EAAgB,UAAA6mB,EAAW,QAAA7pB,EAAS,MAAA63B,CAAK,EAAKxc,EAC3G,GAAI/mB,EAAY+N,EAAOC,CAAG,GAAK+U,EAC3BlV,GAASC,EAASC,EAAOC,CAAG,EAC5Bs1B,EAAQ,WAEHC,EAAM,KAAM,CACjB,IAAIC,EACAC,EACJ,MAAMC,EAAQ,CACV,EAAG11B,EAAI,EAAIvG,EAAW,MACtB,EAAGuG,EAAI,CACnB,EACc21B,EAAKhkC,EAAaoO,EAAO21B,CAAK,EACpC,GAAIC,EAAG,UAAY5gB,EAAa,CAC5B,MAAM6gB,EAAK71B,EAAM,EAAK41B,EAAG,GAAKA,EAAG,GAAM51B,EAAM,EAC7Cy1B,EAAM,CAAE,EAAG,EAAG,EAAGI,CAAE,EACnBH,EAAM,CAAE,EAAGh8B,EAAW,MAAO,EAAGm8B,EACnC,KACI,CACD,MAAMC,EAAQ,CACV,EAAG71B,EAAI,EACP,EAAGA,EAAI,EAAIvG,EAAW,MACtC,EACkBq8B,EAAKnkC,EAAaoO,EAAO81B,CAAK,EACpC,GAAIC,EAAG,UAAY/gB,EAAa,CAE5B,MAAMghB,EAAK,EADAh2B,EAAM,EAAK+1B,EAAG,GAAKA,EAAG,GAAM/1B,EAAM,IAC3B+1B,EAAG,GAAKA,EAAG,IAC7BN,EAAM,CAAE,EAAGO,EAAI,EAAG,CAAC,EACnBN,EAAM,CAAE,EAAGM,EAAI,EAAGt8B,EAAW,OAChC,KACI,CACD,MAAMu8B,EAAQ,CACV,EAAGh2B,EAAI,EAAIvG,EAAW,MACtB,EAAGuG,EAAI,EAAIvG,EAAW,MAC1C,EACsBw8B,EAAKtkC,EAAaoO,EAAOi2B,CAAK,EACpC,GAAIC,EAAG,UAAYlhB,EAAa,CAC5B,MAAM6gB,EAAK71B,EAAM,EAAKk2B,EAAG,GAAKA,EAAG,GAAMl2B,EAAM,EAE7Cy1B,EAAM,CAAE,EADG,CAACI,GAAMK,EAAG,GAAKA,EAAG,IACd,EAAGL,CAAE,EACpBH,EAAM,CAAE,EAAGD,EAAI,EAAI/7B,EAAW,MAAO,EAAG+7B,EAAI,EAAI/7B,EAAW,MAAM,CACpE,CACJ,CACJ,CACG+7B,GAAOC,IACP51B,GAASC,EAASC,EAAOy1B,CAAG,EAC5B31B,GAASC,EAASE,EAAKy1B,CAAG,EAC1BH,EAAQ,GAEf,CACD,GAAI,CAACA,EACD,OAEJx1B,EAAQ,UAAYwL,EAChB5K,EAAe,SACfZ,EAAQ,yBAA2BY,EAAe,WAEtDZ,EAAQ,YAAcrC,GAAgB8pB,EAAW7pB,CAAO,EACxD,KAAM,CAAE,OAAAkD,CAAQ,EAAG20B,EACnB,GAAI30B,EAAO,OAAQ,CACf,MAAMQ,EAAc/F,GAAgBuF,EAAO,KAAK,EAC5CQ,IACAtB,EAAQ,WAAac,EAAO,KAC5Bd,EAAQ,YAAcrC,GAAgB2D,CAAW,EAExD,CACDtB,EAAQ,OAAM,CAClB,CACO,SAASo2B,GAAiBnd,EAAQ,CACrC,KAAM,CAAE,QAAAjZ,EAAS,KAAAhI,EAAM,KAAAC,EAAM,KAAAo+B,EAAM,eAAAz1B,EAAgB,cAAA01B,EAAe,gBAAAC,CAAiB,EAAGtd,EACtFoc,GAAar1B,EAAShI,EAAMC,EAAMo+B,CAAI,EAClCz1B,EAAe,SACfZ,EAAQ,yBAA2BY,EAAe,WAEtDZ,EAAQ,UAAYrC,GAAgB24B,EAAeC,CAAe,EAClEv2B,EAAQ,KAAI,CAChB,CACO,SAASw2B,GAAWC,EAAK,CAC5B,OAAAA,EAAI,KAAK,CAACt7B,EAAGD,IAAMC,EAAID,CAAC,EACjBu7B,EAAI,KAAK,GAAG,CACvB,CACO,SAASC,GAAiB9lB,EAAW+lB,EAAY,CACpD,MAAM7/B,EAAM0/B,GAAW5lB,EAAU,IAAI5b,GAAKA,EAAE,EAAE,CAAC,EAC/C,IAAIb,EAAMwiC,EAAW,IAAI7/B,CAAG,EAC5B,OAAI3C,IAAQ,SACRA,EAAM3D,EAAS,EACfmmC,EAAW,IAAI7/B,EAAK3C,CAAG,GAEpBA,CACX,CCjGA,MAAM2zB,GAAa,EAAG8O,GAAW,EAAG5X,GAAc,EAAGtsB,GAAO,GAAKmkC,GAAe,EACzE,MAAMC,EAAa,CACtB,YAAYp2B,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,cAAgB,CAAC9I,EAAIm/B,IAAS,CAC/B,MAAMC,EAAiBp/B,EAAG,QAAQ,MAClC,GAAI,EAACo/B,GAAA,MAAAA,EAAgB,QACjB,OAEJ,MAAMt2B,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAe7I,EAAKk/B,EAAK,YAAa/+B,EAAOJ,EAAG,YAAW,EAAIK,EAAOJ,EAAG,cAC/H,IAAI+F,EAAUm5B,EAAK,QACnBr2B,EAAU,OAAO,KAAKoC,GAAO,OACzB,IAAI2kB,EACJ,MAAMwP,GAAU3jC,EAAAsE,EAAG,QAAQ,UAAX,YAAAtE,EAAoB,MACpC,GAAI2jC,GAAA,MAAAA,EAAS,OAAQ,CACjB,MAAMC,EAAcD,EAAQ,UAAWE,EAAa57B,GAAgB07B,EAAQ,KAAK,EAAezmC,EAAS,EAAK0mC,GAC7FC,IACb1P,EAAY0P,EACZv5B,EAAUjM,EAAcslC,EAAQ,OAAO,EAE9C,CACD,GAAI,CAACxP,EAAW,CACZ,MAAMnpB,EAAY04B,EAAe,KAAO,OAClCt2B,EAAU,UAAU,YAAY,IAAIs2B,EAAe,EAAE,EACrDt2B,EAAU,UAAU,WAC1B+mB,EAAYppB,GAAazG,EAAIC,EAAIyG,CAAS,CAC7C,CACD,GAAI,CAACmpB,EACD,OAEJ,MAAMjc,EAAQ5T,EAAG,OAAO,YAAcg/B,GAAU3hB,EAAcrd,EAAG,OAAO,eAAiBonB,GAAa,CAAE,eAAApe,CAAc,EAAKzH,EAC3Ho8B,GAAa,CACT,QAASzyB,EACT,MAAA0I,EACA,MAAOxT,EACP,IAAKC,EACL,YAAAgd,EACA,WAAYvU,EAAU,OAAO,KAC7B,MAAOs2B,EACP,eAAgBp2B,EAChB,UAAA6mB,EACA,QAAA7pB,CACpB,CAAiB,CACjB,CAAa,CACb,EACQ,KAAK,kBAAoB,CAAChG,EAAIw/B,EAAOC,IAAU,CAC3C,MAAMjP,EAAexwB,EAAG,QAAQ,MAChC,GAAI,EAACwwB,GAAA,MAAAA,EAAc,QACf,OAEJ,MAAMkP,EAAkBlP,EAAa,UACrC,GAAI,CAACkP,EAAgB,OACjB,OAEJ,MAAM52B,EAAY,KAAK,UAAWvH,EAAUuH,EAAU,cAAe7I,EAAKu/B,EAAM,YAAa9B,EAAK+B,EAAM,YAAad,EAAkBe,EAAgB,UAAYF,EAAM,QAAUC,EAAM,SAAW3kC,GAChM6jC,GAAmBzO,IAGvBpnB,EAAU,OAAO,KAAKoC,GAAO,CACzB,MAAM9K,EAAOJ,EAAG,YAAa,EAAEK,EAAOJ,EAAG,YAAa,EAAEw+B,EAAOf,EAAG,YAAW,EAAIiC,EAAgB3/B,EAAG,OAAO,eAAiBonB,GAC5H,GAAI9sB,EAAY8F,EAAMC,CAAI,EAAIs/B,GAC1BrlC,EAAYmkC,EAAMp+B,CAAI,EAAIs/B,GAC1BrlC,EAAYmkC,EAAMr+B,CAAI,EAAIu/B,EAC1B,OAEJ,IAAIjB,EAAgB/6B,GAAgB+7B,EAAgB,KAAK,EACzD,GAAI,CAAChB,EAAe,CAChB,MAAMh4B,EAAY8pB,EAAa,KAAO,OAChC1nB,EAAU,UAAU,YAAY,IAAI0nB,EAAa,EAAE,EACnD1nB,EAAU,UAAU,WAC1B41B,EAAgBj4B,GAAazG,EAAIC,EAAIyG,CAAS,CACjD,CACIg4B,GAGLF,GAAiB,CACb,QAAStzB,EACT,KAAA9K,EACA,KAAAC,EACA,KAAAo+B,EACA,eAAgBl9B,EAAQ,eACxB,cAAAm9B,EACA,gBAAAC,CACpB,CAAiB,CACjB,CAAa,CACb,EACQ,KAAK,eAAiB,CAACp9B,EAASvB,EAAIm/B,EAAMS,IAAY,WAClD,MAAM3/B,EAAKk/B,EAAK,YAChB,GAAI,GAAEzjC,EAAA6F,EAAQ,QAAR,MAAA7F,EAAe,UAAU,UAAUC,EAAAsE,EAAG,QAAQ,QAAX,MAAAtE,EAAkB,UAAU,SACjE,OAEJ,MAAMkkC,GAAWxnB,EAAApY,EAAG,QAAH,YAAAoY,EAAU,OAAOjb,GAAK,CACnC,MAAM0iC,EAAW,KAAK,kBAAkB7/B,EAAI7C,EAAE,WAAW,EACzD,OAAQ6C,EAAG,QAAQ,OACf6/B,GAAY7/B,EAAG,QAAQ,MAAM,WAC7B2/B,EAAQ,UAAUl7B,GAAKA,EAAE,cAAgBtH,EAAE,WAAW,GAHa,CAIvF,GACY,GAAKyiC,GAAA,MAAAA,EAAU,OAGf,UAAWE,KAAUF,EAAU,CAC3B,MAAMnC,EAAKqC,EAAO,YAA4B,KAAK,sBAAsB//B,EAAIC,EAAIy9B,CAAE,EAChEn8B,EAAQ,MAAM,UAAU,WAG3C,KAAK,kBAAkBvB,EAAIm/B,EAAMY,CAAM,CAC1C,CACb,EACQ,KAAK,kBAAoB,CAAC//B,EAAIC,IACnB6+B,GAAiB,CAAC9+B,EAAIC,CAAE,EAAG,KAAK,OAAO,KAAK,EAEvD,KAAK,sBAAwB,CAACD,EAAIC,EAAIy9B,IAC3BoB,GAAiB,CAAC9+B,EAAIC,EAAIy9B,CAAE,EAAG,KAAK,OAAO,SAAS,EAE/D,KAAK,OAAS,CACV,MAAO,IAAI,IACX,UAAW,IAAI,GAC3B,CACK,CACD,aAAat1B,EAASvH,EAAU,CAC5B,KAAM,CAAE,MAAAg9B,EAAO,QAAAt8B,CAAS,EAAGV,EAC3B,GAAI,EAACg9B,GAAA,MAAAA,EAAO,QACR,OAEJ,MAAM+B,EAAU/B,EAAM,OAAOn5B,GAAKnD,EAAQ,QACrCA,EAAQ,MAAM,WAAa09B,IACxB,KAAK,kBAAkBp+B,EAAU6D,EAAE,WAAW,GAAKnD,EAAQ,MAAM,UAAU,EACnF,UAAW49B,KAAQS,EACf,KAAK,eAAer+B,EAASV,EAAUs+B,EAAMS,CAAO,EAChDT,EAAK,QAAUjP,KAAervB,EAAS,OAAO,YAAcm+B,IAAYA,IACxE,KAAK,cAAcn+B,EAAUs+B,CAAI,CAG5C,CACD,MAAM,MAAO,CACT,KAAK,OAAO,MAAQ,IAAI,IACxB,KAAK,OAAO,UAAY,IAAI,IAC5B,MAAM,QAAQ,SACjB,CACD,gBAAgBt+B,EAAU,CAEtB,GADAA,EAAS,MAAQ,GACb,CAACA,EAAS,QAAQ,MAClB,OAEJ,MAAMqc,EAAQ,KAAK,UAAU,OAAO,WAAY,CAAE,OAAA8iB,CAAM,EAAKn/B,EAAU,CAAE,SAAA+jB,EAAU,MAAAhR,CAAK,EAAK/S,EAAS,QAAQ,MAC9Gm/B,EAAO,cAAgBpb,EAAW1H,EAClC8iB,EAAO,WAAapsB,EAAQsJ,CAC/B,CACD,kBAAkBrc,EAAU,CACxBA,EAAS,MAAQ,EACpB,CACL,CCxJO,MAAMo/B,EAAY,CACrB,aAAc,CACV,KAAK,GAAK,OACb,CACD,UAAUn3B,EAAW,CACjB,OAAO,QAAQ,QAAQ,IAAIo2B,GAAap2B,CAAS,CAAC,CACrD,CACD,aAAc,CACb,CACD,aAAc,CACV,MAAO,EACV,CACL,CCZO,eAAeo3B,GAAgBnvB,EAAQgQ,EAAU,GAAM,CAC1D,MAAM5W,EAAS,IAAI81B,GACnB,MAAMlvB,EAAO,UAAU5G,EAAQ4W,CAAO,CAC1C,CCFO,eAAeof,GAA8BpvB,EAAQgQ,EAAU,GAAM,CACxE,MAAMyc,GAAqBzsB,EAAQgQ,CAAO,EAC1C,MAAMmf,GAAgBnvB,EAAQgQ,CAAO,CACzC,CCJA,MAAMqf,GAAQ,IAAKrpC,GAAS,CAAE,EAAG,EAAG,EAAG,CAAC,EAAIspC,GAAc,EACnD,SAASC,GAAY7kC,EAAM+jB,EAAO+gB,EAAM,CAC3C,KAAM,CAAE,QAAAn4B,CAAS,EAAG3M,EAAM+kC,EAAYD,EAAK,MAAM,UAAYA,EAAK,MAAM,YAAaE,EAAeF,EAAK,MAAM,UAAYA,EAAK,MAAM,YAAaG,EAAwBN,IAASK,EAAeJ,IAAgBI,EAAcE,EAAgB,KAAK,GAAKpmC,GAASmmC,CAAoB,EACxR,GAAKt4B,EAGL,CAAAA,EAAQ,UAAS,EACjBA,EAAQ,UAAUoX,EAAM,EAAGA,EAAM,CAAC,EAClCpX,EAAQ,OAAOrR,GAAO,EAAGA,GAAO,CAAC,EACjC,QAASyjB,EAAI,EAAGA,EAAIgmB,EAAWhmB,IAC3BpS,EAAQ,OAAOm4B,EAAK,OAAQxpC,GAAO,CAAC,EACpCqR,EAAQ,UAAUm4B,EAAK,OAAQxpC,GAAO,CAAC,EACvCqR,EAAQ,OAAOu4B,CAAa,EAEpC,CCbA,MAAMC,GAAe,EACd,MAAMC,EAAkB,CAC3B,KAAKplC,EAAM,CACP,KAAM,CAAE,SAAAoF,EAAU,OAAApC,CAAM,EAAKhD,EAAM+jB,EAAQ,KAAK,UAAU3e,EAAUpC,CAAM,EAAG8hC,EAAO,KAAK,aAAa1/B,EAAUpC,CAAM,EACtH6hC,GAAY7kC,EAAM+jB,EAAO+gB,CAAI,CAChC,CACD,cAAc1/B,EAAU,CACpB,MAAMigC,EAAUjgC,EAAS,UACzB,OAAO,KAAK,MAAM9G,GAAc+mC,GAAA,YAAAA,EAAS,QAASF,EAAY,CAAC,CAClE,CACL,CCXA,MAAMG,GAAoB,IAAKC,GAAU,KAAMC,GAAc,EACtD,MAAMC,WAAsBL,EAAkB,CACjD,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,WAAa,CAAC,SAAS,CAC/B,CACD,UAAUhgC,EAAUpC,EAAQ,CACxB,MAAO,CACH,EAAG,CAACA,GAAUoC,EAAS,MAAQkgC,IAC/B,EAAG,CAACtiC,GAAUuiC,GAAUD,GACpC,CACK,CACD,aAAalgC,EAAUpC,EAAQ,CAC3B,MAAMinB,EAAQ7kB,EAAS,MACvB,MAAO,CACH,MAAO,CACH,YAAa,EACb,UAAW6kB,CACd,EACD,OAASjnB,EAASuiC,IAAYtb,EAAQub,GAClD,CACK,CACL,CCtBA,MAAMD,GAAU,KAAMtb,GAAQ,EAAGrtB,GAAS,EACnC,MAAM8oC,WAAuBN,EAAkB,CAClD,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,WAAa,CAAC,UAAU,CAChC,CACD,UAAUhgC,EAAUpC,EAAQ,CACxB,MAAO,CACH,EAAG,CAACA,EACJ,EAAGA,EAASuiC,EACxB,CACK,CACD,eAAgB,CACZ,OAAOtb,EACV,CACD,aAAa7kB,EAAUpC,EAAQ,CAC3B,MAAMmY,EAAWnY,EAASpG,GAC1B,MAAO,CACH,MAAO,CACH,YAAa,EACb,UAAW,CACd,EACD,OAAQue,CACpB,CACK,CACL,CCxBO,eAAewqB,GAAwBrwB,EAAQgQ,EAAU,GAAM,CAClE,MAAMhQ,EAAO,SAAS,IAAImwB,GAAiBngB,CAAO,CACtD,CACO,eAAesgB,GAAkBtwB,EAAQgQ,EAAU,GAAM,CAC5D,MAAMhQ,EAAO,SAAS,IAAIowB,GAAkBpgB,CAAO,CACvD,CACO,eAAeugB,GAAiBvwB,EAAQgQ,EAAU,GAAM,CAC3D,MAAMqgB,GAAwBrwB,EAAQgQ,CAAO,EAC7C,MAAMsgB,GAAkBtwB,EAAQgQ,CAAO,CAC3C,CCVO,MAAMwgB,EAAgB,CACzB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,KAAO,EACf,CACD,KAAK9lC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,QAAU,SACf,KAAK,MAAQzB,EAAcyB,EAAK,KAAK,GAErCA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CCvBO,MAAM+lC,WAAervB,EAAgB,CACxC,aAAc,CACV,QACA,KAAK,UAAY,IAAIovB,GACrB,KAAK,UAAYhf,EAAgB,UACjC,KAAK,KAAO,GACZ,KAAK,MAAQ,CAChB,CACD,KAAK9mB,EAAM,CACFA,IAGL,MAAM,KAAKA,CAAI,EACXA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAE1B,KAAK,UAAU,KAAKA,EAAK,SAAS,EAC9BA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAExB,CACL,CCrBA,MAAMpD,GAAS,EAAGC,GAAW,KAAK,GAAKD,GAAQmR,GAAW,EAAGi4B,GAAc,IACpE,MAAMC,EAAc,CACvB,YAAY54B,EAAW,CACnB,KAAK,UAAYA,CACpB,CACD,KAAKjI,EAAU,CACX,MAAM8gC,EAAgB9gC,EAAS,QAAQ,OACvC,GAAI,CAAC8gC,EACD,OAEJ9gC,EAAS,OAAS,CACd,OAAQ8gC,EAAc,UAAU,OAChC,MAAOpnC,GAASR,EAAc4nC,EAAc,KAAK,CAAC,EAClD,IAAK,EACL,IAAKrpC,EACjB,EACQuI,EAAS,aAAe8gC,EAAc,KACtC,IAAIC,EAAkBD,EAAc,UAKpC,OAJIC,IAAoBrf,EAAgB,SAEpCqf,EADc,KAAK,MAAMhpC,EAAW,EAAGP,EAAM,EAAc,EACtBkqB,EAAgB,iBAAmBA,EAAgB,WAEpFqf,EAAe,CACnB,KAAKrf,EAAgB,iBACrB,IAAK,mBACD1hB,EAAS,OAAO,OAAS9E,EAAgB,WACzC,MACJ,KAAKwmB,EAAgB,UACjB1hB,EAAS,OAAO,OAAS9E,EAAgB,WACzC,KACP,CACD,MAAM8lC,EAAkBF,EAAc,UAClCE,EAAgB,SAChBhhC,EAAS,OAAO,MAAQ2I,GAAWzP,EAAc8nC,EAAgB,KAAK,EACtEhhC,EAAS,OAAO,SACX9G,EAAc8nC,EAAgB,KAAK,EAAIJ,GAAe,KAAK,UAAU,OAAO,aAC5EI,EAAgB,OACjBhhC,EAAS,OAAO,UAAYjI,MAGpCiI,EAAS,SAAWA,EAAS,OAAO,KACvC,CACD,UAAUA,EAAU,CAChB,MAAMu6B,EAASv6B,EAAS,QAAQ,OAChC,OAAKu6B,EAGE,CAACv6B,EAAS,WAAa,CAACA,EAAS,WAAa,CAAC,CAACu6B,EAAO,OAASA,EAAO,UAAU,QAAUA,EAAO,MAF9F,EAGd,CACD,YAAY75B,KAAYvC,EAAS,CACxBuC,EAAQ,SACTA,EAAQ,OAAS,IAAIigC,IAEzB,UAAW/pC,KAAUuH,EACjBuC,EAAQ,OAAO,KAAK9J,GAAA,YAAAA,EAAQ,MAAM,CAEzC,CACD,OAAOoJ,EAAU4B,EAAO,CACf,KAAK,UAAU5B,CAAQ,IAG5BA,EAAS,WAAa,CAAC,CAACA,EAAS,OAC5BA,EAAS,SAGd0B,GAAgB1B,EAAUA,EAAS,OAAQ,GAAO7E,GAAY,KAAMyG,CAAK,EACzE5B,EAAS,SAAWA,EAAS,OAAO,OACvC,CACL,CCrEO,eAAeihC,GAAkB/wB,EAAQgQ,EAAU,GAAM,CAC5D,MAAMhQ,EAAO,mBAAmB,SAAUjI,GAC/B,QAAQ,QAAQ,IAAI44B,GAAc54B,CAAS,CAAC,EACpDiY,CAAO,CACd,CCLA,MAAMghB,GAAmB,EAAGC,GAAY,KAAK,KAAKD,EAAgB,EAAG1pC,GAAS,EACvE,SAAS4pC,GAAWxmC,EAAM,CAC7B,KAAM,CAAE,QAAA2M,EAAS,OAAA3J,CAAQ,EAAGhD,EAAMymC,EAAczjC,EAASujC,GAAWG,EAAgBD,EAAc7pC,GAClG+P,EAAQ,KAAK,CAAC85B,EAAa,CAACA,EAAaC,EAAeA,CAAa,CACzE,CCHA,MAAMzc,GAAQ,EACP,MAAM0c,EAAa,CACtB,aAAc,CACV,KAAK,WAAa,CAAC,OAAQ,QAAQ,CACtC,CACD,KAAK3mC,EAAM,CACPwmC,GAAWxmC,CAAI,CAClB,CACD,eAAgB,CACZ,OAAOiqB,EACV,CACL,CCXO,eAAe2c,GAAgBtxB,EAAQgQ,EAAU,GAAM,CAC1D,MAAMhQ,EAAO,SAAS,IAAIqxB,GAAgBrhB,CAAO,CACrD,CCHA,MAAMuhB,GAAe,EAAGvrC,GAAS,CAAE,EAAG,EAAG,EAAG,GACrC,SAASwrC,GAAS9mC,EAAM,CAC3B,KAAM,CAAE,QAAA2M,EAAS,SAAAvH,EAAU,OAAApC,CAAM,EAAKhD,EAAMiqB,EAAQ7kB,EAAS,MAAO2hC,EAAQ3hC,EAAS,WAAayhC,GAClGl6B,EAAQ,OAAOrR,GAAO,EAAGA,GAAO,EAAI0H,CAAM,EAC1C,QAAS+b,EAAI,EAAGA,EAAIkL,EAAOlL,IACvBpS,EAAQ,OAAO,KAAK,GAAKsd,CAAK,EAC9Btd,EAAQ,OAAOrR,GAAO,EAAGA,GAAO,EAAI0H,EAAS+jC,CAAK,EAClDp6B,EAAQ,OAAO,KAAK,GAAKsd,CAAK,EAC9Btd,EAAQ,OAAOrR,GAAO,EAAGA,GAAO,EAAI0H,CAAM,CAElD,CCRA,MAAM6jC,GAAe,EAAG1B,GAAe,EAChC,MAAM6B,EAAW,CACpB,aAAc,CACV,KAAK,WAAa,CAAC,MAAM,CAC5B,CACD,KAAKhnC,EAAM,CACP8mC,GAAS9mC,CAAI,CAChB,CACD,cAAcoF,EAAU,CACpB,MAAM6hC,EAAO7hC,EAAS,UACtB,OAAO,KAAK,MAAM9G,GAAc2oC,GAAA,YAAAA,EAAM,QAAS9B,EAAY,CAAC,CAC/D,CACD,aAAa93B,EAAWjI,EAAU,CAC9B,MAAM6hC,EAAO7hC,EAAS,UACtBA,EAAS,UAAY9G,GAAc2oC,GAAA,YAAAA,EAAM,QAASJ,EAAY,CACjE,CACL,CCjBO,eAAeK,GAAc5xB,EAAQgQ,EAAU,GAAM,CACxD,MAAMhQ,EAAO,SAAS,IAAI0xB,GAAc1hB,CAAO,CACnD,CCFA,MAAMnU,GAAiB,EAChB,MAAMg2B,EAAmB,CAC5B,YAAY95B,EAAW,CACnB,KAAK,UAAYA,CACpB,CACD,KAAKjI,EAAU,OACX,MAAMiI,EAAY,KAAK,UAAWvH,EAAUV,EAAS,QAC/CwK,EAAShK,GAAyBE,EAAQ,OAAQV,EAAS,GAAIU,EAAQ,gBAAgB,EAC7FV,EAAS,YAAc9G,EAAcsR,EAAO,KAAK,EAAIvC,EAAU,OAAO,WACtEjI,EAAS,cAAgB9G,EAAcsR,EAAO,SAAWuB,EAAc,EACvE/L,EAAS,iBAAkBnF,EAAA2P,EAAO,QAAP,YAAA3P,EAAc,UACzC,MAAMmnC,EAAiB7+B,GAAgBqH,EAAO,KAAK,GAAKxK,EAAS,eAC7DgiC,IACAhiC,EAAS,YAAcuG,GAAuBy7B,EAAgBhiC,EAAS,gBAAiBiI,EAAU,OAAO,YAAY,EAE5H,CACD,UAAUjI,EAAU,CAChB,MAAM+C,EAAQ/C,EAAS,gBAAiB,CAAE,YAAAiiC,CAAW,EAAKjiC,EAC1D,MAAQ,CAACA,EAAS,WACd,CAACA,EAAS,UACV,CAAC,CAAC+C,KACAk/B,GAAA,YAAAA,EAAa,EAAE,SAAU,QAAaA,EAAY,EAAE,SACjDA,GAAA,YAAAA,EAAa,EAAE,SAAU,QAAaA,EAAY,EAAE,SACpDA,GAAA,YAAAA,EAAa,EAAE,SAAU,QAAaA,EAAY,EAAE,OAChE,CACD,OAAOjiC,EAAU4B,EAAO,CACf,KAAK,UAAU5B,CAAQ,GAG5BmH,GAAYnH,EAAS,YAAa4B,CAAK,CAC1C,CACL,CC/BO,eAAesgC,GAAuBhyB,EAAQgQ,EAAU,GAAM,CACjE,MAAMhQ,EAAO,mBAAmB,cAAejI,GACpC,QAAQ,QAAQ,IAAI85B,GAAmB95B,CAAS,CAAC,EACzDiY,CAAO,CACd,CCoBO,eAAeiiB,GAASjyB,EAAQgQ,EAAU,GAAM,CACnD,MAAMoa,GAAkBpqB,EAAQ,EAAK,EACrC,MAAMuZ,GAA+BvZ,EAAQ,EAAK,EAClD,MAAMsa,GAA8Bta,EAAQ,EAAK,EACjD,MAAM+c,GAA8B/c,EAAQ,EAAK,EACjD,MAAMye,GAA+Bze,EAAQ,EAAK,EAClD,MAAM0f,GAA4B1f,EAAQ,EAAK,EAC/C,MAAM6f,GAA6B7f,EAAQ,EAAK,EAChD,MAAMmgB,GAA4BngB,EAAQ,EAAK,EAC/C,MAAMwgB,GAA8BxgB,EAAQ,EAAK,EACjD,MAAM8hB,GAA+B9hB,EAAQ,EAAK,EAClD,MAAMsiB,GAA4BtiB,EAAQ,EAAK,EAC/C,MAAM0qB,GAAgC1qB,EAAQ,EAAK,EACnD,MAAMwrB,GAAmCxrB,EAAQ,EAAK,EACtD,MAAMovB,GAA8BpvB,EAAQ,EAAK,EACjD,MAAMuX,GAAoB,EAC1B,MAAMU,GAAejY,EAAQ,EAAK,EAClC,MAAM0oB,GAAe1oB,EAAQ,EAAK,EAClC,MAAM6pB,GAAc7pB,EAAQ,EAAK,EACjC,MAAMuwB,GAAiBvwB,EAAQ,EAAK,EACpC,MAAMsxB,GAAgBtxB,EAAQ,EAAK,EACnC,MAAM4xB,GAAc5xB,EAAQ,EAAK,EACjC,MAAM0pB,GAAgB1pB,EAAQ,EAAK,EACnC,MAAM+wB,GAAkB/wB,EAAQ,EAAK,EACrC,MAAMgyB,GAAuBhyB,EAAQ,EAAK,EAC1C,MAAMsX,GAAUtX,EAAQgQ,CAAO,CACnC,CC7CA,MAAMkiB,GAAqB,IAAM,CAC7B,KAAM,CAAC/gB,EAAMghB,CAAO,EAAIC,YAAS,EAAK,EAGtCC,GAAAA,UAAU,IAAM,CACZC,GAAoB,MAAOtyB,GAAW,CAMlC,MAAMiyB,GAASjyB,CAAM,CAAA,CAExB,EAAE,KAAK,IAAM,CACVmyB,EAAQ,EAAI,CAAA,CACf,CACL,EAAG,CAAE,CAAA,EAEC,MAAAI,EAAmBx6B,GAAc,CAAA,EAIvC,2BAES,SACGoZ,GAAAqhB,GAAA,IAACtoB,GAAA,CACG,GAAG,cACH,gBAAAqoB,EACA,QAAS/tC,EAAA,CAGrB,CAAA,CAAA,CAER,ECpCMiuC,GAAY,IAGZD,GAAA,IAAAE,YAAA,CAAA,SAAAC,GAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAAAH,GAAA,IAACN,GAAmB,EAAA,EACpBS,GAAAA,KAAC,MAAI,CAAA,UAAU,+FACb,SAAA,CAACH,GAAA,IAAA,KAAA,CAAG,UAAU,iCAAiC,SAAiB,oBAAA,EAC/DA,GAAA,IAAA,IAAA,CAAE,UAAU,sBAAsB,SAA0B,6BAAA,CAAA,EAC/D,CAAA,CACF,CAAA,CACF,CAAA","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224]}